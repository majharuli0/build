{"version":3,"file":"index-CiDzsOsY.js","sources":["../../src/Pages/AdminDashboard/components/barChart.jsx","../../src/Pages/AdminDashboard/components/totalSalesChart.jsx","../../src/Pages/AdminDashboard/count-utiles.jsx","../../src/Pages/AdminDashboard/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function BarChart({ data, graphTitle }) {\r\n  const yAxisData = data?.map((item) => item.name);\r\n  const seriesData = data?.map((item) => item.total_sales);\r\n  const maxLabelLength = 10;\r\n  const option = {\r\n    xAxis: {\r\n      max: \"dataMax\",\r\n    },\r\n    tooltip: {\r\n      formatter: function (params) {\r\n        return `${params.marker}${params.name}<br/>$${params.value}`; // Add dollar sign and use line breaks for column layout\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"10%\",\r\n      top: \"5%\",\r\n      containLabel: true,\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      data: yAxisData,\r\n      inverse: true,\r\n      animationDuration: 300,\r\n      animationDurationUpdate: 300,\r\n      axisLabel: {\r\n        formatter: function (value) {\r\n          // If the label (name) exceeds the max length, truncate it and add ellipsis\r\n          if (value.length > maxLabelLength) {\r\n            return value.substring(0, maxLabelLength) + \"...\";\r\n          }\r\n          return value;\r\n        },\r\n      },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"inside\",\r\n        yAxisIndex: 0,\r\n        start: 0,\r\n        end: 100,\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: graphTitle,\r\n        type: \"bar\",\r\n        // stack:'total',\r\n        data: seriesData,\r\n        itemStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          valueAnimation: true,\r\n          formatter: function (params) {\r\n            return `$${params.value}`; // Add dollar sign\r\n          },\r\n        },\r\n        barWidth: seriesData.length < 5 ? 30 : \"auto\",\r\n      },\r\n    ],\r\n    legend: {\r\n      show: false,\r\n    },\r\n    graphic:\r\n      seriesData.length === 0\r\n        ? {\r\n            type: \"text\",\r\n            left: \"center\",\r\n            top: \"middle\",\r\n            style: {\r\n              text: \"No Data Available\",\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              fill: \"#999\", // color of the text\r\n            },\r\n          }\r\n        : null,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function TotalSalesChart({ data }) {\r\n  const colorMapping = {\r\n    monitoring_station: \"#D90000\",\r\n    end_user: \"#4379EE\",\r\n    nursing_home: \"#F1963A\",\r\n  };\r\n  const roleMapping = {\r\n    monitoring_station: \"Control Centers Sales\",\r\n    end_user: \"End User Sales\",\r\n    nursing_home: \"Nursing Home sales\",\r\n  };\r\n\r\n  // Filter the user data for specific roles\r\n  const filteredData = data.filter((user) =>\r\n    [\"nursing_home\", \"end_user\", \"monitoring_station\"].includes(user.role)\r\n  );\r\n\r\n  // Prepare data for the chart, including colors\r\n  const chartData = filteredData.map((user) => ({\r\n    value: user.count,\r\n    name: roleMapping[user.role] || user.role,\r\n    itemStyle: { color: colorMapping[user.role] }, // Assign specific color\r\n  }));\r\n\r\n  // Calculate total value for the center of the pie chart\r\n  const totalValue = chartData.reduce((acc, curr) => acc + curr.value, 0);\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"0%\",\r\n      top: \"0%\",\r\n      containLabel: true,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"40%\", \"70%\"],\r\n        avoidLabelOverlap: false,\r\n        itemStyle: {\r\n          borderRadius: 10,\r\n          borderColor: \"#fff\",\r\n          borderWidth: 2,\r\n        },\r\n        label: {\r\n          show: false,\r\n          position: \"center\",\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: false,\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n        },\r\n        data: chartData,\r\n      },\r\n    ],\r\n    graphic: {\r\n      elements: [\r\n        {\r\n          type: \"text\",\r\n          id: \"center-total-text\",\r\n          left: \"center\",\r\n          top: \"53%\",\r\n          style: {\r\n            text: \"Total\",\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 16,\r\n          },\r\n        },\r\n        {\r\n          type: \"text\",\r\n          id: \"center-value-text\",\r\n          left: \"center\",\r\n          top: \"45%\",\r\n          style: {\r\n            text: totalValue,\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 22,\r\n            fontWeight: \"bold\",\r\n          },\r\n          // Position the value text slightly below the center\r\n          position: [0, 50], // Adjust the 20 value to control the vertical spacing\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"340px\", height: \"340px\" }}\r\n    />\r\n  );\r\n}\r\n","import { FiUser, FiUsers } from \"react-icons/fi\";\r\nimport {\r\n  MdOutlineRealEstateAgent,\r\n  MdOutlineSupportAgent,\r\n  MdOutlineAddHome,\r\n  MdOutlineElderly,\r\n  MdOutlineHomeRepairService,\r\n} from \"react-icons/md\";\r\nimport { RiPhoneFindLine, RiHospitalLine } from \"react-icons/ri\";\r\nimport { IoLogoAppleAr } from \"react-icons/io5\";\r\nimport { LuMonitorDot } from \"react-icons/lu\";\r\nexport const CountMapping = [\r\n  {\r\n    role: \"monitoring_agency\",\r\n    labelKey: \"roles.monitoring_stations\",\r\n    tab: \"Monitoring Stations\",\r\n    color: \"#5096F6\",\r\n    icon: LuMonitorDot,\r\n  },\r\n  {\r\n    role: \"distributor\",\r\n    labelKey: \"roles.distributors\",\r\n    tab: \"Distributors\",\r\n    color: \"#FA8035\",\r\n    icon: IoLogoAppleAr,\r\n  },\r\n  {\r\n    role: \"office\",\r\n    labelKey: \"roles.offices\",\r\n    tab: \"Offices\",\r\n    color: \"#D188E1\",\r\n    icon: MdOutlineRealEstateAgent,\r\n  },\r\n  {\r\n    role: \"sales_agent\",\r\n    labelKey: \"roles.sales_agents\",\r\n    tab: \"Sales Agents\",\r\n    color: \"#9C27B0\",\r\n    icon: MdOutlineHomeRepairService,\r\n  },\r\n  {\r\n    role: \"nursing_home\",\r\n    labelKey: \"roles.nursing_homes\",\r\n    tab: \"Nursing Homes\",\r\n    color: \"#3F51B5\",\r\n    icon: RiHospitalLine,\r\n  },\r\n  {\r\n    role: \"nurse\",\r\n    labelKey: \"roles.nurses\",\r\n    tab: \"Nurses\",\r\n    color: \"#F3C623\",\r\n    icon: MdOutlineElderly,\r\n  },\r\n  {\r\n    role: \"monitoring_station\",\r\n    labelKey: \"roles.control_centers\",\r\n    tab: \"Control Centers\",\r\n    color: \"#EA5A92\",\r\n    icon: RiPhoneFindLine,\r\n  },\r\n  {\r\n    role: \"installer\",\r\n    labelKey: \"roles.installers\",\r\n    tab: \"Installers\",\r\n    color: \"#4CAF50\",\r\n    icon: MdOutlineAddHome,\r\n  },\r\n  {\r\n    role: \"supports_agent\",\r\n    labelKey: \"roles.support_agents\",\r\n    tab: \"Support Agents\",\r\n    color: \"#17C3A5\",\r\n    icon: MdOutlineSupportAgent,\r\n  },\r\n  {\r\n    role: \"end_user\",\r\n    labelKey: \"roles.end_users\",\r\n    tab: \"End Users\",\r\n    color: \"#7DBBE2\",\r\n    icon: FiUser,\r\n  },\r\n  {\r\n    role: \"elderly\",\r\n    labelKey: \"roles.users\",\r\n    tab: \"Users\",\r\n    color: \"#E91E63\",\r\n    icon: FiUsers,\r\n  },\r\n];\r\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Tag,\r\n  Modal,\r\n  ConfigProvider,\r\n  Select,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { useroverViewCount } from \"@/api/AdminDashboard\";\r\nimport TabMenus from \"@/Components/TabMenus\";\r\nimport Monthcharts from \"./components/Monthcharts\";\r\nimport TimeSelection from \"@/Components/TimeSelection\";\r\nimport ls from \"store2\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport dayjs from \"dayjs\";\r\nimport BarChart from \"./components/barChart\";\r\nimport TotalSalesChart from \"./components/totalSalesChart\";\r\nimport TotalAlertsChart from \"./components/totalAlersChart\";\r\nimport { getUsersCount, getSalesReports } from \"@/api/Dashboard\";\r\nconst { RangePicker } = DatePicker;\r\nimport { CountMapping } from \"./count-utiles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst AdminDashboard = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { role } = useContext(SidebarContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [count, setCount] = useState([]);\r\n  const [todaySales, setTodaySales] = useState([]);\r\n  const [totalSales, setTotalSales] = useState([]);\r\n  const [distributorSales, setDistributorSales] = useState([]);\r\n\r\n  function AllCounts() {\r\n    getUsersCount()\r\n      .then((res) => {\r\n        const apiData = res?.data || [];\r\n\r\n        const mergedData = CountMapping.map((config) => {\r\n          const apiItem = apiData.find((item) => item.role === config.role);\r\n\r\n          return {\r\n            ...config,\r\n            count: apiItem ? apiItem.count : 0,\r\n          };\r\n        });\r\n\r\n        setCount(mergedData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function TodaySalesGraph(role = \"distributor\") {\r\n    const today_date = dayjs().format(\"YYYY-MM-DD\");\r\n    getSalesReports({ role: role, to_date: today_date })\r\n      .then((res) => {\r\n        setTodaySales(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function TotalSalesGraph(fromDate, toDate) {\r\n    getUsersCount({ from_date: fromDate, to_date: toDate })\r\n      .then((res) => {\r\n        setTotalSales(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function DistributorSalesGrpah(sortValue = \"-1\") {\r\n    getSalesReports({ role: \"distributor\", sort_by_sales: sortValue })\r\n      .then((res) => {\r\n        const filteredData = res.data?.filter((item) => item.name);\r\n        setDistributorSales(filteredData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    AllCounts();\r\n    TodaySalesGraph();\r\n    TotalSalesGraph();\r\n    DistributorSalesGrpah();\r\n  }, []);\r\n\r\n  //All Graph Controller Functions\r\n  function onTodaySalesRoleChnage(e) {\r\n    TodaySalesGraph(e.value);\r\n  }\r\n  function onDistributorSalesSortChange(e) {\r\n    DistributorSalesGrpah(e.value);\r\n  }\r\n  function onTotalSalesChange(date) {\r\n    TotalSalesGraph(date[0], date[1]);\r\n  }\r\n\r\n  const onChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    // <Spin spinning={loading}></Spin>\r\n    <div className=\"w-full flex flex-col gap-6 pt-6\">\r\n      <div className=\"rounded-2xl w-full flex flex-col gap-6 h-full\">\r\n        <div id=\"Reports\" className=\"w-full rounded-2xl flex flex-col gap-6\">\r\n          <div\r\n            id=\"Cards\"\r\n            className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7\"\r\n          >\r\n            {count?.map((item, key) => {\r\n              let IconName = item.icon;\r\n              return (\r\n                <div\r\n                  key={key}\r\n                  id=\"Card\"\r\n                  onClick={() =>\r\n                    item.tab\r\n                      ? navigate(`/super-admin/users?tab=${item.tab}`)\r\n                      : null\r\n                  }\r\n                  className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#fff] text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n                >\r\n                  <div\r\n                    id=\"circle\"\r\n                    style={{ backgroundColor: item.color, opacity: \"0.9\" }}\r\n                    className={`w-[100px] h-[100px] absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out`}\r\n                  ></div>\r\n                  <div\r\n                    id=\"circle\"\r\n                    style={{ backgroundColor: item.color, opacity: \"0.2\" }}\r\n                    className={`w-[100px] h-[100px] absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out`}\r\n                  ></div>\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: `${item.color}15`,\r\n                    }}\r\n                    className={`h-fit rounded-[8px] p-2`}\r\n                  >\r\n                    {IconName && (\r\n                      <IconName style={{ color: item?.color }} size={20} />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"flex flex-col items-start\">\r\n                    <h1 className=\"text-[26px] font-semibold leading-none text-text-primary\">\r\n                      {item.count ? item.count : 0}\r\n                    </h1>\r\n                    <span className=\"text-[14px] font-medium text-text-primary/70 leading-none\">\r\n                      {t(item.labelKey)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\r\n        <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[445px]\">\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">\r\n              {t(\"graph_chart.today_sales\", \"Today's Sales\")}\r\n            </h1>\r\n            <div id=\"chartController\" className=\"flex gap-4\">\r\n              <ConfigProvider\r\n                theme={{\r\n                  token: {\r\n                    fontFamily: \"Baloo2\",\r\n                    colorPrimary: \"#8086AC\",\r\n                    colorLinkActive: \"#8086AC\",\r\n                    colorLinkHover: \"#8086AC\",\r\n                    colorLink: \"#8086AC\",\r\n                  },\r\n                }}\r\n              >\r\n                <Select\r\n                  optionFilterProp=\"label\"\r\n                  onChange={onTodaySalesRoleChnage}\r\n                  defaultValue={\"distributor\"}\r\n                  size=\"large\"\r\n                  // className=\"w-[200px]\"\r\n                  dropdownMatchSelectWidth={false}\r\n                  //   className=\"custom-select\"\r\n                  labelInValue={true}\r\n                  options={[\r\n                    {\r\n                      value: \"distributor\",\r\n                      label: t(\"roles.distributor\"),\r\n                    },\r\n                    {\r\n                      value: \"sales_agent\",\r\n                      label: t(\"roles.sales_agent\"),\r\n                    },\r\n                    {\r\n                      value: \"monitoring_station\",\r\n                      label: t(\"roles.control_center\"),\r\n                    },\r\n                    {\r\n                      value: \"nursing_home\",\r\n                      label: t(\"roles.nursing_home\"),\r\n                    },\r\n                  ]}\r\n                />\r\n              </ConfigProvider>\r\n            </div>\r\n          </div>\r\n          <BarChart\r\n            data={todaySales}\r\n            graphTitle={t(\"today_sales\", \"Today's Sales\")}\r\n          />\r\n        </div>\r\n        <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full  h-[445px]\">\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">\r\n              {t(\"graph_chart.total_sales\")}\r\n            </h1>\r\n            <div id=\"chartController\" className=\"flex gap-4\">\r\n              <ConfigProvider\r\n                theme={{\r\n                  token: {\r\n                    fontFamily: \"Baloo2\",\r\n                    colorPrimary: \"#8086AC\",\r\n                    colorLinkActive: \"#8086AC\",\r\n                    colorLinkHover: \"#8086AC\",\r\n                    colorLink: \"#8086AC\",\r\n                  },\r\n                }}\r\n              >\r\n                <RangePicker\r\n                  showTime={false}\r\n                  style={{\r\n                    width: \"200px\",\r\n                    borderRadius: \"10px\",\r\n                    height: \"40px\",\r\n                    zIndex: \"1\",\r\n                  }}\r\n                  size=\"large\"\r\n                  placeholder={[\r\n                    t(\"pick_date_range_start\", \"Pick Data Range (Start)\"),\r\n                    t(\"pick_date_range_end\", \"End\"),\r\n                  ]}\r\n                  format=\"YYYY-MM-DD\"\r\n                  onChange={(value, dateString) =>\r\n                    onTotalSalesChange(dateString)\r\n                  }\r\n                />\r\n              </ConfigProvider>\r\n            </div>\r\n          </div>\r\n          <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n            <TotalSalesChart data={totalSales} />\r\n          </div>\r\n          <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n            <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n              <div className=\"flex gap-2 items-center\">\r\n                <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                <span className=\"text-lg font-medium\">\r\n                  {t(\"graph_chart.end_user_sales\")}\r\n                </span>\r\n              </div>\r\n              <span className=\"text-lg font-semibold\">\r\n                {totalSales?.find((user) => user.role === \"end_user\")?.count ||\r\n                  0}\r\n              </span>\r\n            </div>\r\n            <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n              <div className=\"flex gap-2 items-center\">\r\n                <div className=\"w-[12px] h-[12px] bg-[#F1963A] rounded-full\"></div>\r\n                <span className=\"text-lg font-medium\">\r\n                  {t(\"graph_chart.nursing_home_sales\")}\r\n                </span>\r\n              </div>\r\n              <span className=\"text-lg font-semibold\">\r\n                {\" \"}\r\n                {totalSales?.find((user) => user.role === \"nursing_home\")\r\n                  ?.count || 0}\r\n              </span>\r\n            </div>\r\n            <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n              <div className=\"flex gap-2 items-center\">\r\n                <div className=\"w-[12px] h-[12px] bg-[#D90000] rounded-full\"></div>\r\n                <span className=\"text-lg font-medium\">\r\n                  {t(\"graph_chart.control_centers_sales\")}\r\n                </span>\r\n              </div>\r\n              <span className=\"text-lg font-semibold\">\r\n                {totalSales?.find((user) => user.role === \"monitoring_station\")\r\n                  ?.count || 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\" p-[25px] rounded-2xl  bg-white  w-full  h-[445px]\">\r\n        <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n          <h1 className=\"text-[24px] font-bold\">\r\n            {t(\"graph_chart.distributor_sales\")}\r\n          </h1>\r\n          <div id=\"chartController\" className=\"flex gap-4\">\r\n            <ConfigProvider\r\n              theme={{\r\n                token: {\r\n                  fontFamily: \"Baloo2\",\r\n                  colorPrimary: \"#8086AC\",\r\n                  colorLinkActive: \"#8086AC\",\r\n                  colorLinkHover: \"#8086AC\",\r\n                  colorLink: \"#8086AC\",\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                optionFilterProp=\"label\"\r\n                onChange={onDistributorSalesSortChange}\r\n                defaultValue={\"-1\"}\r\n                size=\"large\"\r\n                dropdownMatchSelectWidth={false}\r\n                //   className=\"custom-select\"\r\n                labelInValue={true}\r\n                options={[\r\n                  {\r\n                    value: \"-1\",\r\n                    label: t(\"high_to_low\", \"High to Low\"),\r\n                  },\r\n                  {\r\n                    value: \"1\",\r\n                    label: t(\"low_to_high\", \"Low to High\"),\r\n                  },\r\n                ]}\r\n              />\r\n            </ConfigProvider>\r\n          </div>\r\n        </div>\r\n        <BarChart\r\n          data={distributorSales}\r\n          graphTitle={t(\"distributor_sales\", \"Distributor Sales\")}\r\n        />\r\n      </div>\r\n      {/* <div className=\" p-[25px] rounded-2xl  bg-white  w-full  lg:h-[445px] flex lg:flex-row flex-col  h-auto\">\r\n        <div className=\" lg:w-[50%] w-full flex flex-col gap-6 \">\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">{t(\"total_alerts\", \"Total Alerts\")}</h1>\r\n            <div id=\"chartController\" className=\"flex gap-4\">\r\n              <ConfigProvider\r\n                theme={{\r\n                  token: {\r\n                    fontFamily: \"Baloo2\",\r\n                    colorPrimary: \"#8086AC\",\r\n                    colorLinkActive: \"#8086AC\",\r\n                    colorLinkHover: \"#8086AC\",\r\n                    colorLink: \"#8086AC\",\r\n                  },\r\n                }}\r\n              >\r\n                <Select\r\n                  optionFilterProp=\"label\"\r\n                  onChange={onChange}\r\n                  defaultValue={\"distributor\"}\r\n                  size=\"large\"\r\n                  //   className=\"custom-select\"\r\n                  labelInValue={true}\r\n                  options={[\r\n                    {\r\n                      value: \"distributor\",\r\n                      label: t(\"distributor\", \"Distributor\"),\r\n                    },\r\n                    {\r\n                      value: \"Sales Agent\",\r\n                      label: t(\"sales_agent\", \"Sales Agent\"),\r\n                    },\r\n                    {\r\n                      value: \"Monitoring Company\",\r\n                      label: t(\"monitoring_company\", \"Monitoring Company\"),\r\n                    },\r\n                    {\r\n                      value: \"Nursing Home\",\r\n                      label: t(\"nursing_home\", \"Nursing Home\"),\r\n                    },\r\n                  ]}\r\n                />\r\n              </ConfigProvider>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"ChartInfo\"\r\n            className=\"grid lg:grid-cols-2 grid-cols-1  h-fit gap-6\"\r\n          >\r\n            {[1, 2, 3, 4, 5, 6, 7, 8].map((item, indx) => {\r\n              return (\r\n                <div\r\n                  key={indx}\r\n                  id=\"InfoItem\"\r\n                  className=\"w-full flex justify-between items-center\"\r\n                >\r\n                  <div className=\"flex gap-2 items-center\">\r\n                    <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\r\n                    <span className=\"text-lg font-medium\">\r\n                      {t(\"alert_n\", \"Alert\")} {indx + 1}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"text-lg font-semibold\">400</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"lg:w-[50%] w-full\">\r\n          <TotalAlertsChart />\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n// import React, { useEffect, useRef, useState, useContext } from \"react\";\r\n// import {\r\n//   Spin,\r\n//   Table,\r\n//   Tag,\r\n//   Modal,\r\n//   ConfigProvider,\r\n//   Select,\r\n//   DatePicker,\r\n// } from \"antd\";\r\n// import { useroverViewCount } from \"@/api/AdminDashboard\";\r\n// import TabMenus from \"@/Components/TabMenus\";\r\n// import Monthcharts from \"./components/Monthcharts\";\r\n// import TimeSelection from \"@/Components/TimeSelection\";\r\n// import ls from \"store2\";\r\n// import { SidebarContext } from \"@/Context/CustomContext\";\r\n// import dayjs from \"dayjs\";\r\n// import BarChart from \"./components/barChart\";\r\n// import TotalSalesChart from \"./components/totalSalesChart\";\r\n// import TotalAlertsChart from \"./components/totalAlersChart\";\r\n// import { getUsersCount, getSalesReports } from \"@/api/Dashboard\";\r\n// const { RangePicker } = DatePicker;\r\n// import { CountMapping } from \"./count-utiles\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// const AdminDashboard = () => {\r\n//   const navigate = useNavigate();\r\n//   const { role } = useContext(SidebarContext);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [count, setCount] = useState([]);\r\n//   const [todaySales, setTodaySales] = useState([]);\r\n//   const [totalSales, setTotalSales] = useState([]);\r\n//   const [distributorSales, setDistributorSales] = useState([]);\r\n\r\n//   function AllCounts() {\r\n//     getUsersCount()\r\n//       .then((res) => {\r\n//         const apiData = res?.data || [];\r\n\r\n//         const mergedData = CountMapping.map((config) => {\r\n//           const apiItem = apiData.find((item) => item.role === config.role);\r\n\r\n//           return {\r\n//             ...config,\r\n//             count: apiItem ? apiItem.count : 0,\r\n//           };\r\n//         });\r\n\r\n//         setCount(mergedData);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   }\r\n//   function TodaySalesGraph(role = \"distributor\") {\r\n//     const today_date = dayjs().format(\"YYYY-MM-DD\");\r\n//     getSalesReports({ role: role, to_date: today_date })\r\n//       .then((res) => {\r\n//         setTodaySales(res.data);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   }\r\n//   function TotalSalesGraph(fromDate, toDate) {\r\n//     getUsersCount({ from_date: fromDate, to_date: toDate })\r\n//       .then((res) => {\r\n//         setTotalSales(res.data);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   }\r\n//   function DistributorSalesGrpah(sortValue = \"-1\") {\r\n//     getSalesReports({ role: \"distributor\", sort_by_sales: sortValue })\r\n//       .then((res) => {\r\n//         const filteredData = res.data?.filter((item) => item.name);\r\n//         setDistributorSales(filteredData);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     AllCounts();\r\n//     TodaySalesGraph();\r\n//     TotalSalesGraph();\r\n//     DistributorSalesGrpah();\r\n//   }, []);\r\n\r\n//   //All Graph Controller Functions\r\n//   function onTodaySalesRoleChnage(e) {\r\n//     TodaySalesGraph(e.value);\r\n//   }\r\n//   function onDistributorSalesSortChange(e) {\r\n//     DistributorSalesGrpah(e.value);\r\n//   }\r\n//   function onTotalSalesChange(date) {\r\n//     TotalSalesGraph(date[0], date[1]);\r\n//   }\r\n\r\n//   const onChange = (value) => {\r\n//     console.log(`selected ${value}`);\r\n//   };\r\n\r\n//   return (\r\n//     // <Spin spinning={loading}></Spin>\r\n//     <div className=\"w-full flex flex-col gap-6 pt-6\">\r\n//       <div className=\"rounded-2xl w-full flex flex-col gap-6 h-full\">\r\n//         <div id=\"Reports\" className=\"w-full rounded-2xl flex flex-col gap-6\">\r\n//           <div\r\n//             id=\"Cards\"\r\n//             className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7\"\r\n//           >\r\n//             {count?.map((item, key) => {\r\n//               let IconName = item.icon;\r\n//               return (\r\n//                 <div\r\n//                   key={key}\r\n//                   id=\"Card\"\r\n//                   onClick={() =>\r\n//                     item.tab\r\n//                       ? navigate(`/super-admin/users?tab=${item.tab}`)\r\n//                       : null\r\n//                   }\r\n//                   className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#fff] text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n//                 >\r\n//                   <div\r\n//                     id=\"circle\"\r\n//                     style={{ backgroundColor: item.color, opacity: \"0.9\" }}\r\n//                     className={`w-[100px] h-[100px] absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out`}\r\n//                   ></div>\r\n//                   <div\r\n//                     id=\"circle\"\r\n//                     style={{ backgroundColor: item.color, opacity: \"0.2\" }}\r\n//                     className={`w-[100px] h-[100px] absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out`}\r\n//                   ></div>\r\n//                   <div\r\n//                     style={{\r\n//                       backgroundColor: `${item.color}15`,\r\n//                     }}\r\n//                     className={`h-fit rounded-[8px] p-2`}\r\n//                   >\r\n//                     {IconName && (\r\n//                       <IconName style={{ color: item?.color }} size={20} />\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"flex flex-col items-start\">\r\n//                     <h1 className=\"text-[26px] font-semibold leading-none text-text-primary\">\r\n//                       {item.count ? item.count : 0}\r\n//                     </h1>\r\n//                     <span className=\"text-[14px] font-medium text-text-primary/70 leading-none\">\r\n//                       {item.label}\r\n//                     </span>\r\n//                   </div>\r\n//                 </div>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\r\n//         <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[445px]\">\r\n//           <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n//             <h1 className=\"text-[24px] font-bold\">Today's Sales</h1>\r\n//             <div id=\"chartController\" className=\"flex gap-4\">\r\n//               <ConfigProvider\r\n//                 theme={{\r\n//                   token: {\r\n//                     fontFamily: \"Baloo2\",\r\n//                     colorPrimary: \"#8086AC\",\r\n//                     colorLinkActive: \"#8086AC\",\r\n//                     colorLinkHover: \"#8086AC\",\r\n//                     colorLink: \"#8086AC\",\r\n//                   },\r\n//                 }}\r\n//               >\r\n//                 <Select\r\n//                   optionFilterProp=\"label\"\r\n//                   onChange={onTodaySalesRoleChnage}\r\n//                   defaultValue={\"distributor\"}\r\n//                   size=\"large\"\r\n//                   // className=\"w-[200px]\"\r\n//                   dropdownMatchSelectWidth={false}\r\n//                   //   className=\"custom-select\"\r\n//                   labelInValue={true}\r\n//                   options={[\r\n//                     {\r\n//                       value: \"distributor\",\r\n//                       label: \"Distributor\",\r\n//                     },\r\n//                     {\r\n//                       value: \"sales_agent\",\r\n//                       label: \"Sales Agent\",\r\n//                     },\r\n//                     {\r\n//                       value: \"monitoring_station\",\r\n//                       label: \"Monitoring Station\",\r\n//                     },\r\n//                     {\r\n//                       value: \"nursing_home\",\r\n//                       label: \"Nursing Home\",\r\n//                     },\r\n//                   ]}\r\n//                 />\r\n//               </ConfigProvider>\r\n//             </div>\r\n//           </div>\r\n//           <BarChart data={todaySales} graphTitle=\"Today's Sales\" />\r\n//         </div>\r\n//         <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full  h-[445px]\">\r\n//           <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n//             <h1 className=\"text-[24px] font-bold\">Total Sales</h1>\r\n//             <div id=\"chartController\" className=\"flex gap-4\">\r\n//               <ConfigProvider\r\n//                 theme={{\r\n//                   token: {\r\n//                     fontFamily: \"Baloo2\",\r\n//                     colorPrimary: \"#8086AC\",\r\n//                     colorLinkActive: \"#8086AC\",\r\n//                     colorLinkHover: \"#8086AC\",\r\n//                     colorLink: \"#8086AC\",\r\n//                   },\r\n//                 }}\r\n//               >\r\n//                 <RangePicker\r\n//                   showTime={false}\r\n//                   style={{\r\n//                     width: \"200px\",\r\n//                     borderRadius: \"10px\",\r\n//                     height: \"40px\",\r\n//                     zIndex: \"1\",\r\n//                   }}\r\n//                   size=\"large\"\r\n//                   placeholder={[\"Pick Data Range (Start)\", \"End\"]}\r\n//                   format=\"YYYY-MM-DD\"\r\n//                   onChange={(value, dateString) =>\r\n//                     onTotalSalesChange(dateString)\r\n//                   }\r\n//                 />\r\n//               </ConfigProvider>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n//             <TotalSalesChart data={totalSales} />\r\n//           </div>\r\n//           <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n//             <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n//               <div className=\"flex gap-2 items-center\">\r\n//                 <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>{\" \"}\r\n//                 <span className=\"text-lg font-medium\">End User Sales</span>\r\n//               </div>\r\n//               <span className=\"text-lg font-semibold\">\r\n//                 {totalSales?.find((user) => user.role === \"end_user\")?.count ||\r\n//                   0}\r\n//               </span>\r\n//             </div>\r\n//             <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n//               <div className=\"flex gap-2 items-center\">\r\n//                 <div className=\"w-[12px] h-[12px] bg-[#F1963A] rounded-full\"></div>{\" \"}\r\n//                 <span className=\"text-lg font-medium\">Nursing Home Sales</span>\r\n//               </div>\r\n//               <span className=\"text-lg font-semibold\">\r\n//                 {\" \"}\r\n//                 {totalSales?.find((user) => user.role === \"nursing_home\")\r\n//                   ?.count || 0}\r\n//               </span>\r\n//             </div>\r\n//             <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n//               <div className=\"flex gap-2 items-center\">\r\n//                 <div className=\"w-[12px] h-[12px] bg-[#D90000] rounded-full\"></div>{\" \"}\r\n//                 <span className=\"text-lg font-medium\">\r\n//                   Control Centers Sales\r\n//                 </span>\r\n//               </div>\r\n//               <span className=\"text-lg font-semibold\">\r\n//                 {\" \"}\r\n//                 {totalSales?.find((user) => user.role === \"monitoring_station\")\r\n//                   ?.count || 0}\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\" p-[25px] rounded-2xl  bg-white  w-full  h-[445px]\">\r\n//         <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n//           <h1 className=\"text-[24px] font-bold\">Distributor Sales</h1>\r\n//           <div id=\"chartController\" className=\"flex gap-4\">\r\n//             <ConfigProvider\r\n//               theme={{\r\n//                 token: {\r\n//                   fontFamily: \"Baloo2\",\r\n//                   colorPrimary: \"#8086AC\",\r\n//                   colorLinkActive: \"#8086AC\",\r\n//                   colorLinkHover: \"#8086AC\",\r\n//                   colorLink: \"#8086AC\",\r\n//                 },\r\n//               }}\r\n//             >\r\n//               <Select\r\n//                 optionFilterProp=\"label\"\r\n//                 onChange={onDistributorSalesSortChange}\r\n//                 defaultValue={\"-1\"}\r\n//                 size=\"large\"\r\n//                 dropdownMatchSelectWidth={false}\r\n//                 //   className=\"custom-select\"\r\n//                 labelInValue={true}\r\n//                 options={[\r\n//                   {\r\n//                     value: \"-1\",\r\n//                     label: \"High to Low\",\r\n//                   },\r\n//                   {\r\n//                     value: \"1\",\r\n//                     label: \"Low to High\",\r\n//                   },\r\n//                 ]}\r\n//               />\r\n//             </ConfigProvider>\r\n//           </div>\r\n//         </div>\r\n//         <BarChart data={distributorSales} graphTitle=\"Distributor Sales\" />\r\n//       </div>\r\n//       {/* <div className=\" p-[25px] rounded-2xl  bg-white  w-full  lg:h-[445px] flex lg:flex-row flex-col  h-auto\">\r\n//         <div className=\" lg:w-[50%] w-full flex flex-col gap-6 \">\r\n//           <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n//             <h1 className=\"text-[24px] font-bold\">Total Alerts</h1>\r\n//             <div id=\"chartController\" className=\"flex gap-4\">\r\n//               <ConfigProvider\r\n//                 theme={{\r\n//                   token: {\r\n//                     fontFamily: \"Baloo2\",\r\n//                     colorPrimary: \"#8086AC\",\r\n//                     colorLinkActive: \"#8086AC\",\r\n//                     colorLinkHover: \"#8086AC\",\r\n//                     colorLink: \"#8086AC\",\r\n//                   },\r\n//                 }}\r\n//               >\r\n//                 <Select\r\n//                   optionFilterProp=\"label\"\r\n//                   onChange={onChange}\r\n//                   defaultValue={\"distributor\"}\r\n//                   size=\"large\"\r\n//                   //   className=\"custom-select\"\r\n//                   labelInValue={true}\r\n//                   options={[\r\n//                     {\r\n//                       value: \"distributor\",\r\n//                       label: \"Distributor\",\r\n//                     },\r\n//                     {\r\n//                       value: \"Sales Agent\",\r\n//                       label: \"Sales Agent\",\r\n//                     },\r\n//                     {\r\n//                       value: \"Monitoring Company\",\r\n//                       label: \"Monitoring Company\",\r\n//                     },\r\n//                     {\r\n//                       value: \"Nursing Home\",\r\n//                       label: \"Nursing Home\",\r\n//                     },\r\n//                   ]}\r\n//                 />\r\n//               </ConfigProvider>\r\n//             </div>\r\n//           </div>\r\n//           <div\r\n//             id=\"ChartInfo\"\r\n//             className=\"grid lg:grid-cols-2 grid-cols-1  h-fit gap-6\"\r\n//           >\r\n//             {[1, 2, 3, 4, 5, 6, 7, 8].map((item, indx) => {\r\n//               return (\r\n//                 <div\r\n//                   key={indx}\r\n//                   id=\"InfoItem\"\r\n//                   className=\"w-full flex justify-between items-center\"\r\n//                 >\r\n//                   <div className=\"flex gap-2 items-center\">\r\n//                     <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\r\n//                     <span className=\"text-lg font-medium\">\r\n//                       Alert {indx + 1}\r\n//                     </span>\r\n//                   </div>\r\n//                   <span className=\"text-lg font-semibold\">400</span>\r\n//                 </div>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"lg:w-[50%] w-full\">\r\n//           <TotalAlertsChart />\r\n//         </div>\r\n//       </div> */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n"],"names":["BarChart","data","graphTitle","yAxisData","item","seriesData","maxLabelLength","option","params","value","jsx","ReactEcharts","TotalSalesChart","colorMapping","roleMapping","chartData","user","totalValue","acc","curr","CountMapping","LuMonitorDot","IoLogoAppleAr","MdOutlineRealEstateAgent","MdOutlineHomeRepairService","RiHospitalLine","MdOutlineElderly","RiPhoneFindLine","MdOutlineAddHome","MdOutlineSupportAgent","FiUser","FiUsers","RangePicker","DatePicker","AdminDashboard","t","useTranslation","navigate","useNavigate","role","useContext","SidebarContext","loading","setLoading","useState","count","setCount","todaySales","setTodaySales","totalSales","setTotalSales","distributorSales","setDistributorSales","AllCounts","getUsersCount","res","apiData","mergedData","config","apiItem","err","TodaySalesGraph","today_date","dayjs","getSalesReports","TotalSalesGraph","fromDate","toDate","DistributorSalesGrpah","sortValue","filteredData","_a","useEffect","onTodaySalesRoleChnage","e","onDistributorSalesSortChange","onTotalSalesChange","date","jsxs","key","IconName","ConfigProvider","Select","dateString","_b","_c"],"mappings":"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"}