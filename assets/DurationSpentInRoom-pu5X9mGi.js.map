{"version":3,"file":"DurationSpentInRoom-pu5X9mGi.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Activity/Components/DurationSpentInRoom.jsx"],"sourcesContent":["import { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { getWalkStepsStatistics } from \"@/api/deviceReports\";\r\nimport { durationData } from \"./mockData\";\r\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\r\nimport { getTemplateData } from \"@/Pages/Elderlies/Components/Utiles/utiles\";\r\nimport MultibarChart from \"@/Components/GraphAndChart/multibarChart\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function DurationSpentInRoom() {\r\n  const { title, color, icon, dataAnalysis, summaryProps } = getTemplateData(\r\n    \"Duration Spent In Room\"\r\n  );\r\n\r\n  const context = useContext(CustomContext);\r\n  const {\r\n    chartToDate = \"\",\r\n    chartFromDate = \"\",\r\n    elderlyDetails,\r\n  } = context || {};\r\n  const [toDate, setToDate] = useState(\r\n    dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [fromDate, setFromDate] = useState(\r\n    dayjs().subtract(31, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [durationInRoom, setDurationInRoom] = useState([]);\r\n  const getWalkSpeedStatisticsData = useCallback(() => {\r\n    getWalkStepsStatistics({\r\n      uids: elderlyDetails?.deviceId,\r\n      elderly_id: elderlyDetails._id,\r\n\r\n      to_date: fromDate,\r\n      from_date: toDate,\r\n    })\r\n      .then((res) => {\r\n        setDurationInRoom(filterData(res?.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [toDate, elderlyDetails]);\r\n  useEffect(() => {\r\n    getWalkSpeedStatisticsData();\r\n  }, [getWalkSpeedStatisticsData]);\r\n  useEffect(() => {\r\n    if (chartToDate && chartFromDate) {\r\n      setToDate(chartToDate);\r\n      setFromDate(chartFromDate);\r\n    }\r\n  }, [chartToDate]);\r\n\r\n  function filterData(data) {\r\n    // Initialize the final array that will hold the structured data\r\n    const result = [];\r\n\r\n    // Iterate through each entry in the original data\r\n    data?.forEach((item) => {\r\n      const date = item.date; // Format date as YYYY-MM-DD\r\n\r\n      // Initialize the data object for each date entry\r\n      const entry = {\r\n        date: date,\r\n        data: [],\r\n      };\r\n\r\n      // Manually set status for specific fields and store them as objects\r\n      if (item.still_time !== undefined) {\r\n        entry.data.push({\r\n          name: \"still_time\",\r\n          value: convertDurationToMinutes(item.still_time),\r\n          status: \"30\",\r\n        });\r\n      }\r\n\r\n      if (item.walk_duration !== undefined) {\r\n        entry.data.push({\r\n          name: \"walking_duration\",\r\n          value: convertDurationToMinutes(item.walk_duration),\r\n          status: \"31\", // Set status for walking_duration\r\n        });\r\n      }\r\n\r\n      if (item.other_duration !== undefined) {\r\n        entry.data.push({\r\n          name: \"other_duration\",\r\n          value: convertDurationToMinutes(item.other_duration),\r\n          status: \"32\", // Set status for other_duration\r\n        });\r\n      }\r\n\r\n      // Push the formatted entry into the result array\r\n      result.push(entry);\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    return result;\r\n  }\r\n\r\n  // Helper function to convert time (HH:MM:SS) to minutes\r\n  function convertDurationToMinutes(duration) {\r\n    const [hours, minutes, seconds] = duration.split(\":\").map(Number);\r\n    return hours * 60 + minutes + seconds / 60;\r\n  }\r\n  return (\r\n    <Template\r\n      title={title}\r\n      color={color}\r\n      icon={icon}\r\n      dataAnalysis={dataAnalysis}\r\n      summaryProps={summaryProps}\r\n    >\r\n      <MultibarChart\r\n        data={durationInRoom}\r\n        fromDate={fromDate}\r\n        toDate={toDate}\r\n      />\r\n    </Template>\r\n  );\r\n}\r\n"],"names":["DurationSpentInRoom","title","color","icon","dataAnalysis","summaryProps","getTemplateData","context","useContext","CustomContext","chartToDate","chartFromDate","elderlyDetails","toDate","setToDate","useState","dayjs","fromDate","setFromDate","durationInRoom","setDurationInRoom","getWalkSpeedStatisticsData","useCallback","getWalkStepsStatistics","res","filterData","err","useEffect","data","result","item","entry","convertDurationToMinutes","duration","hours","minutes","seconds","jsx","Template","MultibarChart"],"mappings":"k0BASA,SAAwBA,GAAsB,CAC5C,KAAM,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,aAAAC,EAAc,aAAAC,GAAiBC,EACzD,wBAAA,EAGIC,EAAUC,aAAWC,CAAa,EAClC,CACJ,YAAAC,EAAc,GACd,cAAAC,EAAgB,GAChB,eAAAC,CAAA,EACEL,GAAW,CAAA,EACT,CAACM,EAAQC,CAAS,EAAIC,EAAA,SAC1BC,IAAQ,SAAS,EAAG,KAAK,EAAE,OAAO,YAAY,CAAA,EAE1C,CAACC,EAAUC,CAAW,EAAIH,EAAA,SAC9BC,IAAQ,SAAS,GAAI,KAAK,EAAE,OAAO,YAAY,CAAA,EAE3C,CAACG,EAAgBC,CAAiB,EAAIL,EAAA,SAAS,CAAE,CAAA,EACjDM,EAA6BC,EAAAA,YAAY,IAAM,CAC5BC,EAAA,CACrB,KAAMX,GAAA,YAAAA,EAAgB,SACtB,WAAYA,EAAe,IAE3B,QAASK,EACT,UAAWJ,CAAA,CACZ,EACE,KAAMW,GAAQ,CACKJ,EAAAK,EAAWD,GAAA,YAAAA,EAAK,IAAI,CAAC,CAAA,CACxC,EACA,MAAOE,GAAQ,CACd,QAAQ,IAAIA,CAAG,CAAA,CAChB,CAAA,EACF,CAACb,EAAQD,CAAc,CAAC,EAC3Be,EAAAA,UAAU,IAAM,CACaN,GAAA,EAC1B,CAACA,CAA0B,CAAC,EAC/BM,EAAAA,UAAU,IAAM,CACVjB,GAAeC,IACjBG,EAAUJ,CAAW,EACrBQ,EAAYP,CAAa,EAC3B,EACC,CAACD,CAAW,CAAC,EAEhB,SAASe,EAAWG,EAAM,CAExB,MAAMC,EAAS,CAAA,EAGT,OAAAD,GAAA,MAAAA,EAAA,QAASE,GAAS,CAItB,MAAMC,EAAQ,CACZ,KAJWD,EAAK,KAKhB,KAAM,CAAC,CAAA,EAILA,EAAK,aAAe,QACtBC,EAAM,KAAK,KAAK,CACd,KAAM,aACN,MAAOC,EAAyBF,EAAK,UAAU,EAC/C,OAAQ,IAAA,CACT,EAGCA,EAAK,gBAAkB,QACzBC,EAAM,KAAK,KAAK,CACd,KAAM,mBACN,MAAOC,EAAyBF,EAAK,aAAa,EAClD,OAAQ,IAAA,CACT,EAGCA,EAAK,iBAAmB,QAC1BC,EAAM,KAAK,KAAK,CACd,KAAM,iBACN,MAAOC,EAAyBF,EAAK,cAAc,EACnD,OAAQ,IAAA,CACT,EAIHD,EAAO,KAAKE,CAAK,CAAA,GAGnB,QAAQ,IAAIF,CAAM,EAEXA,CACT,CAGA,SAASG,EAAyBC,EAAU,CACpC,KAAA,CAACC,EAAOC,EAASC,CAAO,EAAIH,EAAS,MAAM,GAAG,EAAE,IAAI,MAAM,EACzD,OAAAC,EAAQ,GAAKC,EAAUC,EAAU,EAC1C,CAEE,OAAAC,EAAA,IAACC,EAAA,CACC,MAAArC,EACA,MAAAC,EACA,KAAAC,EACA,aAAAC,EACA,aAAAC,EAEA,SAAAgC,EAAA,IAACE,EAAA,CACC,KAAMpB,EACN,SAAAF,EACA,OAAAJ,CAAA,CACF,CAAA,CAAA,CAGN"}