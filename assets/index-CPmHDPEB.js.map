{"version":3,"file":"index-CPmHDPEB.js","sources":["../../src/Pages/Supportnursing/components/barChartByGender.jsx","../../src/Pages/Supportnursing/components/pieChart.jsx","../../src/Pages/Supportnursing/components/totalAlertChart.jsx","../../src/Pages/Supportnursing/components/barChart.jsx","../../src/Pages/Supportnursing/components/bubbleChart.jsx","../../src/Pages/Supportnursing/Dashboards/MonitoringStation.jsx","../../src/Pages/Supportnursing/components/salesOverviewChart.jsx","../../src/Pages/Supportnursing/components/totalSalesChart.jsx","../../src/Pages/Supportnursing/count-utiles.jsx","../../src/Pages/Supportnursing/utiles.jsx","../../src/Pages/Supportnursing/Dashboards/Installer.jsx","../../src/Pages/Supportnursing/Dashboards/MonitoringAgency.jsx","../../src/Pages/Supportnursing/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nexport default function BarChartByGender({ data = [], chartFor }) {\n  const [options, setOptions] = useState({});\n  useEffect(() => {\n    if (data.length === 0) {\n      setOptions({\n        graphic: {\n          type: \"text\",\n          left: \"center\",\n          top: \"middle\",\n          style: {\n            text: \"No Data Available\",\n            fontSize: 20,\n            fontWeight: \"bold\",\n            fill: \"#999\",\n          },\n        },\n      });\n      return;\n    }\n\n    // Default X-Axis for Age Chart\n    const defaultAgeXAxis = [\n      \"20-29\",\n      \"30-39\",\n      \"40-49\",\n      \"50-59\",\n      \"60-69\",\n      \"70-79\",\n      \"80-89\",\n      \"90-99\",\n    ];\n\n    // Prepare X-Axis and Y-Axis Data\n    const xAxisData =\n      chartFor === \"age\" ? defaultAgeXAxis : data.map((item) => item._id);\n    const yAxisData = [\n      {\n        name: \"Male\",\n        type: \"bar\",\n        color: \"#357AF6\",\n        data: xAxisData.map((range) => {\n          const found = data.find((item) => item._id === range);\n          return found ? found.male_count : 0;\n        }),\n      },\n      {\n        name: \"Female\",\n        type: \"bar\",\n        color: \"#5CC8BE\",\n        data: xAxisData.map((range) => {\n          const found = data.find((item) => item._id === range);\n          return found ? found.female_count : 0;\n        }),\n      },\n    ];\n    const maxValue = Math.max(...yAxisData.flatMap((item) => item.data));\n\n    // Define chart options dynamically\n    const newOptions = {\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: { type: \"shadow\" },\n      },\n      legend: {\n        show: true,\n        top: 0,\n        data: [\"Male\", \"Female\"],\n      },\n      grid: {\n        left: chartFor === \"age\" ? \"0%\" : \"5%\",\n        right: \"0%\",\n        bottom: \"10%\",\n        top: \"10%\",\n        containLabel: true,\n      },\n      series: yAxisData, // Series is the same for both chart types\n    };\n\n    if (chartFor === \"age\") {\n      newOptions.xAxis = {\n        type: \"category\",\n        data: xAxisData,\n      };\n      newOptions.yAxis = {\n        type: \"value\",\n        boundaryGap: [0, 0.01],\n        min: 0,\n        max: maxValue,\n        interval: 1,\n        axisLabel: {\n          formatter: (value) => {\n            // Display integer values only\n            return Math.floor(value);\n          },\n        },\n      };\n    } else if (chartFor === \"diseases\") {\n      newOptions.yAxis = {\n        type: \"category\",\n        data: xAxisData,\n      };\n      newOptions.xAxis = {\n        type: \"value\",\n        boundaryGap: [0, 0.01],\n        min: 0,\n        max: maxValue,\n        interval: 1,\n        axisLabel: {\n          formatter: (value) => {\n            // Display integer values only\n            return Math.floor(value);\n          },\n        },\n      };\n    }\n\n    setOptions(newOptions);\n  }, [data.length]);\n\n  return (\n    <ReactEcharts\n      notMerge={true}\n      option={options}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport ReactEcharts from \"echarts-for-react\";\nimport \"echarts/lib/chart/line\";\nimport \"echarts/lib/chart/lines\";\nimport \"echarts/lib/chart/bar\";\nimport grid from \"antd/es/grid\";\n\nexport default function PieChart({ data = [], chartFor }) {\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    let datForChart = data?.map((item) => {\n      if (chartFor === \"device\") {\n        const colorMap = {\n          completed: \"#08A1F7\", // Changed to hex code for green\n          pending: \"#922BF2\", // Changed to hex code for gray\n          not_started: \"#FF3B11\",\n        };\n\n        const colors = data.map((item) => colorMap[item._id]);\n\n        const newOptions = {\n          ...options,\n          color: colors,\n        };\n\n        setOptions(newOptions);\n        const nameMap = {\n          not_started: \"Not Started\",\n          completed: \"Completed\",\n          pending: \"Pending\",\n        };\n        return {\n          value: item.count,\n          name: nameMap[item._id] || item._id,\n        };\n      } else {\n        return {\n          value: item.male_count + item.female_count,\n          name:\n            item._id === \"male\"\n              ? \"Male\"\n              : item._id === \"fe-male\"\n              ? \"Female\"\n              : null,\n        };\n      }\n    });\n    setChartData(datForChart);\n  }, [data]);\n\n  const [options, setOptions] = useState({\n    title: {},\n    tooltip: {\n      trigger: \"item\",\n    },\n\n    legend: { show: false },\n    labelLine: {\n      show: false,\n    },\n    color: [\"#4379EE\", \"#5CC8BE\", \"#243642\", \"#BC7C7C\"],\n  });\n\n  useEffect(() => {\n    const newOptions = { ...options };\n    if (chartFor == \"gender\") {\n      newOptions.series = [\n        {\n          type: \"pie\",\n          radius: \"50%\",\n          data: chartData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\n            },\n          },\n        },\n      ];\n    } else if (chartFor == \"device\") {\n      newOptions.series = [\n        {\n          type: \"pie\",\n          radius: \"50%\",\n          data: chartData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\n            },\n          },\n        },\n      ];\n    }\n    setOptions(newOptions);\n  }, [chartFor, chartData]);\n\n  return (\n    <ReactEcharts\n      notMerge={true}\n      option={options}\n      style={{ width: \"340px\", height: \"340px\" }}\n    />\n  );\n}\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nexport default function TotalAlertChart({ data = [] }) {\n  // Calculate counts for each type\n  const problemCount = data\n    .filter((item) => item.type === 1)\n    .reduce((acc, curr) => acc + curr.count, 0);\n  const warningCount = data\n    .filter((item) => item.type === 2)\n    .reduce((acc, curr) => acc + curr.count, 0);\n  const criticalCount = data\n    .filter((item) => item.type === 3)\n    .reduce((acc, curr) => acc + curr.count, 0);\n\n  // Prepare data for the pie chart\n  const pieData = [\n    { value: problemCount, name: \"Info\" },\n    { value: warningCount, name: \"Warning\" },\n    { value: criticalCount, name: \"Critical\" },\n  ];\n\n  // Calculate the total value\n  const totalValue = pieData.reduce((sum, item) => sum + item.value, 0);\n\n  // ECharts option configuration\n  const option = {\n    tooltip: {\n      trigger: \"item\",\n      formatter: \"{a} <br/>{b}: {c} ({d}%)\",\n    },\n    color: [\"#4379EE\", \"#F1963A\", \"#D90000\"],\n    series: [\n      {\n        name: \"Activity\",\n        type: \"pie\",\n        radius: [\"40%\", \"70%\"],\n        avoidLabelOverlap: false,\n        itemStyle: {\n          borderRadius: 10,\n          borderColor: \"#fff\",\n          borderWidth: 2,\n        },\n        label: {\n          show: false,\n          formatter: \"{b}: {c} ({d}%)\",\n        },\n        emphasis: {\n          label: {\n            show: false,\n            fontSize: 18,\n            fontWeight: \"bold\",\n          },\n        },\n        data: data.length !== 0 ? pieData : null,\n      },\n    ],\n    graphic: {\n      elements: [\n        {\n          type: \"text\",\n          left: \"center\",\n          top: \"53%\",\n          style: {\n            text: \"Total\",\n            textAlign: \"center\",\n            fill: \"#333\",\n            fontSize: 16,\n          },\n        },\n        {\n          type: \"text\",\n          left: \"center\",\n          top: \"45%\",\n          style: {\n            text: totalValue.toString(),\n            textAlign: \"center\",\n            fill: \"#333\",\n            fontSize: 22,\n            fontWeight: \"bold\",\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <ReactEcharts option={option} style={{ width: \"340px\", height: \"340px\" }} />\n  );\n}\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport \"echarts/lib/chart/line\";\nimport \"echarts/lib/chart/lines\";\nimport \"echarts/lib/chart/bar\";\n\nexport default function BarChart({ data = [], graphTitle }) {\n  const yAxisData = data.map(\n    (item) => item.property_name || item.elderly_name || \"Unknown\"\n  );\n  const seriesData = data.map((item) => item.total_orders || item.count);\n  const option = {\n    xAxis: {\n      max: \"dataMax\",\n    },\n    tooltip: {},\n    grid: {\n      left: \"0%\",\n      right: \"0%\",\n      bottom: \"10%\",\n      top: \"5%\",\n      containLabel: true,\n    },\n    yAxis: {\n      type: \"category\",\n      data: yAxisData,\n      inverse: true,\n      animationDuration: 300,\n      animationDurationUpdate: 300,\n    },\n    dataZoom: [\n      {\n        type: \"inside\",\n        yAxisIndex: 0,\n        start: 0,\n        end: 100,\n      },\n    ],\n    series: [\n      {\n        name: graphTitle,\n        type: \"bar\",\n        // stack:'total',\n        data: seriesData,\n        itemStyle: {\n          color: \"#4379EE\",\n        },\n        label: {\n          show: true,\n          valueAnimation: true,\n        },\n        barWidth: seriesData.length < 5 ? 30 : \"auto\",\n      },\n    ],\n    label: {\n      show: true,\n      // formatter: \"{c}\", // Format to show dollar sign before the value\n    },\n    legend: {\n      show: false,\n    },\n    graphic:\n      seriesData.length === 0\n        ? {\n            type: \"text\",\n            left: \"center\",\n            top: \"middle\",\n            style: {\n              text: \"No Data Available\",\n              fontSize: 20,\n              fontWeight: \"bold\",\n              fill: \"#999\", // color of the text\n            },\n          }\n        : null,\n  };\n  return (\n    <ReactEcharts\n      notMerge={true}\n      option={option}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n  );\n}\n","import React from \"react\";\nimport ReactECharts from \"echarts-for-react\";\n\nconst BubbleChart = ({ data = [] }) => {\n  const hasData = data.length > 0;\n\n  const option = {\n    title: {},\n    tooltip: {\n      trigger: \"item\",\n      textStyle: {\n        color: \"#333\", // Text color\n        fontSize: 16,\n        fontFamily: \"Arial, sans-serif\",\n      },\n      formatter: function (params) {\n        return `\n            <div style=\"padding: 5px; text-align: left;\">\n              <div><strong>Activity:</strong> ${params.data[0]}</div>\n              <div><strong>Count:</strong> ${params.data[1]}</div>\n            </div>\n          `;\n      },\n    },\n    grid: {\n      left: \"2%\",\n      right: \"0%\",\n      bottom: \"30%\",\n      top: \"12%\",\n      containLabel: true,\n    },\n    xAxis: {\n      type: \"category\",\n      axisLabel: {\n        show: false, // Hide x-axis labels\n      },\n      axisLine: {\n        show: false, // Hide x-axis line\n      },\n      axisTick: {\n        show: false, // Hide x-axis ticks\n      },\n    },\n    yAxis: {\n      type: \"value\",\n      name: \"Count\",\n      nameLocation: \"center\",\n      nameGap: 40,\n      scale: true, // Enables dynamic scaling for the y-axis\n      splitLine: {\n        show: false, // Optional: Hide grid lines for a cleaner look\n      },\n    },\n    dataZoom: hasData\n      ? [\n          {\n            type: \"inside\", // Enables scrolling and zooming\n            start: 0,\n            end: 100,\n          },\n          {\n            type: \"slider\",\n            start: 0,\n            end: 100,\n          },\n        ]\n      : [], // No zoom bar if there's no data\n    series: hasData\n      ? [\n          {\n            type: \"scatter\",\n            symbolSize: function (value) {\n              // Dynamic bubble size with an upper limit for large datasets\n              return Math.min(Math.sqrt(value[1]) * 5, 40);\n            },\n            data: data.map((item) => [item.property_name, item.count]),\n            label: {\n              show: false, // Turn off bubble labels for large datasets\n            },\n            itemStyle: {\n              color: \"rgba(67, 121, 238, 0.8)\", // Semi-transparent shade\n            },\n          },\n        ]\n      : [],\n  };\n  if (data.length === 0) {\n    return (\n      <div className=\"w-full h-full flex items-center justify-center\">\n        {\" \"}\n        <span className=\"text-[#999999] font-semibold text-xl\">\n          {\" \"}\n          No Data Available\n        </span>{\" \"}\n      </div>\n    );\n  }\n  return (\n    <ReactECharts\n      option={option}\n      style={{ height: \"370px\", width: \"100%\" }}\n      opts={{ renderer: \"canvas\" }} // Ensures canvas-based rendering for responsiveness\n    />\n  );\n};\n\nexport default BubbleChart;\n","import React, { useRef } from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport BarChartByGender from \"../components/barChartByGender\";\nimport PieChart from \"../components/pieChart\";\nimport { ConfigProvider } from \"antd\";\nimport { Select } from \"antd\";\nimport TotalAlertChart from \"../components/totalAlertChart\";\nimport BarChart from \"../components/barChart\";\nimport {\n  getChartByGender,\n  getChartByAge,\n  getDiseasesCountByGender,\n} from \"@/api/Dashboard\";\nimport BubbleChart from \"../components/bubbleChart\";\nimport { useRefContext } from \"@/Context/RefContext\";\n\nexport default function MonitoringStation({\n  count,\n  chartByAge = [],\n  chartByGender = [],\n  diseasesCountByGender = [],\n  alertsCountByName = [],\n  alertsCountByElderly = [],\n}) {\n  const { registerRef } = useRefContext();\n\n  // const [chartByGender, setChartByGender] = useState([]);\n  // const [chartByAge, setChartByAge] = useState([]);\n  // const [diseasesCountByGender, setDiseasesCountByGender] = useState([]);\n  // //Chart by gender (male and female)\n  // const ChartByGender = useCallback(() => {\n  //   getChartByGender()\n  //     .then((res) => {\n  //       console.log(res);\n  //       setChartByGender(res.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }, []);\n\n  // //chart by age with range\n  // const ChartByAge = useCallback(() => {\n  //   getChartByAge()\n  //     .then((res) => {\n  //       console.log(res);\n  //       setChartByAge(res.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }, []);\n\n  // //Diseses count by gender\n  // const DiseasesCountByGender = useCallback(() => {\n  //   getDiseasesCountByGender()\n  //     .then((res) => {\n  //       console.log(res);\n  //       setDiseasesCountByGender(res.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   ChartByGender();\n  //   ChartByAge();\n  //   DiseasesCountByGender();\n  // }, []);\n  const stepsRef = {\n    usersCountM: useRef(null),\n    mostAlertM: useRef(null),\n    activityCountM: useRef(null),\n    agesM: useRef(null),\n    genderM: useRef(null),\n    diseasesM: useRef(null),\n    activityM: useRef(null),\n  };\n\n  useEffect(() => {\n    Object.keys(stepsRef).forEach((key) => {\n      if (stepsRef[key].current) {\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\n      }\n    });\n  }, [registerRef]);\n  return (\n    <div className=\"w-full flex flex-col gap-6 pt-6\">\n      <div className=\"flex gap-6 lg:flex-row flex-col h-fit\">\n        <div className=\"rounded-2xl lg:w-[75%] w-full flex flex-col gap-6 h-full\">\n          <div id=\"Reports\" className=\"w-full rounded-2xl flex flex-col gap-6\">\n            <div\n              id=\"Cards\"\n              className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3\"\n              ref={stepsRef.usersCountM}\n            >\n              {count?.map((item, key) => {\n                let IconName = item.icon;\n                return (\n                  <div\n                    key={key}\n                    id=\"Card\"\n                    style={{ backgroundColor: item?.color }}\n                    className=\"cursor-pointer group flex w-full items-center p-4 py-6 text-white gap-3 rounded-[12px] relative overflow-hidden\"\n                  >\n                    <div\n                      id=\"circle\"\n                      className=\"w-[100px] h-[100px] bg-white/20 absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out\"\n                    ></div>\n                    <div\n                      id=\"circle\"\n                      className=\"w-[100px] h-[100px] bg-white/10 absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out\"\n                    ></div>\n                    <div className=\"bg-opacity-10 h-fit rounded-[8px] p-2 bg-black/20\">\n                      {IconName && <IconName color=\"#fff\" size={20} />}\n                    </div>\n                    <div className=\"flex flex-col items-start\">\n                      <h1 className=\"text-[26px] font-semibold leading-none\">\n                        {item.count || 0}\n                      </h1>\n                      <span className=\"text-[14px] font-medium text-white/70 leading-none\">\n                        {item.label}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n              {/* {[1, 2, 3].map((item, key) => (\n              <div\n                key={key}\n                id=\"Card\"\n                className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#0F60FF] text-white gap-3 rounded-[12px] relative overflow-hidden\"\n              >\n                <div\n                  id=\"circle\"\n                  className=\"w-[100px] h-[100px] bg-white/20 absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out\"\n                ></div>\n                <div\n                  id=\"circle\"\n                  className=\"w-[100px] h-[100px] bg-white/10 absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out\"\n                ></div>\n                <div className=\"bg-opacity-10 h-fit rounded-[8px] p-2 bg-black/20\">\n                  <FiUser color=\"#fff\" size={20} />\n                </div>\n                <div className=\"flex flex-col items-start\">\n                  <h1 className=\"text-[26px] font-semibold leading-none\">\n                    1.6k\n                  </h1>\n                  <span className=\"text-[14px] font-medium text-white/70 leading-none\">\n                    Customers\n                  </span>\n                </div>\n              </div>\n            ))} */}\n            </div>\n          </div>\n          <div\n            className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\n            ref={stepsRef.agesM}\n          >\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n              <h1 className=\"text-[24px] font-bold\">Ages</h1>\n            </div>\n            <BarChartByGender\n              // data={\n              //   chartByAge.length > 0\n              //     ? chartByAge\n              //     : [\n              //         {\n              //           _id: \"20-29\",\n              //           male_count: 4,\n              //           female_count: 0,\n              //         },\n              //         {\n              //           _id: \"70-79\",\n              //           male_count: 0,\n              //           female_count: 2,\n              //         },\n              //         {\n              //           _id: \"90-99\",\n              //           male_count: 1,\n              //           female_count: 1,\n              //         },\n              //       ]\n              // }\n              data={chartByGender}\n              chartFor=\"age\"\n            />\n          </div>\n          <div\n            className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\n            ref={stepsRef.diseasesM}\n          >\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n              <h1 className=\"text-[24px] font-bold\">Diseases</h1>\n            </div>\n            <BarChartByGender\n              // data={\n              //   diseasesCountByGender.length > 0\n              //     ? diseasesCountByGender\n              //     : [\n              //         {\n              //           _id: \"Diabetes5\",\n              //           male_count: 0,\n              //           female_count: 1,\n              //         },\n              //         {\n              //           _id: \"Hypertension5\",\n              //           male_count: 0,\n              //           female_count: 1,\n              //         },\n              //       ]\n              // }\n              data={diseasesCountByGender}\n              chartFor=\"diseases\"\n            />\n          </div>\n        </div>\n\n        <div className=\"rounded-2xl lg:w-[35%] w-full flex flex-col gap-6 h-full\">\n          <div\n            className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\"\n            ref={stepsRef.genderM}\n          >\n            <div>\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                <h1 className=\"text-[24px] font-bold\">Gender</h1>\n              </div>\n              <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\n                <PieChart\n                  // data={\n                  //   chartByGender.length > 0\n                  //     ? chartByGender\n                  //     : [\n                  //         {\n                  //           _id: \"fe-male\",\n                  //           male_count: 0,\n                  //           female_count: 3,\n                  //         },\n                  //         {\n                  //           _id: \"male\",\n                  //           male_count: 5,\n                  //           female_count: 0,\n                  //         },\n                  //       ]\n                  // }\n                  data={chartByAge}\n                  chartFor=\"gender\"\n                />\n              </div>\n            </div>\n\n            <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                <div className=\"flex gap-2 items-center\">\n                  <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\n                  <span className=\"text-lg font-medium\">Total</span>\n                </div>\n                <span className=\"text-lg font-semibold\">\n                  {chartByAge.reduce(\n                    (acc, item) => acc + item.male_count + item.female_count,\n                    0\n                  )}\n                </span>\n              </div>\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                <div className=\"flex gap-2 items-center\">\n                  <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\n                  <span className=\"text-lg font-medium\">Male</span>\n                </div>\n                <span className=\"text-lg font-semibold\">\n                  {chartByAge.map((item) =>\n                    item._id === \"male\" ? item.male_count || 0 : 0\n                  )}\n                  {chartByAge.length === 0 && <>0</>}\n                </span>\n              </div>\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                <div className=\"flex gap-2 items-center\">\n                  <div className=\"w-[12px] h-[12px] bg-[#5CC8BE] rounded-full\"></div>\n                  <span className=\"text-lg font-medium\">Female</span>\n                </div>\n                <span className=\"text-lg font-semibold\">\n                  {\" \"}\n                  {chartByAge.map((item) =>\n                    item._id === \"female\" ? item.male_count || 0 : 0\n                  )}\n                  {chartByAge.length === 0 && <>0</>}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\"\n            ref={stepsRef.activityM}\n          >\n            <div>\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                <h1 className=\"text-[24px] font-bold\">Activity</h1>\n                <div id=\"chartController\" className=\"flex gap-4\"></div>\n              </div>\n              <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\n                <TotalAlertChart data={alertsCountByName} />\n              </div>\n            </div>\n\n            <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                <div className=\"flex gap-2 items-center\">\n                  <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\n                  <span className=\"text-lg font-medium\">Info</span>\n                </div>\n                <span className=\"text-lg font-semibold\">\n                  {alertsCountByName\n                    .filter((item) => item.type === 1)\n                    .reduce((acc, curr) => acc + curr.count, 0)}\n                </span>\n              </div>\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                <div className=\"flex gap-2 items-center\">\n                  <div className=\"w-[12px] h-[12px] bg-[#F1963A] rounded-full\"></div>\n                  <span className=\"text-lg font-medium\">Warning</span>\n                </div>\n                <span className=\"text-lg font-semibold\">\n                  {alertsCountByName\n                    .filter((item) => item.type === 2)\n                    .reduce((acc, curr) => acc + curr.count, 0)}\n                </span>\n              </div>\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                <div className=\"flex gap-2 items-center\">\n                  <div className=\"w-[12px] h-[12px] bg-[#D90000] rounded-full\"></div>\n                  <span className=\"text-lg font-medium\">Critical</span>\n                </div>\n                <span className=\"text-lg font-semibold\">\n                  {alertsCountByName\n                    .filter((item) => item.type === 3)\n                    .reduce((acc, curr) => acc + curr.count, 0)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"w-full flex gap-6 xl:flex-row flex-col h-[500px] justify-between\">\n        <div\n          className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\n          ref={stepsRef.mostAlertM}\n        >\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n            <h1 className=\"text-[24px] font-bold\">Most Alerts</h1>\n          </div>\n          <BarChart data={alertsCountByElderly} />\n        </div>\n        <div\n          className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\n          ref={stepsRef.activityCountM}\n        >\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n            <h1 className=\"text-[24px] font-bold\">Activity Count</h1>\n          </div>\n          <BubbleChart data={alertsCountByName} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport \"echarts/lib/chart/line\";\nimport \"echarts/lib/chart/lines\";\nimport \"echarts/lib/chart/bar\";\n\nexport default function SalesOverviewChart({ data = [] }) {\n  // Extract _id (dates) and total_orders\n  const datesArray = data.map((item) => item._id);\n  const totalOrdersArray = data.map((item) => item.total_orders);\n\n  const option = {\n    tooltip: {\n      trigger: \"axis\",\n    },\n    grid: {\n      left: \"0%\",\n      right: \"0%\",\n      bottom: \"10%\",\n      containLabel: true,\n    },\n    xAxis: {\n      type: \"category\",\n      data: datesArray,\n    },\n    yAxis: {\n      type: \"value\",\n    },\n    series: [\n      {\n        data: totalOrdersArray,\n        type: \"line\",\n        symbol: \"circle\",\n        symbolSize: 10,\n        itemStyle: {\n          color: \"#4379EE\",\n        },\n        areaStyle: {\n          color: {\n            type: \"linear\",\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1, // Gradient from top (y=0) to bottom (y=1)\n            colorStops: [\n              { offset: 0, color: \"rgba(67, 121, 238, 0.5)\" }, // Top: Transparent\n              { offset: 1, color: \"rgba(255, 255, 255, 0) \" }, // Bottom: Blue with 50% opacity\n            ],\n          },\n        },\n\n        lineStyle: {\n          color: \"#4379EE\",\n        },\n      },\n    ],\n    graphic:\n      totalOrdersArray.length === 0\n        ? {\n            type: \"text\",\n            left: \"center\",\n            top: \"middle\",\n            style: {\n              text: \"No Data Available\",\n              fontSize: 20,\n              fontWeight: \"bold\",\n              fill: \"#999\", // color of the text\n            },\n          }\n        : null,\n  };\n  return (\n    <ReactEcharts\n      notMerge={true}\n      option={option}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport \"echarts/lib/chart/line\";\nimport \"echarts/lib/chart/lines\";\nimport \"echarts/lib/chart/bar\";\n\nexport default function TotalSalesChart({ data = [], chartFor = \"\" }) {\n  const totalValue = data.reduce((sum, item) => sum + item.total_orders, 0);\n  const [colorMapping, setColorMapping] = useState({});\n  const propertyNamesMapping = {\n    completed: \"Completed\",\n    pending: \"In Progress\",\n    cancelled: \"Cancelled\",\n    not_started: \"Not Started\",\n  };\n  useEffect(() => {\n    if (chartFor === \"totalSales\") {\n      setColorMapping({\n        completed: \"#4379EE\",\n        pending: \"#F1963A\",\n        cancelled: \"#D90000\",\n      });\n    } else if (chartFor === \"totalInstallations\") {\n      setColorMapping({\n        completed: \"#36b610\",\n        pending: \"#833af1\",\n        not_started: \"#5d5d5d\",\n      });\n    }\n  }, [chartFor]);\n  const option = {\n    tooltip: {\n      trigger: \"item\",\n    },\n    grid: {\n      left: \"0%\",\n      right: \"0%\",\n      bottom: \"0%\",\n      top: \"0%\",\n      containLabel: true,\n    },\n    // color: Object.values(colorMapping),\n    series: [\n      {\n        type: \"pie\",\n        radius: [\"40%\", \"70%\"],\n        avoidLabelOverlap: false,\n        itemStyle: {\n          borderRadius: 10,\n          borderColor: \"#fff\",\n          borderWidth: 2,\n        },\n        label: {\n          show: false,\n          position: \"center\",\n        },\n        emphasis: {\n          label: {\n            show: false,\n          },\n        },\n        labelLine: {\n          show: true,\n        },\n        data: data.map((item) => ({\n          value: item.total_orders,\n          name: propertyNamesMapping[item.property_name] || \"Unknown Status\",\n          itemStyle: {\n            color: colorMapping[item.property_name],\n          },\n        })),\n      },\n    ],\n    graphic: {\n      elements: [\n        {\n          type: \"text\",\n          id: \"center-total-text\",\n          left: \"center\",\n          top: \"53%\",\n          style: {\n            text: \"Total\",\n            textAlign: \"center\",\n            fill: \"#333\",\n            fontSize: 16,\n          },\n        },\n        {\n          type: \"text\",\n          id: \"center-value-text\",\n          left: \"center\",\n          top: \"45%\",\n          style: {\n            text: totalValue,\n            textAlign: \"center\",\n            fill: \"#333\",\n            fontSize: 22,\n            fontWeight: \"bold\",\n          },\n          // Position the value text slightly below the center\n          position: [0, 50], // Adjust the 20 value to control the vertical spacing\n        },\n      ],\n    },\n  };\n\n  return (\n    <ReactEcharts\n      notMerge={true}\n      option={option}\n      style={{ width: \"340px\", height: \"340px\" }}\n    />\n  );\n}\n","import { FiUser } from \"react-icons/fi\";\nimport { MdOutlineRealEstateAgent } from \"react-icons/md\";\nimport { MdOutlineSupportAgent } from \"react-icons/md\";\nimport { RiPhoneFindLine } from \"react-icons/ri\";\nimport { MdOutlineAddHome } from \"react-icons/md\";\nimport { IoLogoAppleAr } from \"react-icons/io5\";\nimport { MdOutlineElderly } from \"react-icons/md\";\nimport { PiBuildingOffice } from \"react-icons/pi\";\nimport { BiDevices } from \"react-icons/bi\";\n\nexport const CountMapping = [\n  {\n    role: \"monitoring_station\",\n    label: \"Monitoring Station\",\n    color: \"#EA5A92\",\n    icon: RiPhoneFindLine,\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\n  },\n  {\n    role: \"supports_agent\",\n    label: \"Support Agent\",\n    color: \"#17C3A5\",\n    icon: MdOutlineSupportAgent,\n    rolesAllowed: [\"supports_agent\", \"monitoring_station\"],\n  },\n  {\n    role: \"nursing_home\",\n    label: \"Nursing Home\",\n    color: \"#5096F6\",\n    icon: MdOutlineAddHome,\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\n  },\n  {\n    role: \"distributor\",\n    label: \"Distributor\",\n    color: \"#FA8035\",\n    icon: IoLogoAppleAr,\n    rolesAllowed: [],\n  },\n  {\n    role: \"sales_agent\",\n    label: \"Sales Agent\",\n    color: \"#D188E1\",\n    icon: MdOutlineRealEstateAgent,\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\n  },\n  {\n    role: \"end_user\",\n    label: \"End User\",\n    color: \"#7DBBE2\",\n    icon: FiUser,\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\n  },\n  {\n    role: \"installer\",\n    label: \"Installer\",\n    color: \"#7695FF\",\n    icon: FiUser,\n    rolesAllowed: [\"monitoring_station\", \"office\", \"sales_agent\"],\n  },\n  {\n    role: \"elderly\",\n    label: \"Elderly\",\n    color: \"#FF885B\",\n    icon: MdOutlineElderly,\n    rolesAllowed: [\"monitoring_station\"],\n  },\n  {\n    role: \"office\",\n    label: \"Office\",\n    color: \"#FF885B\",\n    icon: PiBuildingOffice,\n    rolesAllowed: [\"\"],\n  },\n  {\n    role: \"device\",\n    label: \"Device\",\n    color: \"#FF885B\",\n    icon: BiDevices,\n    rolesAllowed: [],\n  },\n];\n","import { Tag } from \"antd\";\nimport ReportActionModal from \"@/Components/ReportActionModal/ReportActionModal\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ConfigProvider, Select } from \"antd\";\nimport {\n  activeSubscriptions,\n  updateInstallationStatus,\n} from \"@/api/ordersManage\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport { getUserDetails } from \"@/api/Users\";\nimport SuccessModal from \"@/Shared/Success/SuccessModal\";\nfunction StatusDropdown({ row }) {\n  const sharedMethod = useContext(SidebarContext);\n  const [status, setStatus] = useState(row?.installation_status);\n  const [handleLoading, sethandleLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  // let status = row?.status\n  const handleChange = (value) => {\n    setStatus(value);\n    if (value === \"completed\") {\n      setModalOpen(true);\n    } else {\n      sethandleLoading(true);\n      updateInstallationStatus(row?._id, {\n        installation_status: value,\n      })\n        .then((res) => {\n          console.log(res);\n          sharedMethod.getInstallationList.getCompletedandToBeInstalled();\n          sharedMethod.getInstallationList.getDeviceSalesCounts();\n          if (res) {\n            setStatus(value);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setStatus(row?.installation_status);\n        })\n        .finally(() => {\n          sethandleLoading(false);\n        });\n    }\n  };\n  const completeChnage = async () => {\n    sethandleLoading(true);\n    const isAIMonitoring = row?.products.filter(\n      (item) => item?.type === \"AI Monitoring\"\n    );\n    if (isAIMonitoring.length > 0) {\n      await getUserDetails({\n        id: row?.user_id,\n      })\n        .then((user) => {\n          if (user) {\n            activeSubscriptions({\n              subscription_id: user?.data?.subscription_id,\n              extend_day: \"30\",\n            })\n              .then(() => {})\n              .catch((err) => {\n                console.log(err);\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n\n    await updateInstallationStatus(row?._id, {\n      installation_status: \"completed\",\n    })\n      .then((res) => {\n        sharedMethod.getList();\n        if (res) {\n          setStatus(\"completed\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setStatus(\"completed\");\n      })\n      .finally(() => {\n        sethandleLoading(false);\n      });\n  };\n  // Update local state if row status changes\n  useEffect(() => {\n    setStatus(row?.installation_status);\n  }, [row?.installation_status]);\n  return (\n    <div className=\"flex items-center space-x-2 mr-0 \">\n      <span\n        className={`w-3 h-3 rounded-full relative -right-2 ${\n          status === \"completed\"\n            ? \"bg-[#1EB564]\"\n            : status === \"pending\"\n            ? \"bg-yellow-500\"\n            : \"bg-red-500\"\n        }`}\n      ></span>\n      {/* Status select dropdown */}\n      <ConfigProvider\n        theme={{\n          token: {\n            colorText: \"#707EAE\",\n            colorPrimary: \"#8086AC\",\n            colorLinkActive: \"#8086AC\",\n            colorLinkHover: \"#8086AC\",\n            colorLink: \"#8086AC\",\n          },\n        }}\n      >\n        <Select\n          value={status}\n          variant=\"borderless\"\n          onChange={handleChange}\n          loading={handleLoading}\n          optionSelectedColor=\"#8086AC\"\n          className=\"w-fit !text-red-100\"\n          options={[\n            { value: \"completed\", label: <span>Complete</span> },\n            { value: \"pending\", label: <span>Pending</span> },\n            { value: \"not_started\", label: <span>Not Started</span> },\n          ]}\n        />\n        <SuccessModal\n          modalOPen={modalOpen}\n          setModalOpen={setModalOpen}\n          title={\"\"}\n          title2={\n            \"Are you sure you want to change the status to 'Completed'? Once confirmed, this action cannot be undone, and user subscription will start immediately from now.\"\n          }\n          okText=\"Confirm\"\n          onOk={() => completeChnage()}\n        />\n      </ConfigProvider>\n    </div>\n  );\n}\nconst dealDetailCol = [\n  {\n    title: \"Office Identifier\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          {row.office_name}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Agent Name (ID Number)\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          {row.agent_name} ({row.agent_unique_id})\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Date of Sales\",\n    render: (row) => {\n      const formattedDate = new Date(row.created_at).toLocaleDateString(\n        \"en-CA\"\n      );\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {formattedDate}\n          </span>\n        </button>\n      );\n    },\n  },\n  // {\n  //   title: \"Approval Date\",\n  //   render: (row) => (\n  //     <button>\n  //       <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n  //         {row.approvalDate}\n  //       </span>\n  //     </button>\n  //   ),\n  // },\n  {\n    title: \"Product Name\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\n          {/* {row.products.map(\n            (item, indx) =>\n              [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\n              indx < 2 && <span key={indx}>{item.type}</span>\n          )} */}\n          {row.products\n            .filter((item, indx, self) => {\n              const isUniqueSeenyorKit =\n                item.type === \"Seenyor Kit\" &&\n                self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\n              return (\n                !/^AI Sensor/.test(item.type) &&\n                (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\n              );\n            })\n            .map((item, indx) => {\n              const color =\n                item.type === \"Seenyor Kit\"\n                  ? \"blue\"\n                  : item.type === \"Installation\"\n                  ? \"orange\"\n                  : \"default\";\n              return (\n                <Tag key={indx} color={color}>\n                  {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\n                </Tag>\n              );\n            })}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Product Price\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\n          $\n          {row.products\n            .filter((item) =>\n              [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              )\n            )\n            .reduce((total, item) => total + item.price, 0)\n            .toFixed(2)}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Addon Name\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\n          {/* {row.products.map(\n            (item, indx) =>\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              ) && <span key={indx}>{item.type}</span>\n          )} */}\n          {row.products\n            .filter(\n              (item) =>\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                  item.type\n                )\n            )\n            .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\n          0 ? (\n            <span>--</span>\n          ) : (\n            row.products\n              .filter(\n                (item) =>\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                    item.type\n                  )\n              )\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\n          )}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Addon Price\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          {row.products\n            .map((item, indx) =>\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              ) ? (\n                <span key={indx}>${item.price.toFixed(2)}</span>\n              ) : null\n            )\n            .filter(Boolean).length === 0 ? (\n            <span>--</span>\n          ) : (\n            row.products.map((item, indx) =>\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              ) ? (\n                <span key={indx}>${item.price.toFixed(2)}</span>\n              ) : null\n            )\n          )}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Total Price\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          ${row.total.toFixed(2)}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Location\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          {row.address?.line1},{\" \"}\n          {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\n          {row.address?.city}, {row.address?.state},{\" \"}\n          {row.address ? row.address.postal_code : \" \"}, {row.address?.country}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Status\",\n    dataIndex: \"payment_status\",\n    key: \"payment_status\",\n    filters: [\n      { text: \"Pending\", value: \"pending\" },\n      { text: \"Cancelled\", value: \"cancelled\" },\n      { text: \"Completed\", value: \"completed\" },\n    ],\n    filterMultiple: true,\n    onFilter: (value, record) => record.payment_status.includes(value),\n    render: (status, record) => {\n      let color = \"\";\n\n      switch (status) {\n        case \"pending\":\n          color = \"orange\";\n          break;\n        case \"cancelled\":\n          color = \"red\";\n          break;\n        case \"completed\":\n          color = \"green\";\n          break;\n        default:\n          color = \"black\";\n      }\n\n      return (\n        <span\n          style={{\n            backgroundColor: color,\n            color: \"white\",\n            padding: \"4px 8px\",\n            borderRadius: \"4px\",\n            fontWeight: 500,\n            textTransform: \"capitalize\",\n          }}\n        >\n          {status}\n        </span>\n      );\n    },\n  },\n];\n\nconst installation = [\n  {\n    title: \"Installation Status\",\n    render: (row) => <StatusDropdown row={row} />,\n  },\n  {\n    title: \"Report\",\n    render: (row) => (\n      <div className=\"flex justify-center\">\n        <ReportActionModal report={row} />\n      </div>\n    ),\n  },\n  {\n    title: \"Customer Name\",\n    render: (row) => {\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {row?.user_name}\n          </span>\n        </button>\n      );\n    },\n  },\n  {\n    title: \"Customer Phone Number\",\n    render: (row) => {\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {row?.user_phone}\n          </span>\n        </button>\n      );\n    },\n  },\n  {\n    title: \"Customer Email\",\n    render: (row) => {\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {row?.user_email}\n          </span>\n        </button>\n      );\n    },\n  },\n  {\n    title: \"Location\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          {row.address?.line1},{\" \"}\n          {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\n          {row.address?.city}, {row.address?.state},{\" \"}\n          {row.address ? row.address.postal_code : \" \"}, {row.address?.country}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Product Name\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\n          {/* {row.products.map(\n            (item, indx) =>\n              [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\n              indx < 2 && <span key={indx}>{item.type}</span>\n          )} */}\n          {row.products\n            .filter((item, indx, self) => {\n              const isUniqueSeenyorKit =\n                item.type === \"Seenyor Kit\" &&\n                self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\n              return (\n                !/^AI Sensor/.test(item.type) &&\n                (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\n              );\n            })\n            .map((item, indx) => {\n              const color =\n                item.type === \"Seenyor Kit\"\n                  ? \"blue\"\n                  : item.type === \"Installation\"\n                  ? \"orange\"\n                  : \"default\";\n              return (\n                <Tag key={indx} color={color}>\n                  {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\n                </Tag>\n              );\n            })}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Product Price\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\n          $\n          {row.products\n            .filter((item) =>\n              [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              )\n            )\n            .reduce((total, item) => total + item.price, 0)\n            .toFixed(2)}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Addon Name\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\n          {/* {row.products.map(\n            (item, indx) =>\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              ) && <span key={indx}>{item.type}</span>\n          )} */}\n          {row.products\n            .filter(\n              (item) =>\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                  item.type\n                )\n            )\n            .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\n          0 ? (\n            <span>--</span>\n          ) : (\n            row.products\n              .filter(\n                (item) =>\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                    item.type\n                  )\n              )\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\n          )}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Addon Price\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          {row.products\n            .map((item, indx) =>\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              ) ? (\n                <span key={indx}>${item.price.toFixed(2)}</span>\n              ) : null\n            )\n            .filter(Boolean).length === 0 ? (\n            <span>--</span>\n          ) : (\n            row.products.map((item, indx) =>\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                item.type\n              ) ? (\n                <span key={indx}>${item.price.toFixed(2)}</span>\n              ) : null\n            )\n          )}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Total Price\",\n    render: (row) => (\n      <button>\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n          ${row.total}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Date of Sales\",\n    render: (row) => {\n      const formattedDate = new Date(row.created_at).toLocaleDateString(\n        \"en-CA\"\n      );\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {formattedDate}\n          </span>\n        </button>\n      );\n    },\n  },\n\n  {\n    title: \"Payment Status\",\n    dataIndex: \"payment_status\",\n    key: \"payment_status\",\n    filters: [\n      { text: \"Completed\", value: \"completed\" },\n      { text: \"Pending\", value: \"pending\" },\n      { text: \"Cancelled\", value: \"cancelled\" },\n    ],\n    filterMultiple: true,\n    onFilter: (value, record) => record.payment_status.includes(value),\n    render: (status) => {\n      let color = \"\";\n\n      switch (status) {\n        case \"completed\":\n          color = \"green\";\n          break;\n        case \"pending\":\n          color = \"orange\";\n          break;\n        case \"cancelled\":\n          color = \"red\";\n          break;\n        default:\n          color = \"black\";\n      }\n\n      return (\n        <span\n          style={{\n            backgroundColor: color,\n            color: \"white\",\n            padding: \"4px 8px\",\n            borderRadius: \"4px\",\n            fontWeight: 500,\n            textTransform: \"capitalize\",\n          }}\n        >\n          {status}\n        </span>\n      );\n    },\n  },\n];\n\n// Export both arrays\nexport { dealDetailCol, installation };\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport PieChart from \"../components/pieChart\";\nimport MapLocat from \"../components/map\";\nimport { ConfigProvider, Table } from \"antd\";\nimport { installation } from \"../utiles\";\nimport { getInstallationList } from \"../../../api/ordersManage\";\nimport { getDeviceSalesCount } from \"@/api/Dashboard\";\nimport CustomTable from \"@/Shared/Table/CustomTable\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport { useRefContext } from \"@/Context/RefContext\";\n\nexport default function InstallerDashboard() {\n  const [loading, setLoading] = useState(false);\n  const [page, SetPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [installationList, setInstallationList] = useState([]);\n  const [completedInstallationList, setCompletedInstallationList] = useState(\n    []\n  );\n  const [deviceSalesCount, setDeviceSalesCount] = useState([]);\n  function getList(query) {\n    // setLoading(true);\n    setLoading(true);\n    getInstallationList(query)\n      .then((res) => {\n        setInstallationList(res.data);\n        setTotal(res.total);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  const getDeviceSalesCounts = useCallback(() => {\n    getDeviceSalesCount()\n      .then((res) => {\n        setDeviceSalesCount(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [page]);\n  const getCompletedandToBeInstalled = useCallback(() => {\n    getList({ installation_status: \"completed\", ne: true, page: page });\n  }, [page]);\n  useEffect(() => {\n    getCompletedandToBeInstalled();\n  }, [getCompletedandToBeInstalled]);\n  useEffect(() => {\n    getDeviceSalesCounts();\n  }, [getDeviceSalesCounts]);\n  const { registerRef } = useRefContext();\n\n  const stepsRef = {\n    step1: useRef(null),\n  };\n\n  useEffect(() => {\n    Object.keys(stepsRef).forEach((key) => {\n      if (stepsRef[key].current) {\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\n      }\n    });\n  }, [registerRef]);\n  return (\n    <div className=\"flex flex-col gap-6 pt-6\">\n      <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\n        {/* <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[500px]\">\n          <MapLocat />\n        </div> */}\n        <div\n          id=\"NewInstallation\"\n          className=\"p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-full\"\n        >\n          <div\n            id=\"ChartHeader\"\n            className=\"w-full flex justify-between mb-8\"\n            ref={stepsRef.step1}\n          >\n            <h1 className=\"text-[24px] font-bold\">To Be Installed</h1>\n            <div id=\"chartController\" className=\"flex gap-4\"></div>\n          </div>\n          <ConfigProvider\n            theme={{\n              token: {\n                fontFamily: \"Baloo2\",\n                colorPrimary: \"#8086AC\",\n                colorLinkActive: \"#8086AC\",\n                colorLinkHover: \"#8086AC\",\n                colorLink: \"#8086AC\",\n              },\n            }}\n          >\n            <SidebarContext.Provider\n              value={{\n                getInstallationList: {\n                  getCompletedandToBeInstalled,\n                  getDeviceSalesCounts,\n                },\n                total: total,\n                page,\n                SetPage,\n              }}\n            >\n              <CustomTable\n                loading={loading}\n                scroll={{ x: 750 }}\n                columns={installation}\n                tableData={installationList}\n              />\n            </SidebarContext.Provider>\n          </ConfigProvider>\n        </div>\n        <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full\">\n          <div>\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n              <h1 className=\"text-[24px] font-bold\">Device Installed</h1>\n            </div>\n            <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\n              <PieChart data={deviceSalesCount} chartFor=\"device\" />\n            </div>\n          </div>\n\n          <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\n            {[\"completed\", \"pending\", \"not_started\"].map((status, index) => {\n              const item = deviceSalesCount.find(\n                (item) => item._id === status\n              ) || { _id: status, count: 0 };\n              return (\n                <div\n                  key={index}\n                  id=\"InfoItem\"\n                  className=\"w-full flex justify-between\"\n                >\n                  <div className=\"flex gap-2 items-center\">\n                    <div\n                      className={`w-[12px] h-[12px] ${\n                        item._id === \"completed\"\n                          ? \"bg-[#08A1F7]\"\n                          : item._id === \"pending\"\n                          ? \"bg-[#922BF2]\"\n                          : \"bg-[#FF3B11]\"\n                      } rounded-full`}\n                    ></div>\n                    <span className=\"text-lg font-medium capitalize\">\n                      {item._id === \"completed\"\n                        ? \"Completed\"\n                        : item._id === \"pending\"\n                        ? \"Pending\"\n                        : \"Not Started\"}\n                    </span>\n                  </div>\n                  <span className=\"text-lg font-semibold\">{item.count}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* <div\n        id=\"TotalInstallation\"\n        className=\" p-[25px] rounded-2xl  bg-white w-full h-full \"\n      >\n        <div id=\"ChartHeader\" className=\"w-full flex justify-between mb-8\">\n          <h1 className=\"text-[24px] font-bold\">Total Installation</h1>\n          <div id=\"chartController\" className=\"flex gap-4\"></div>\n        </div>\n        <ConfigProvider\n          theme={{\n            token: {\n              fontFamily: \"Baloo2\",\n              colorPrimary: \"#8086AC\",\n              colorLinkActive: \"#8086AC\",\n              colorLinkHover: \"#8086AC\",\n              colorLink: \"#8086AC\",\n            },\n          }}\n        >\n          <SidebarContext.Provider\n            value={{\n              getInstallationList: {\n                getCompletedandToBeInstalled,\n                getDeviceSalesCounts,\n              },\n              total: total,\n              page,\n              SetPage,\n            }}\n          >\n            <CustomTable\n              loading={loading}\n              scroll={{ x: 750 }}\n              columns={installation}\n              tableData={completedInstallationList}\n            />\n          </SidebarContext.Provider>\n        </ConfigProvider>\n      </div> */}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ConfigProvider, Select, Table, Button } from \"antd\";\nimport { HomeOutlined, AimOutlined } from \"@ant-design/icons\";\nimport MapView from \"./Components/Mapview/index\";\nimport { DatePicker, Input } from \"antd\";\nconst { RangePicker } = DatePicker;\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport CustomTable from \"@/Shared/Table/CustomTable\";\nimport { useAlertTableColumns } from \"../Utiles/utiles\";\nimport { getAlertList, getEventList } from \"@/api/elderlySupport\";\nimport dayjs, { Dayjs } from \"dayjs\";\n// import { getEventFilter } from \"@/utils/helper\";\nimport { useNavigate } from \"react-router-dom\";\nimport ActiveAlertsCards from \"@/Components/ActiveAlerts/ActiveAlertsCards\";\nimport { getElderlies } from \"@/api/elderly\";\nimport { getAlarmCount, getElderlyAndDeviceCount } from \"@/api/Dashboard\";\nimport { RiHome5Line } from \"react-icons/ri\";\nimport { IoMdWarning } from \"react-icons/io\";\nimport { MdWarningAmber } from \"react-icons/md\";\nimport { FaCheck } from \"react-icons/fa6\";\nimport AlertCloseModal from \"@/Components/ActiveAlerts/AlertCloseModal\";\nimport { useNotification } from \"@/Context/useNotification\";\n\nexport default function MonitoringAgencyDashboard() {\n  const [viewType, setViewType] = useState(\"Map View\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedRowKeys, setExpandedRowKeys] = useState([]);\n  const activeAlertTableColumns = useAlertTableColumns(\"activeAlert\");\n  const recentlyClosedAlertTableColumns = useAlertTableColumns(\"recentAlarms\");\n  const [alertHistory, setAlertHistory] = useState([]);\n  const [alertHistoryLoading, setAlertHistoryLoading] = useState(true);\n  const [limit, setLimit] = useState(50);\n  const [eventList, setEventList] = useState([]);\n  const [eventPage, setEventPage] = useState([]);\n  const [eventTotal, setEventTotal] = useState(0);\n  const eventsTableColumns = useAlertTableColumns(\"events\");\n  const [selectedAlarmType, setSelectedAlarmType] = useState(\"fl_dv\"); // Default to \"All Alarms\"\n  const [alertHistiryQuery, setAlertHistiryQuery] = useState(\n    getEventFilter(\"fl_dv\")\n  );\n  const [devieCount, setDevieCount] = useState({});\n  const [alarmsCount, setAlarmsCount] = useState({});\n  const [searchResult, setSearchResult] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [openAlertCloseModal, setOpenAlertCloseModal] = useState(false);\n  const navigate = useNavigate();\n  const { notificationEvent } = useNotification();\n  const mapViewRef = useRef(null);\n  const alarmOptions = [\n    { value: \"fl_dv\", label: \"All Alarms\" },\n    { value: \"fall_detected\", label: \"Fall Detected\" },\n    { value: \"device_disconnected\", label: \"Device Disconnected\" },\n  ];\n\n  function handleDatePicker(dateString) {\n    console.log(dateString);\n  }\n\n  const onExpand = (expanded, record) => {\n    if (expanded) {\n      setExpandedRowKeys([record._id]);\n    } else {\n      setExpandedRowKeys([]);\n    }\n  };\n\n  const getAlartsHistory = useCallback(() => {\n    setAlertHistoryLoading(true);\n    getAlertList({\n      to_date: \"2024-01-01\",\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\n      is_resolved: false,\n      limit: limit,\n      ...alertHistiryQuery,\n    })\n      .then((res) => {\n        setAlertHistoryLoading(false);\n        setAlertHistory(res.data);\n      })\n      .catch((err) => {\n        setAlertHistoryLoading(false);\n        console.log(err);\n      });\n  }, [limit, alertHistiryQuery]);\n\n  useEffect(() => {\n    getAlartsHistory();\n  }, [getAlartsHistory]);\n\n  const getElderlyBySearch = useCallback(() => {\n    if (searchQuery.trim() === \"\") {\n      setSearchResult([]);\n      return;\n    }\n    getElderlies({ search: searchQuery })\n      .then((res) => {\n        setSearchResult(res?.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [searchQuery]);\n\n  useEffect(() => {\n    getElderlyBySearch();\n  }, [getElderlyBySearch]);\n\n  const highlightText = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(\n      regex,\n      `<mark style=\"background-color: #80CAA7; color: white;\">$1</mark>`\n    );\n  };\n\n  useEffect(() => {\n    getElderlyAndDeviceCount()\n      .then((res) => setDevieCount(res?.data))\n      .catch((err) => console.log(err));\n  }, []);\n  const getAlarmsCounts = useCallback(() => {\n    const endDate = dayjs();\n    const startDate = dayjs().subtract(7, \"days\");\n    getAlarmCount({\n      end_date: startDate.format(\"YYYY-MM-DD\"),\n      from_date: endDate.format(\"YYYY-MM-DD\"),\n    })\n      .then((res) => setAlarmsCount(res?.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    getAlarmsCounts();\n  }, [getAlarmsCounts]);\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedKeys) => setSelectedRowKeys(selectedKeys),\n  };\n\n  const handleResolveSelected = () => {\n    setOpenAlertCloseModal(true);\n  };\n  useEffect(() => {\n    if (notificationEvent) {\n      getAlartsHistory();\n    }\n  }, [notificationEvent]);\n  function refreshSomeAPIs() {\n    if (mapViewRef.current && mapViewRef.current.getAlertListData) {\n      mapViewRef.current.getAlertListData();\n    }\n  }\n  return (\n    <>\n      <div className=\"flex gap-4 flex-col pb-8\">\n        <div className=\"flex item-center justify-between w-full\"></div>\n        <div className=\"flex items-start gap-4 w-full\">\n          <div\n            id=\"Recently_Closed_Alerts\"\n            className=\"w-[50%] flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6\"\n          >\n            <div\n              id=\"Recently_Closed_Alerts_Header\"\n              className=\"w-full flex justify-between items-center\"\n            >\n              <h1 className=\"text-[24px] font-bold\">Recent Notifications</h1>\n              <div className=\"flex items-center gap-4\">\n                {selectedRowKeys.length == 0 && (\n                  <div className=\"flex items-center gap-4\">\n                    <Select\n                      value={selectedAlarmType}\n                      onChange={(value) => {\n                        setSelectedAlarmType(value);\n                        setAlertHistiryQuery(getEventFilter(value));\n                      }}\n                      options={alarmOptions}\n                      style={{ width: 200 }}\n                    />\n                    <Select\n                      value={limit}\n                      onChange={(value) => setLimit(value)}\n                      options={[\n                        { value: 10, label: \"10\" },\n                        { value: 50, label: \"50\" },\n                        { value: 100, label: \"100\" },\n                        { value: 1000, label: \"1000\" },\n                      ]}\n                      style={{ width: 80 }}\n                    />\n                  </div>\n                )}\n                {selectedRowKeys.length !== 0 && (\n                  <Button\n                    variant=\"solid\"\n                    style={{ backgroundColor: \"black\" }}\n                    icon={<FaCheck />}\n                    onClick={() => handleResolveSelected()}\n                  >\n                    Resolve\n                  </Button>\n                )}\n              </div>\n            </div>\n            <div id=\"Recently_Closed_Alerts_Table\" className=\"w-full\">\n              <SidebarContext.Provider\n                value={{\n                  getLatestAlarmList: {\n                    getAlartsHistory,\n                    getAlarmsCounts,\n                    refreshSomeAPIs,\n                  },\n                }}\n              >\n                <Table\n                  rowSelection={rowSelection}\n                  columns={recentlyClosedAlertTableColumns}\n                  dataSource={alertHistory}\n                  rowKey=\"_id\"\n                  loading={alertHistoryLoading}\n                  pagination={false}\n                  locale={{ emptyText: \"No recent alerts\" }}\n                  className=\"rounded-lg\"\n                  scroll={{ x: scroll?.x || scroll || 700, y: scroll?.y }}\n                />\n              </SidebarContext.Provider>\n            </div>\n          </div>\n          <div className=\"w-[50%] flex flex-col gap-4\">\n            <div className=\"flex gap-4 w-full\">\n              <div className=\"bg-white w-full p-4 rounded-xl flex flex-col\">\n                <div>\n                  <div className=\"font-medium opacity-90 flex items-center gap-1\">\n                    <RiHome5Line /> <span>Total User</span>\n                  </div>\n                  <h2 className=\"text-4xl font-medium\">\n                    {devieCount?.house_count}\n                  </h2>\n                </div>\n                <div className=\"flex w-full items-end justify-end gap-6\">\n                  <div className=\"flex flex-col justify-center items-center\">\n                    <h2 className=\"font-semibold text-2xl\">\n                      {devieCount?.active_device_count}\n                    </h2>\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\n                      <div className=\"size-2 bg-lime-600 rounded-sm\"></div>\n                      <span>Online Devices</span>\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col justify-center items-center\">\n                    <h2 className=\"font-semibold text-2xl\">\n                      {devieCount?.inactive_device_count}\n                    </h2>\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\n                      <div className=\"size-2 bg-red-600 rounded-sm\"></div>\n                      <span>Offline Devices</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-white w-full p-4 rounded-xl flex flex-col\">\n                <div>\n                  <div className=\"font-medium opacity-90 flex items-center gap-1\">\n                    <MdWarningAmber />\n                    <span>Past Week Alarms</span>\n                  </div>\n                  <h2 className=\"text-4xl font-medium\">\n                    {alarmsCount?.alarm_count}\n                  </h2>\n                </div>\n                <div className=\"flex w-full items-end justify-end gap-6\">\n                  <div className=\"flex flex-col justify-center items-center\">\n                    <h2 className=\"font-semibold text-2xl\">\n                      {alarmsCount?.closed_alarm}\n                    </h2>\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\n                      <div className=\"size-2 bg-lime-600 rounded-sm\"></div>\n                      <span>Closed Alarms</span>\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col justify-center items-center\">\n                    <h2 className=\"font-semibold text-2xl\">\n                      {alarmsCount?.false_alarm}\n                    </h2>\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\n                      <div className=\"size-2 bg-red-600 rounded-sm\"></div>\n                      <span>False Alarms</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full p-0\">\n              <div className=\"bg-transparent rounded-2xl h-[750px] z-1\">\n                {viewType === \"Map View\" && (\n                  <MapView height={650} ref={mapViewRef} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AlertCloseModal\n        openAlertCloseModal={openAlertCloseModal}\n        setOpenAlertCloseModal={setOpenAlertCloseModal}\n        selectedAlert={selectedRowKeys}\n        getAlertListDatas={() => {\n          refreshSomeAPIs();\n          getAlartsHistory();\n          getAlarmsCounts();\n        }}\n      />\n    </>\n  );\n}\n\nexport const alertViewSegmentOptions = [\n  { label: `Map View`, value: \"Map View\", icon: <AimOutlined /> },\n  { label: \"Room View\", value: \"Room View\", icon: <HomeOutlined /> },\n];\n\n// Filter logic helper (assumed to be in @/utils/helper)\nexport const getEventFilter = (eventKey) => {\n  const filters = {\n    fall_detected: { event: \"2\" },\n    device_disconnected: { event: \"5\", is_online: \"1\" },\n    fl_dv: { event: \"2,5\", is_online: \"1\" }, // Show both Fall Detected and Device Disconnected\n  };\n  return filters[eventKey] || {};\n};\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n  useContext,\n  useCallback,\n} from \"react\";\nimport { DatePicker, Select, ConfigProvider, Tour } from \"antd\";\nimport ls from \"store2\";\nimport \"./style.css\";\nimport SalesOverviewChart from \"./components/salesOverviewChart\";\nimport TotalSalesChart from \"./components/totalSalesChart\";\nimport BarChart from \"./components/barChart\";\nimport BarChartByGender from \"./components/barChartByGender\";\nimport PieChart from \"./components/pieChart\";\nimport {\n  getUsersCount,\n  getSalesData,\n  getSalesOverview,\n  getDealDetails,\n  getChartByAge,\n} from \"@/api/Dashboard\";\nimport { getAllCity } from \"@/api/ordersManage\";\nimport { getUser } from \"@/api/Users\";\nconst { RangePicker } = DatePicker;\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport { CountMapping } from \"./count-utiles\";\nimport MonitoringStation from \"./Dashboards/MonitoringStation\";\nimport InstallerDashboard from \"./Dashboards/Installer\";\nimport WeeklyMonthlyPicker from \"@/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker\";\nimport {\n  getChartByGender,\n  getDiseasesCountByGender,\n  getAlertsCountByElderly,\n  getAlertsCountByName,\n} from \"@/api/Dashboard\";\nimport { getAlertInfoViaEvent } from \"@/utils/helper\";\nimport BubbleChart from \"./components/bubbleChart\";\nimport { RefProvider } from \"@/Context/RefContext\";\nimport { useRefContext } from \"@/Context/RefContext\";\nimport { updateUserDetails } from \"@/api/Users\";\nimport { requestPermission } from \"@/firebase\";\nimport MonitoringAgencyDashboard from \"./Dashboards/MonitoringAgency\";\nimport { getAlertInfoViaEventDetails } from \"../../utils/helper\";\nconst onOk = (value) => {\n  console.log(\"onOk: \", value);\n};\nconst onChange = (value) => {\n  console.log(`selected ${value}`);\n};\nconst onSearch = (value) => {\n  console.log(\"search:\", value);\n};\nconst AdminDashboardComponent = () => {\n  // const { role } = useContext(SidebarContext);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"Overview\");\n  const [search, setSearch] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n  const [modalOPen, setModalOpen] = useState(false);\n  const [list, setList] = useState([]);\n  const [query, setQuery] = useState({\n    current: \"1\",\n    size: \"10\",\n  });\n  const { registerRef } = useRefContext();\n\n  const [page, setPage] = useState({ page: 1, limit: 10 });\n  const [dealLoading, setDealLoading] = useState(false);\n  const [user, SetUser] = useState(ls.get(\"user\"));\n  const [role, setRole] = useState(ls.get(\"role\"));\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\n  //Date Controll\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n\n  //Sales Overview\n  const [SOOrderStatus, setSOOrderStatus] = useState(null);\n  const [SOAgentId, setSOAgentId] = useState(\"all\");\n  //Sales By Agent\n  const [SBAOrderStatus, setSBAOrderStatus] = useState(null);\n  const [SBAOrderLocation, setSBAOrderLocation] = useState(null);\n  //Sales By Location\n  const [SBLOrderStatus, setSBLOrderStatus] = useState(null);\n  const [SBLAgentId, setSBLAgentId] = useState(null);\n  //Sales By PaymentStatus\n  const [SBPAgentId, setSBPAgentId] = useState(null);\n  //Sales by installation status\n  const [SBIAgentId, setSBIAgentId] = useState(null);\n  //Deal Details\n  const [DDOrderStatus, setDDOrderStatus] = useState(null);\n  const [DDAgentId, setDDAgentId] = useState(null);\n  // Dashboard Data\n  const [office, setOffice] = useState([]);\n  const [salesAgent, setSalesAgent] = useState([]);\n  const [officeId, setOfficeId] = useState(null);\n  const [count, setCount] = useState([]);\n  const [salesOverview, setSalesOverview] = useState([]);\n  const [salesByAgent, setSalesByAgent] = useState([]);\n  const [salesByLocation, setSalesByLocation] = useState([]);\n  const [salesByPaymentStatus, setSalesByPaymentStatus] = useState([]);\n  const [salesByInstallationStatus, setSalesByInstallationStatus] = useState(\n    []\n  );\n  const [dealDetails, setDealDetails] = useState([]);\n  const [officeQuery, setOfficeQuery] = useState({});\n  const [agentQuery, setAgentQuery] = useState({});\n  const [chartByGender, setChartByGender] = useState([]);\n  const [chartByAge, setChartByAge] = useState([]);\n  const [diseasesCountByGender, setDiseasesCountByGender] = useState([]);\n  const [alertsCountByElderly, setAlertsCountByElderly] = useState([]);\n  const [alertsCountByName, setAlertsCountByName] = useState([]);\n  const [city, setCity] = useState([]);\n  //Report Download\n  const downloadReport = async () => {\n    try {\n      if (!dealDetails.data || dealDetails.data.length === 0) {\n        throw new Error(\"No data available to download\");\n      }\n\n      const formattedData = dealDetails.data.map((item, index) => {\n        console.log(\"DealDetails ===============>\", dealDetails.data);\n\n        const saleDate = new Date(item.created_at);\n        return {\n          \"No.\": index + 1,\n          \"Office Name\": item.office_name,\n          \"Agent ID\": item.agent_unique_id,\n          \"Agent Name\": item.agent_name,\n          // \"Order Number\": item.order_no,\n          \"Sale Date\": saleDate.toLocaleDateString(\"en-CA\"),\n          \"Sale Time\": saleDate.toLocaleTimeString(\"en-GB\", {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n          }),\n\n          Products: item.products\n            .map((product, idx) => `${idx + 1}. ${product.name}`)\n            .join(\"\"),\n          \"Extra Product\": item.products\n            .map((item, indx) => {\n              if (\n                item.type !== \"Seenyor Kit\" &&\n                item.type !== \"Installation\" &&\n                item.type !== \"AI Monitoring\"\n              ) {\n                return item.type;\n              }\n            })\n            .join(\"\"),\n          \"Current Sale Status\": item.saleStatus,\n          \"City Location\": item.address?.city || \"N/A\",\n        };\n      });\n\n      const worksheet = XLSX.utils.json_to_sheet(formattedData);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Sales Report\");\n\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      const blob = new Blob([excelBuffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      const fileName = `Sales_Report_${\n        new Date().toISOString().split(\"T\")[0]\n      }.xlsx`;\n      saveAs(blob, fileName);\n    } catch (error) {\n      console.error(\"Error downloading the sales report:\", error);\n      // Here you might want to show an error message to the user\n      // For example: message.error(\"Failed to download report. Please try again.\");\n    }\n  };\n  //Chart by gender (male and female)\n  const ChartByGender = useCallback(() => {\n    getChartByGender()\n      .then((res) => {\n        setChartByGender(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //chart by age with range\n  const ChartByAge = useCallback(() => {\n    getChartByAge()\n      .then((res) => {\n        setChartByAge(res?.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //Diseses count by gender\n  const DiseasesCountByGender = useCallback(() => {\n    getDiseasesCountByGender()\n      .then((res) => {\n        setDiseasesCountByGender(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const AlertCountByElderly = useCallback(() => {\n    getAlertsCountByElderly()\n      .then((res) => {\n        setAlertsCountByElderly(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const AlertCountByName = useCallback(() => {\n    getAlertsCountByName()\n      .then((res) => {\n        const filteredData = res.data.map((item) => {\n          return {\n            property_name: getAlertInfoViaEventDetails(item)?.title,\n            count: item.count,\n            type: getAlertInfoViaEventDetails(item)?.status,\n          };\n        });\n        console.log(filteredData);\n\n        setAlertsCountByName(filteredData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  //Distributor Reports\n  function AllCounts() {\n    getUsersCount()\n      .then((res) => {\n        // Map over CountMapping to ensure every role is represented\n        const mergedData = CountMapping.map((config) => {\n          // Find if there's data from the API matching the current role\n          const apiItem = res.data?.find((item) => item.role === config.role);\n\n          // If found, use the API count; otherwise, set count to 0\n          return {\n            ...config,\n            count: apiItem ? apiItem.count : 0, // Default to 0 if not found in the API response\n          };\n        });\n\n        // Optional: filter based on rolesAllowed for the current user\n        const filteredData = mergedData.filter((item) =>\n          item.rolesAllowed.includes(user.role)\n        );\n\n        // Set the final filtered data to state\n        setCount(filteredData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const SalesOverview = useCallback(\n    (agentId, orderStatus) => {\n      getSalesOverview({\n        office_id: officeQuery.office_id,\n        agent_id: agentId,\n        payment_status: orderStatus,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          console.log(\"sales Overview\", res);\n\n          setSalesOverview(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [SOAgentId, SOOrderStatus, officeQuery.office_id, toDate]\n  );\n\n  const SalesByAgent = useCallback(\n    (city, orderStatus) => {\n      getSalesData({\n        ...officeQuery,\n        total_sales_by: \"agent_name\",\n        city: city,\n        payment_status: orderStatus,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          setSalesByAgent(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [SBAOrderLocation, SBAOrderStatus, officeQuery.office_id, toDate]\n  );\n  const SalesByLocation = useCallback(\n    (agentId, orderStatus) => {\n      getSalesData({\n        ...officeQuery,\n        total_sales_by: \"location\",\n        payment_status: orderStatus,\n        agent_id: agentId,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          setSalesByLocation(res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [SBLAgentId, SBLOrderStatus, officeQuery.office_id, toDate]\n  );\n\n  const SalesByPaymentStatus = useCallback(\n    (agentId) => {\n      getSalesData({\n        ...officeQuery,\n        total_sales_by: \"payment_status\",\n        agent_id: agentId,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          setSalesByPaymentStatus(res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [SBPAgentId, officeQuery.office_id, toDate]\n  );\n  const SalesByInstallationStatus = useCallback(\n    (agentId) => {\n      getSalesData({\n        ...officeQuery,\n        total_sales_by: \"installation_status\",\n        agent_id: agentId,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          setSalesByInstallationStatus(res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [SBIAgentId, officeQuery.office_id, toDate]\n  );\n  const DealDetails = useCallback(\n    (agentId, orderStatus) => {\n      setDealLoading(true);\n      getDealDetails({\n        ...page,\n        ...officeQuery,\n        agent_id: agentId,\n        payment_status: orderStatus,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          console.log(res);\n\n          setDealDetails(res);\n          setDealLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [DDOrderStatus, DDAgentId, officeQuery.office_id, toDate, page]\n  );\n\n  //All Graph Controller Handle Functions\n  useEffect(() => {\n    SalesOverview(\n      SOAgentId === \"all\" ? null : SOAgentId,\n      SOOrderStatus === \"all\" ? null : SOOrderStatus\n    );\n  }, [SalesOverview]);\n  useEffect(() => {\n    SalesByAgent(\n      SBAOrderLocation === \"all\" ? null : SBAOrderLocation,\n      SBAOrderStatus === \"all\" ? null : SBAOrderStatus\n    );\n  }, [SalesByAgent]);\n  useEffect(() => {\n    SalesByLocation(\n      SBLAgentId === \"all\" ? null : SBLAgentId,\n      SBLOrderStatus === \"all\" ? null : SBLOrderStatus\n    );\n  }, [SalesByLocation]);\n  useEffect(() => {\n    SalesByPaymentStatus(SBPAgentId === \"all\" ? null : SBPAgentId);\n  }, [SalesByPaymentStatus]);\n  useEffect(() => {\n    SalesByInstallationStatus(SBIAgentId === \"all\" ? null : SBIAgentId);\n  }, [SalesByInstallationStatus]);\n  useEffect(() => {\n    DealDetails(\n      DDAgentId === \"all\" ? null : DDAgentId,\n      DDOrderStatus === \"all\" ? null : DDOrderStatus\n    );\n  }, [DealDetails]);\n\n  useEffect(() => {\n    if (!officeId) return;\n    if (officeId === \"all\") {\n      if (officeQuery.office_id) {\n        const newQuery = { ...officeQuery };\n        delete newQuery.office_id;\n        setOfficeQuery(newQuery);\n      }\n    } else {\n      setOfficeQuery((prevQuery) => ({\n        ...prevQuery,\n        office_id: officeId,\n      }));\n      // Reset other states if needed\n      setSBPAgentId(\"all\");\n      setSBIAgentId(\"all\");\n      setSBLAgentId(\"all\");\n      setSOAgentId(\"all\");\n    }\n  }, [officeId]);\n\n  //Weekly, Monthly and  Date Picker Handler\n  function handleWeeklyMonthly(e) {\n    console.log(e);\n    setFromDate(e.start);\n    setToDate(e.end);\n  }\n  function handleDatePicker(e) {\n    setFromDate(e[0]);\n    setToDate(e[1]);\n  }\n\n  function getAllOffice() {\n    getUser({ role: \"office\" })\n      .then((res) => {\n        setOffice(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function getAllAgent() {\n    console.log(\"called agent get list!\", agentQuery);\n\n    getUser({ ...officeQuery, role: \"sales_agent\" })\n      .then((res) => {\n        setSalesAgent(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function getAllCities() {\n    getAllCity({ ...officeQuery })\n      .then((res) => {\n        setCity(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const stepsRef = {\n    officeDropdown: useRef(null),\n    datePicker: useRef(null),\n    usersCount: useRef(null),\n    totalSales: useRef(null),\n    totalInstallations: useRef(null),\n    salesOverview: useRef(null),\n    salesByAgent: useRef(null),\n    salesByLocation: useRef(null),\n    mostAlert: useRef(null),\n    activityCount: useRef(null),\n    ages: useRef(null),\n    gender: useRef(null),\n    diseases: useRef(null),\n  };\n\n  useEffect(() => {\n    Object.keys(stepsRef).forEach((key) => {\n      if (stepsRef[key].current) {\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\n      }\n    });\n  }, [registerRef]);\n\n  useEffect(() => {\n    AllCounts();\n    getAllOffice();\n\n    if (user.role === \"nursing_home\" || user.role === \"monitoring_station\") {\n      ChartByGender();\n      ChartByAge();\n      DiseasesCountByGender();\n      AlertCountByElderly();\n      AlertCountByName();\n    }\n  }, []);\n\n  useEffect(() => {\n    getAllAgent();\n    getAllCities();\n  }, [officeQuery]);\n  // const updateUserDetailsWithFCMToken = (id, token) => {\n  //   if (!token) return;\n  //   console.log(token);\n  //   updateUserDetails(id, { fcm_token_web: token })\n  //     .then((res) => {\n  //       console.log(\"Token Updated\");\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n  // useEffect(() => {\n  //   console.log(user);\n  //   requestPermission().then((token) => {\n  //     if (\n  //       (user.role === \"nurse\" ||\n  //         user.role === \"support_agent\" ||\n  //         user.role === \"end_user\") &&\n  //       token\n  //     ) {\n  //       console.log(token);\n\n  //       updateUserDetailsWithFCMToken(user?._id, token);\n  //     }\n  //   });\n  // }, [user]);\n  return (\n    <div className=\"\">\n      {/* Tamplete for w-1/3 w-2/3 */}\n      {/* <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\n            <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[445px]\"></div>\n            <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full  h-[445px]\"></div>\n          </div> */}\n      {/* Tamplete for w-1/2 w-1/2 */}\n      {/* <div className=\"w-full flex gap-6 xl:flex-row flex-col\">\n            <div className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"></div>\n            <div className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"></div>\n          </div> */}\n\n      {/* This code for Distributor , Sales Agent , Office Dashboard */}\n      {(user.role == \"distributor\" ||\n        user.role == \"office\" ||\n        user.role == \"sales_agent\") && (\n        <div className=\"pt-[29px] flex flex-col w-full gap-6 pb-10\">\n          <div\n            id=\"Distributor_Dash_Top\"\n            className=\"flex justify-between w-full mb-5 flex-wrap gap-5\"\n          >\n            <ConfigProvider\n              theme={{\n                token: {\n                  fontFamily: \"Baloo2\",\n                  colorPrimary: \"#8086AC\",\n                  colorLinkActive: \"#8086AC\",\n                  colorLinkHover: \"#8086AC\",\n                  colorLink: \"#8086AC\",\n                },\n              }}\n            >\n              {user.role == \"office\" ? (\n                <div className=\"p-2 px-4 rounded-lg text-[36px] font-bold  text-primary\">\n                  {user.office}\n                </div>\n              ) : user.role == \"sales_agent\" ? null : (\n                <div ref={stepsRef.officeDropdown}>\n                  <Select\n                    showSearch\n                    optionFilterProp=\"label\"\n                    onChange={(e) => setOfficeId(e.value)}\n                    onSearch={onSearch}\n                    defaultValue={\"all\"}\n                    size=\"large\"\n                    className=\"custom-select\"\n                    labelInValue={true}\n                    options={[\n                      {\n                        value: \"all\",\n                        label: (\n                          <>\n                            All Offices{\" \"}\n                            <span className=\"highlighted-number\">\n                              {office.length}\n                            </span>\n                          </>\n                        ), // Number of options included here\n                      },\n                      ...office.map((office) => ({\n                        value: office._id,\n                        label: office.name,\n                      })),\n                    ]}\n                  />\n                </div>\n              )}\n              <div\n                id=\"DatePickers\"\n                className=\"flex gap-4 items-center\"\n                ref={stepsRef.datePicker}\n              >\n                <WeeklyMonthlyPicker\n                  placeholder={\"Weekly/Monthly\"}\n                  style={{ width: \"140px\", borderRadius: \"10px\" }}\n                  handleChnage={handleWeeklyMonthly}\n                />\n                <RangePicker\n                  showTime={false}\n                  style={{ width: \"200px\", borderRadius: \"10px\" }}\n                  size=\"large\"\n                  placeholder={[\"Pick Data Range (Start)\", \"End\"]}\n                  format=\"YYYY-MM-DD\"\n                  onChange={(value, dateString) => {\n                    handleDatePicker(dateString);\n                  }}\n                  onOk={onOk}\n                />\n                {/* <CustomButton\n                  disabled={dealDetails?.data?.length <= 0}\n                  onClick={downloadReport}\n                  type=\"text\"\n                >\n                  Download\n                </CustomButton> */}\n              </div>\n            </ConfigProvider>\n          </div>\n\n          <div\n            id=\"Reports\"\n            className=\"w-full rounded-2xl bg-transparent flex flex-col gap-6\"\n            ref={stepsRef.usersCount}\n          >\n            <div\n              id=\"Cards\"\n              className=\"grid gap-5 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5\"\n            >\n              {count?.map((item, key) => {\n                let IconName = item.icon;\n                return (\n                  <div\n                    key={key}\n                    id=\"Card\"\n                    className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#fff] text-white gap-3 rounded-[12px] relative overflow-hidden\"\n                  >\n                    <div\n                      id=\"circle\"\n                      style={{ backgroundColor: item.color, opacity: \"0.9\" }}\n                      className={`w-[100px] h-[100px] absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out`}\n                    ></div>\n                    <div\n                      id=\"circle\"\n                      style={{ backgroundColor: item.color, opacity: \"0.2\" }}\n                      className={`w-[100px] h-[100px] absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out`}\n                    ></div>\n                    <div\n                      style={{ backgroundColor: `${item.color}15` }}\n                      className=\"h-fit rounded-[8px] p-2\"\n                    >\n                      {IconName && (\n                        <IconName style={{ color: item?.color }} size={20} />\n                      )}\n                    </div>\n                    <div className=\"flex flex-col items-start\">\n                      <h1 className=\"text-[26px] font-semibold leading-none text-text-primary\">\n                        {item.count}\n                      </h1>\n                      <span className=\"text-[14px] font-medium text-text-primary/70 leading-none\">\n                        {item.label}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <div id=\"SalesOverview&Total\" className=\"w-full flex  gap-6 flex-col\">\n            <div className=\"w-full flex gap-6\">\n              <div\n                className=\" p-[25px] rounded-2xl  bg-white lg:w-[50%] w-full  h-[445px]\"\n                ref={stepsRef.totalSales}\n              >\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                  <h1 className=\"text-[24px] font-bold\">Total Sales</h1>\n                  <div id=\"chartController\" className=\"flex gap-4\">\n                    {mainRole !== \"sales_agent\" ? (\n                      <ConfigProvider\n                        theme={{\n                          token: {\n                            fontFamily: \"Baloo2\",\n                            colorPrimary: \"#8086AC\",\n                            colorLinkActive: \"#8086AC\",\n                            colorLinkHover: \"#8086AC\",\n                            colorLink: \"#8086AC\",\n                          },\n                        }}\n                      >\n                        <Select\n                          showSearch\n                          optionFilterProp=\"label\"\n                          onChange={(e) => setSBPAgentId(e.value)}\n                          onSearch={onSearch}\n                          defaultValue={\"all\"}\n                          size=\"large\"\n                          style={{ maxWidth: 150, zIndex: \"400\" }}\n                          labelInValue={true}\n                          options={[\n                            {\n                              value: \"all\",\n                              label: \"All Agents\",\n                            },\n                            ...salesAgent.map((agent) => ({\n                              value: agent._id,\n                              label: agent.name + \" \" + agent.last_name,\n                            })),\n                          ]}\n                        />\n                      </ConfigProvider>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\n                  <TotalSalesChart\n                    data={salesByPaymentStatus}\n                    chartFor=\"totalSales\"\n                  />\n                </div>\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\n                  {[\"completed\", \"pending\", \"cancelled\"].map((statusName) => {\n                    const status = salesByPaymentStatus.find(\n                      (item) => item.property_name === statusName\n                    ) || { property_name: statusName, total_orders: 0 };\n\n                    let bgColor;\n                    let label;\n\n                    switch (status.property_name) {\n                      case \"completed\":\n                        bgColor = \"#4379EE\";\n                        label = \"Completed\";\n                        break;\n                      case \"pending\":\n                        bgColor = \"#F1963A\";\n                        label = \"Pending\";\n                        break;\n                      case \"cancelled\":\n                        bgColor = \"#D90000\";\n                        label = \"Cancelled\";\n                        break;\n                      default:\n                        bgColor = \"#000000\"; // Default color if needed\n                        label = \"Unknown\";\n                    }\n\n                    return (\n                      <div\n                        key={status.property_name}\n                        id=\"InfoItem\"\n                        className=\"w-full flex justify-between\"\n                      >\n                        <div className=\"flex gap-2 items-center\">\n                          <div\n                            className={`w-[12px] h-[12px] rounded-full`}\n                            style={{ backgroundColor: bgColor }}\n                          ></div>\n                          <span className=\"text-lg font-medium\">{label}</span>\n                        </div>\n                        <span className=\"text-lg font-semibold\">\n                          {status.total_orders}\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <div\n                className=\" p-[25px] rounded-2xl  bg-white lg:w-[50%] w-full  h-[445px]\"\n                ref={stepsRef.totalInstallations}\n              >\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                  <h1 className=\"text-[24px] font-bold\">Total Installations</h1>\n                  <div id=\"chartController\" className=\"flex gap-4\">\n                    {mainRole !== \"sales_agent\" ? (\n                      <ConfigProvider\n                        theme={{\n                          token: {\n                            fontFamily: \"Baloo2\",\n                            colorPrimary: \"#8086AC\",\n                            colorLinkActive: \"#8086AC\",\n                            colorLinkHover: \"#8086AC\",\n                            colorLink: \"#8086AC\",\n                          },\n                        }}\n                      >\n                        <Select\n                          showSearch\n                          optionFilterProp=\"label\"\n                          onChange={(e) => setSBIAgentId(e.value)}\n                          onSearch={onSearch}\n                          defaultValue={\"all\"}\n                          size=\"large\"\n                          style={{ maxWidth: 150, zIndex: \"400\" }}\n                          labelInValue={true}\n                          options={[\n                            {\n                              value: \"all\",\n                              label: \"All Agents\",\n                            },\n                            ...salesAgent.map((agent) => ({\n                              value: agent._id,\n                              label: agent.name + \" \" + agent.last_name,\n                            })),\n                          ]}\n                        />\n                      </ConfigProvider>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\n                  <TotalSalesChart\n                    data={salesByInstallationStatus}\n                    chartFor=\"totalInstallations\"\n                  />\n                </div>\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\n                  {[\"completed\", \"pending\", \"not_started\"].map((statusName) => {\n                    const status = salesByInstallationStatus.find(\n                      (item) => item.property_name === statusName\n                    ) || { property_name: statusName, total_orders: 0 };\n\n                    let bgColor;\n                    let label;\n\n                    switch (status.property_name) {\n                      case \"completed\":\n                        bgColor = \"#36b610\";\n                        label = \"Completed\";\n                        break;\n                      case \"pending\":\n                        bgColor = \"#833af1\";\n                        label = \"In Progress\";\n                        break;\n                      case \"not_started\":\n                        bgColor = \"#5d5d5d\";\n                        label = \"Not Started\";\n                        break;\n                      default:\n                        bgColor = \"#000000\"; // Default color if needed\n                        label = \"Unknown\";\n                    }\n\n                    return (\n                      <div\n                        key={status.property_name}\n                        id=\"InfoItem\"\n                        className=\"w-full flex justify-between\"\n                      >\n                        <div className=\"flex gap-2 items-center\">\n                          <div\n                            className={`w-[12px] h-[12px] rounded-full`}\n                            style={{ backgroundColor: bgColor }}\n                          ></div>\n                          <span className=\"text-lg font-medium\">{label}</span>\n                        </div>\n                        <span className=\"text-lg font-semibold\">\n                          {status.total_orders}\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n            <div\n              className=\" p-[25px] rounded-2xl  bg-white lg:w-[100%] w-full  h-[445px]\"\n              ref={stepsRef.salesOverview}\n            >\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                <h1 className=\"text-[24px] font-bold\">Sales Overview</h1>\n\n                <div id=\"chartController\" className=\"flex gap-4\">\n                  <ConfigProvider\n                    theme={{\n                      token: {\n                        fontFamily: \"Baloo2\",\n                        colorPrimary: \"#8086AC\",\n                        colorLinkActive: \"#8086AC\",\n                        colorLinkHover: \"#8086AC\",\n                        colorLink: \"#8086AC\",\n                      },\n                    }}\n                  >\n                    <Select\n                      optionFilterProp=\"label\"\n                      onChange={(e) => setSOOrderStatus(e.value)}\n                      defaultValue={\"all\"}\n                      size=\"large\"\n                      labelInValue={true}\n                      options={[\n                        {\n                          value: \"all\",\n                          label: \"All Sales\",\n                        },\n                        {\n                          value: \"completed\",\n                          label: \"Completed\",\n                        },\n                        {\n                          value: \"pending\",\n                          label: \"Pending\",\n                        },\n                        {\n                          value: \"cancelled\",\n                          label: \"Cancelled\",\n                        },\n                      ]}\n                    />\n                    {mainRole !== \"sales_agent\" ? (\n                      <Select\n                        showSearch\n                        optionFilterProp=\"label\"\n                        onChange={(e) => setSOAgentId(e.value)}\n                        onSearch={onSearch}\n                        value={SOAgentId}\n                        defaultValue={\"all\"}\n                        size=\"large\"\n                        style={{ maxWidth: 150, zIndex: \"400\" }}\n                        labelInValue={true}\n                        options={[\n                          {\n                            value: \"all\",\n                            label: \"All Agents\",\n                          },\n                          ...salesAgent.map((agent) => ({\n                            value: agent._id,\n                            label: agent.name + \" \" + agent.last_name,\n                          })),\n                        ]}\n                      />\n                    ) : null}\n                  </ConfigProvider>\n                </div>\n              </div>\n              <SalesOverviewChart data={salesOverview} />\n            </div>\n          </div>\n\n          <div\n            id=\"SalesByLucation&Agents\"\n            className=\"w-full flex gap-6 xl:flex-row flex-col\"\n          >\n            {user.role == \"sales_agent\" ? null : (\n              <div\n                className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"\n                ref={stepsRef.salesByAgent}\n              >\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                  <h1 className=\"text-[24px] font-bold\"> Sales by Agent</h1>\n\n                  <div id=\"chartController\" className=\"flex gap-4\">\n                    <ConfigProvider\n                      theme={{\n                        token: {\n                          fontFamily: \"Baloo2\",\n                          colorPrimary: \"#8086AC\",\n                          colorLinkActive: \"#8086AC\",\n                          colorLinkHover: \"#8086AC\",\n                          colorLink: \"#8086AC\",\n                        },\n                      }}\n                    >\n                      <Select\n                        optionFilterProp=\"label\"\n                        onChange={(e) => setSBAOrderStatus(e.value)}\n                        defaultValue=\"all\"\n                        size=\"large\"\n                        labelInValue={true}\n                        options={[\n                          {\n                            value: \"all\",\n                            label: \"All Sales\",\n                          },\n                          {\n                            value: \"completed\",\n                            label: \"Completed\",\n                          },\n                          {\n                            value: \"pending\",\n                            label: \"Pending\",\n                          },\n                          {\n                            value: \"cancelled\",\n                            label: \"Cancelled\",\n                          },\n                        ]}\n                      />\n\n                      <Select\n                        showSearch\n                        optionFilterProp=\"label\"\n                        onChange={(e) => setSBAOrderLocation(e.value)}\n                        onSearch={onSearch}\n                        defaultValue={\"all\"}\n                        size=\"large\"\n                        //   className=\"custom-select\"\n                        labelInValue={true}\n                        options={[\n                          { value: \"all\", label: \"All Locations\" },\n                          ...city.map((item) => ({\n                            value: item.city_name,\n                            label: item.city_name,\n                          })),\n                        ]}\n                      />\n                    </ConfigProvider>\n                  </div>\n                </div>\n                <BarChart data={salesByAgent} graphTitle=\"Sales by Agent\" />\n              </div>\n            )}\n\n            <div\n              className=\"p-[25px] rounded-2xl  bg-white w-full h-[445px]\"\n              ref={stepsRef.salesByLocation}\n            >\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                <h1 className=\"text-[24px] font-bold\">Sales by Location</h1>\n                <div id=\"chartController\" className=\"flex gap-4\">\n                  <ConfigProvider\n                    theme={{\n                      token: {\n                        fontFamily: \"Baloo2\",\n                        colorPrimary: \"#8086AC\",\n                        colorLinkActive: \"#8086AC\",\n                        colorLinkHover: \"#8086AC\",\n                        colorLink: \"#8086AC\",\n                      },\n                    }}\n                  >\n                    <Select\n                      optionFilterProp=\"label\"\n                      onChange={(e) => setSBLOrderStatus(e.value)}\n                      defaultValue={\"all\"}\n                      size=\"large\"\n                      //   className=\"custom-select\"\n                      labelInValue={true}\n                      options={[\n                        {\n                          value: \"all\",\n                          label: \"All Sales\",\n                        },\n                        {\n                          value: \"completed\",\n                          label: \"Completed\",\n                        },\n                        {\n                          value: \"pending\",\n                          label: \"Pending\",\n                        },\n                        {\n                          value: \"cancelled\",\n                          label: \"Cancelled\",\n                        },\n                      ]}\n                    />\n                    {mainRole !== \"sales_agent\" ? (\n                      <Select\n                        showSearch\n                        optionFilterProp=\"label\"\n                        onChange={(e) => setSBLAgentId(e.value)}\n                        onSearch={onSearch}\n                        defaultValue={\"all\"}\n                        size=\"large\"\n                        labelInValue={true}\n                        options={[\n                          {\n                            value: \"all\",\n                            label: \"All Agents\",\n                          },\n                          ...salesAgent.map((agent) => ({\n                            value: agent._id,\n                            label: agent.name + \" \" + agent.last_name,\n                          })),\n                        ]}\n                      />\n                    ) : null}\n                  </ConfigProvider>\n                </div>\n              </div>\n              <BarChart data={salesByLocation} graphTitle=\"Sales by Location\" />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* This code For Monitoring Station dashboard  */}\n      {user.role == \"monitoring_station\" ? (\n        <MonitoringStation\n          count={count}\n          chartByAge={chartByAge}\n          chartByGender={chartByGender}\n          diseasesCountByGender={diseasesCountByGender}\n          alertsCountByName={alertsCountByName}\n          alertsCountByElderly={alertsCountByElderly}\n        />\n      ) : null}\n\n      {/* This Code for Installer Dashboard */}\n      {role == \"installer\" ? <InstallerDashboard /> : null}\n      {role == \"monitoring_agency\" ? <MonitoringAgencyDashboard /> : null}\n\n      {/* This Code for Installer Dashboard */}\n      {user.role == \"nursing_home\" ? (\n        <div className=\"w-full flex flex-col gap-6 pt-6\">\n          <div className=\"w-full flex gap-6 xl:flex-row flex-col h-fit justify-between\">\n            <div\n              className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\n              ref={stepsRef.mostAlert}\n            >\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                <h1 className=\"text-[24px] font-bold\">Most Alerts</h1>\n              </div>\n              <BarChart data={alertsCountByElderly} />\n            </div>\n            <div\n              className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\n              ref={stepsRef.activityCount}\n            >\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                <h1 className=\"text-[24px] font-bold\">Activity Count</h1>\n              </div>\n              {/* <BarChart data={alertsCountByName} /> */}\n              <BubbleChart data={alertsCountByName} />\n            </div>\n          </div>\n          <div className=\"flex gap-6 lg:flex-row flex-col h-fit\">\n            <div className=\"rounded-2xl lg:w-[75%] w-full flex flex-col gap-6 h-full\">\n              <div\n                className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\n                ref={stepsRef.ages}\n              >\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                  <h1 className=\"text-[24px] font-bold\">Ages</h1>\n                </div>\n                <BarChartByGender chartFor=\"age\" data={chartByGender} />\n              </div>\n              <div\n                className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\n                ref={stepsRef.diseases}\n              >\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                  <h1 className=\"text-[24px] font-bold\">Diseases</h1>\n                </div>\n                <BarChartByGender\n                  chartFor=\"diseases\"\n                  data={diseasesCountByGender}\n                />\n              </div>\n            </div>\n\n            <div className=\"rounded-2xl lg:w-[35%] w-full flex flex-col gap-6 h-full\">\n              <div\n                className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\"\n                ref={stepsRef.gender}\n              >\n                <div>\n                  <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n                    <h1 className=\"text-[24px] font-bold\">Gender</h1>\n                  </div>\n                  <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\n                    <PieChart data={chartByAge} chartFor=\"gender\" />\n                  </div>\n                </div>\n\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                    <div className=\"flex gap-2 items-center\">\n                      <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\n                      <span className=\"text-lg font-medium\">Total</span>\n                    </div>\n                    <span className=\"text-lg font-semibold\">\n                      {chartByAge.reduce(\n                        (acc, item) =>\n                          acc + item.male_count + item.female_count,\n                        0\n                      )}\n                    </span>\n                  </div>\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                    <div className=\"flex gap-2 items-center\">\n                      <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\n                      <span className=\"text-lg font-medium\">Male</span>\n                    </div>\n                    <span className=\"text-lg font-semibold\">\n                      {chartByAge.map((item) =>\n                        item._id === \"male\" ? item.male_count || 0 : 0\n                      )}\n                      {chartByAge.length === 0 && <>0</>}\n                    </span>\n                  </div>\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\n                    <div className=\"flex gap-2 items-center\">\n                      <div className=\"w-[12px] h-[12px] bg-[#5CC8BE] rounded-full\"></div>\n                      <span className=\"text-lg font-medium\">Female</span>\n                    </div>\n                    <span className=\"text-lg font-semibold\">\n                      {\" \"}\n                      {chartByAge.map((item) =>\n                        item._id === \"female\" ? item.male_count || 0 : 0\n                      )}\n                      {chartByAge.length === 0 && <>0</>}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst AdminDashboard = () => {\n  const [refsReady, setRefsReady] = useState({});\n  const [tourOpen, setTourOpen] = useState(false);\n  const [tourSteps, setTourSteps] = useState({});\n  const [allRefs, setAllRefs] = useState({});\n  const [seenTours, setSeenTours] = useState(() => {\n    const saved = ls.get(\"seenToursDash\");\n    return saved ? saved : {};\n  });\n  const userRole = ls.get(\"user\")?.role;\n  const user = ls.get(\"user\");\n  const handleRefsUpdate = useCallback((refs) => {\n    setAllRefs((prevRefs) => {\n      if (prevRefs !== refs) {\n        // Compare references\n        return refs;\n      }\n      return prevRefs; // No update if refs is the same\n    });\n    // console.log(refs);\n\n    // const readyTabs = {};\n    // Object.keys(refs).forEach((key) => {\n    //   if (key.startsWith(\"tour_\") && refs[key].current) {\n    //     const tab = key.split(\"_\")[1];\n    //     readyTabs[tab] = true;\n    //   }\n    // });\n\n    // setRefsReady((prev) => {\n    //   const newReadyTabs = { ...prev, ...readyTabs };\n    //   if (JSON.stringify(newReadyTabs) !== JSON.stringify(prev)) {\n    //     return newReadyTabs; // Only update if content changes\n    //   }\n    //   return prev;\n    // });\n  }, []);\n  const buttonStyles = {\n    fontSize: \"14px\",\n    padding: \"14px 18px\",\n    borderRadius: \"8px\",\n    // color: \"white\",\n  };\n  const buttonStyles2 = {\n    fontSize: \"14px\",\n    padding: \"14px 18px\",\n    borderRadius: \"8px\",\n  };\n  // const stepsRef = {\n  //   officeDropdown: useRef(null),\n  //   datePicker: useRef(null),\n  //   usersCount: useRef(null),\n  //   totalSales: useRef(null),\n  //   totalInstallations: useRef(null),\n  //   salesOverview: useRef(null),\n  //   salesByAgent: useRef(null),\n  //   salesByLocation: useRef(null),\n  // };\n\n  useEffect(() => {\n    const tourStepsByTab = {\n      distributor: [\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              As a distributor, you have a central role in managing offices,\n              agents, and location-specific analytics. Explore the tools and\n              features available to you and take control of your domain!\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Let's Start\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n        },\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\"> Your Responsibilities</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              As a Distributor, you manage offices, agents, and location\n              analytics.\n              <ul className=\"list-disc pl-5\">\n                <li>Create and manage Offices, Managers, and Agents</li>\n                <li>Assign agents to offices</li>\n                <li>View and filter location-based analytics</li>\n                <li>Oversee daily operations</li>\n              </ul>\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Start Tour\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Office Dropdown</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Use the office dropdown to select a specific office or view data\n              for all offices at once.\n            </p>\n          ),\n          target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            className: \"tour_step_btn\",\n\n            color: \"default\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Apply a custom date range filter to narrow down the data to a\n              specific period for more focused analysis.\n            </p>\n          ),\n          target: () => allRefs.tour_step_datePicker?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Quickly check the number of key users: Nursing Stations, Sales\n              Agents, Monitoring Stations and End Users.\n            </p>\n          ),\n          target: () => allRefs.tour_step_usersCount?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              View the total number of sales made, with a breakdown of their\n              statuses (Completed, Pending, and Cancelled).\n            </p>\n          ),\n          target: () => allRefs.tour_step_totalSales?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Monitor installation statuses, including Completed, In Progress,\n              and Not Started, to track installation progress.\n            </p>\n          ),\n          target: () => allRefs.tour_step_totalInstallations?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Visualize sales trends over time with the Sales Overview graph,\n              helping you identify patterns and performance.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesOverview?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales by Agent</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              See the total sales made by each agent, allowing you to track\n              individual performance and contributions.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesByAgent?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Review sales performance across different locations, helping you\n              identify high-performing or underperforming areas.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesByLocation?.current,\n          nextButtonProps: {\n            children: \"Finish\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n      ],\n      office: [\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              As an Office Manager, you'll be overseeing the performance of your\n              support agents and managing operations within your office. Let’s\n              get started!\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Let's Start\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n        },\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\">Your Responsibilities</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              As an Office Manager, your key tasks include:\n              <ul className=\"list-disc pl-5\">\n                <li>\n                  Tracking the performance of support agents assigned to your\n                  office\n                </li>\n                <li>Managing deals with end users</li>\n                <li>\n                  Coordinating the scheduling of installers for setup and\n                  service\n                </li>\n              </ul>\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Start Tour\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n\n        {\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Apply a custom date range filter to narrow down the data to a\n              specific period for more focused analysis.\n            </p>\n          ),\n          target: () => allRefs.tour_step_datePicker?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Quickly check the number of key users: Nursing Stations, Sales\n              Agents, Monitoring Stations and End Users.\n            </p>\n          ),\n          target: () => allRefs.tour_step_usersCount?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              View the total number of sales made, with a breakdown of their\n              statuses (Completed, Pending, and Cancelled).\n            </p>\n          ),\n          target: () => allRefs.tour_step_totalSales?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Monitor installation statuses, including Completed, In Progress,\n              and Not Started, to track installation progress.\n            </p>\n          ),\n          target: () => allRefs.tour_step_totalInstallations?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Visualize sales trends over time with the Sales Overview graph,\n              helping you identify patterns and performance.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesOverview?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales by Agent</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              See the total sales made by each agent, allowing you to track\n              individual performance and contributions.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesByAgent?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Review sales performance across different locations, helping you\n              identify high-performing or underperforming areas.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesByLocation?.current,\n          nextButtonProps: {\n            children: \"Finish\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n      ],\n      sales_agent: [\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\">\n              {\" \"}\n              Welcome, {user?.name} {user?.last_name}!\n            </h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Welcome to your Sales Agent Dashboard! As a Sales Agent, you are\n              responsible for registering Nursing Homes, Monitoring Stations,\n              Support Agents, and Installers. Let’s dive in and see what you can\n              do!\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Let's Start\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n        },\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\">Your Responsibilities</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              As a Sales Agent, your key tasks include:\n              <ul className=\"list-disc pl-5\">\n                <li>\n                  Registering Nursing Homes, Monitoring Stations, Support\n                  Agents, and Installers\n                </li>\n                <li>Registering end users through a sales-specific website</li>\n                <li>Viewing the end users you have signed up</li>\n              </ul>\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Start Tour\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n\n        {\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Apply a custom date range filter to narrow down the data to a\n              specific period for more focused analysis.\n            </p>\n          ),\n          target: () => allRefs.tour_step_datePicker?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Quickly check the number of key users: Nursing Stations, Sales\n              Agents, Monitoring Stations and End Users.\n            </p>\n          ),\n          target: () => allRefs.tour_step_usersCount?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              View the total number of sales made, with a breakdown of their\n              statuses (Completed, Pending, and Cancelled).\n            </p>\n          ),\n          target: () => allRefs.tour_step_totalSales?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Monitor installation statuses, including Completed, In Progress,\n              and Not Started, to track installation progress.\n            </p>\n          ),\n          target: () => allRefs.tour_step_totalInstallations?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Visualize sales trends over time with the Sales Overview graph,\n              helping you identify patterns and performance.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesOverview?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n\n        {\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Review sales performance across different locations, helping you\n              identify high-performing or underperforming areas.\n            </p>\n          ),\n          target: () => allRefs.tour_step_salesByLocation?.current,\n          nextButtonProps: {\n            children: \"Finish\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n      ],\n      monitoring_station: [\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Welcome to your Monitoring Company Dashboard! As a Monitoring\n              Company, you manage Installer and Support Agent accounts, ensuring\n              smooth operations for your customers. Let’s take a look at your\n              responsibilities:\n              <ul className=\"list-disc pl-5\">\n                <li>\n                  Manage Installer accounts and oversee their setup of devices\n                  and profiles\n                </li>\n                <li>Monitor and resolve alerts via the platform and app</li>\n                <li>Support elderly profiles assigned to your company</li>\n                <li>\n                  Ensure all installations are completed successfully at\n                  customer's homes\n                </li>\n              </ul>\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Let's Start\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n        },\n        // {\n        //   title: (\n        //     <h1 className=\"text-xl text-primary\"> Daily Activity Summary</h1>\n        //   ),\n        //   description: (\n        //     <p className=\"text-base tracking-tight text-primary/80\">\n        //       Displays key metrics such as Indoor Duration, Walking Steps, Skill\n        //       Time, Walking Speed, and Room Entry/Exit Count.\n        //     </p>\n        //   ),\n        //   // target: () => allRefs.tour_step_officeDropdown?.current,\n        //   nextButtonProps: {\n        //     children: \"Start Tour\",\n        //     style: buttonStyles,\n        //     variant: \"solid\",\n        //     size: \"middle\",\n        //     color: \"default\",\n        //     className: \"tour_step_btn\",\n        //   },\n        //   prevButtonProps: {\n        //     style: buttonStyles2,\n        //   },\n        // },\n        {\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Quickly check the number of key users: Nursing Stations, Sales\n              Agents, Monitoring Stations and End Users.\n            </p>\n          ),\n          target: () => allRefs.tour_step_usersCountM?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Ages</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              This section shows the age distribution of individuals in the\n              Nursing Home. It helps in understanding the demographics of your\n              residents, displayed by age group and gender.\n            </p>\n          ),\n          target: () => allRefs.tour_step_agesM?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Gender</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              The Gender section provides a visual breakdown of male and female\n              residents, giving you a clear understanding of the gender\n              distribution in your Nursing Home.\n            </p>\n          ),\n          target: () => allRefs.tour_step_genderM?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Diseases</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              This section tracks the prevalence of various diseases such as\n              Thyroid Disorders, Hearing Loss, Depression, and more. It helps\n              you monitor the health trends of your residents.\n            </p>\n          ),\n          target: () => allRefs.tour_step_diseasesM?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Activity</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              The Activity section shows a summary of all system activities,\n              including info, warning, and critical notifications. Here, you can\n              monitor the status of any alerts or updates, ensuring your system\n              is running smoothly.\n            </p>\n          ),\n          target: () => allRefs.tour_step_activityM?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Most Alerts</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              This section displays the most frequent alerts in the system,\n              allowing you to track any ongoing issues or patterns. You can see\n              the total alert count and the distribution of alerts across\n              various categories.\n            </p>\n          ),\n          target: () => allRefs.tour_step_mostAlertM?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Activity Count</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              The Activity Count visualizes the actions performed over time.\n              Each circle represents a different level of activity, allowing you\n              to monitor trends and track performance across periods.\n            </p>\n          ),\n          target: () => allRefs.tour_step_activityCountM?.current,\n          nextButtonProps: {\n            children: \"Finish\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n      ],\n      nursing_home: [\n        {\n          title: (\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\n          ),\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              Welcome to your Nursing Home Owner Dashboard! As a Nursing Home\n              Owner, you have full control over managing nurse accounts,\n              overseeing billing and services, and interacting with end users.\n              Let’s take a look at your responsibilities:\n              <ul className=\"list-disc pl-5\">\n                <li>Manage nurse accounts and edit their information</li>\n                <li>\n                  View and manage a list of Elderlies in your Nursing Home\n                </li>\n                <li>Create and manage end-user accounts</li>\n                <li>\n                  End users interact solely with you for subscriptions and\n                  device-related services\n                </li>\n              </ul>\n            </p>\n          ),\n          // target: () => allRefs.tour_step_officeDropdown?.current,\n          nextButtonProps: {\n            children: \"Let's Start\",\n            style: buttonStyles,\n            variant: \"solid\",\n            size: \"middle\",\n            color: \"default\",\n            className: \"tour_step_btn\",\n          },\n        },\n        // {\n        //   title: (\n        //     <h1 className=\"text-xl text-primary\"> Daily Activity Summary</h1>\n        //   ),\n        //   description: (\n        //     <p className=\"text-base tracking-tight text-primary/80\">\n        //       Displays key metrics such as Indoor Duration, Walking Steps, Skill\n        //       Time, Walking Speed, and Room Entry/Exit Count.\n        //     </p>\n        //   ),\n        //   // target: () => allRefs.tour_step_officeDropdown?.current,\n        //   nextButtonProps: {\n        //     children: \"Start Tour\",\n        //     style: buttonStyles,\n        //     variant: \"solid\",\n        //     size: \"middle\",\n        //     color: \"default\",\n        //     className: \"tour_step_btn\",\n        //   },\n        //   prevButtonProps: {\n        //     style: buttonStyles2,\n        //   },\n        // },\n\n        {\n          title: <h1 className=\"text-xl text-primary\"> Most Alerts</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              This section displays the most frequent alerts in the system,\n              allowing you to track any ongoing issues or patterns. You can see\n              the total alert count and the distribution of alerts across\n              various categories.\n            </p>\n          ),\n          target: () => allRefs.tour_step_mostAlert?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Activity Count</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              The Activity Count visualizes the actions performed over time.\n              Each circle represents a different level of activity, allowing you\n              to monitor trends and track performance across periods.\n            </p>\n          ),\n          target: () => allRefs.tour_step_activityCount?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Ages</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              This section shows the age distribution of individuals in the\n              Nursing Home. It helps in understanding the demographics of your\n              residents, displayed by age group and gender.\n            </p>\n          ),\n          target: () => allRefs.tour_step_ages?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Gender</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              The Gender section provides a visual breakdown of male and female\n              residents, giving you a clear understanding of the gender\n              distribution in your Nursing Home.\n            </p>\n          ),\n          target: () => allRefs.tour_step_gender?.current,\n          nextButtonProps: {\n            children: \"Next\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n        {\n          title: <h1 className=\"text-xl text-primary\">Diseases</h1>,\n          description: (\n            <p className=\"text-base tracking-tight text-primary/80\">\n              This section tracks the prevalence of various diseases such as\n              Thyroid Disorders, Hearing Loss, Depression, and more. It helps\n              you monitor the health trends of your residents.\n            </p>\n          ),\n          target: () => allRefs.tour_step_diseases?.current,\n          nextButtonProps: {\n            children: \"Finish\",\n            style: buttonStyles,\n            size: \"middle\",\n            color: \"default\",\n            variant: \"solid\",\n            className: \"tour_step_btn\",\n          },\n          prevButtonProps: {\n            style: buttonStyles2,\n          },\n        },\n      ],\n    };\n    setTourSteps(tourStepsByTab[userRole] || []);\n    setTimeout(() => {\n      if (tourSteps.length > 0 && !seenTours[userRole]) setTourOpen(true);\n    }, 2000);\n  }, [allRefs]);\n  const getActiveTabSteps = () => {\n    if (tourSteps.length > 0) {\n      return tourSteps;\n    } else {\n      return [];\n    }\n  };\n  function handleTourFinish() {\n    setTourOpen(false);\n    const updatedSeenTours = { ...seenTours, [userRole]: true };\n    setSeenTours(updatedSeenTours);\n    ls.set(\"seenToursDash\", updatedSeenTours);\n  }\n  return (\n    <>\n      <RefProvider onRefsUpdate={handleRefsUpdate}>\n        <AdminDashboardComponent />\n        <ConfigProvider\n          theme={{\n            token: {\n              fontFamily: \"Baloo2\",\n              colorPrimary: \"#252F67\",\n              colorLinkActive: \"#252F67\",\n              colorLinkHover: \"#252F67\",\n              colorLink: \"#252F67\",\n              primaryColor: \"#252F67\",\n            },\n          }}\n        >\n          <Tour\n            open={tourOpen}\n            onFinish={handleTourFinish}\n            steps={getActiveTabSteps()}\n            onClose={handleTourFinish}\n          />\n        </ConfigProvider>\n      </RefProvider>\n    </>\n  );\n};\nexport default AdminDashboard;\n"],"names":["BarChartByGender","data","chartFor","options","setOptions","useState","useEffect","xAxisData","item","yAxisData","range","found","maxValue","newOptions","value","jsx","ReactEcharts","PieChart","chartData","setChartData","datForChart","colorMap","colors","nameMap","TotalAlertChart","problemCount","acc","curr","warningCount","criticalCount","pieData","totalValue","sum","option","BarChart","graphTitle","seriesData","BubbleChart","hasData","params","jsxs","ReactECharts","MonitoringStation","count","chartByAge","chartByGender","diseasesCountByGender","alertsCountByName","alertsCountByElderly","registerRef","useRefContext","stepsRef","useRef","key","IconName","Fragment","SalesOverviewChart","datesArray","totalOrdersArray","TotalSalesChart","colorMapping","setColorMapping","propertyNamesMapping","CountMapping","RiPhoneFindLine","MdOutlineSupportAgent","MdOutlineAddHome","IoLogoAppleAr","MdOutlineRealEstateAgent","FiUser","MdOutlineElderly","PiBuildingOffice","BiDevices","StatusDropdown","row","sharedMethod","useContext","SidebarContext","status","setStatus","handleLoading","sethandleLoading","modalOpen","setModalOpen","handleChange","updateInstallationStatus","res","err","completeChnage","getUserDetails","user","activeSubscriptions","_a","ConfigProvider","Select","SuccessModal","installation","ReportActionModal","_b","_c","_d","_e","_f","indx","self","isUniqueSeenyorKit","i","color","Tag","total","formattedDate","record","InstallerDashboard","loading","setLoading","page","SetPage","setTotal","installationList","setInstallationList","completedInstallationList","setCompletedInstallationList","deviceSalesCount","setDeviceSalesCount","getList","query","getInstallationList","getDeviceSalesCounts","useCallback","getDeviceSalesCount","getCompletedandToBeInstalled","CustomTable","index","RangePicker","DatePicker","MonitoringAgencyDashboard","viewType","setViewType","expandedRowKeys","setExpandedRowKeys","useAlertTableColumns","recentlyClosedAlertTableColumns","alertHistory","setAlertHistory","alertHistoryLoading","setAlertHistoryLoading","limit","setLimit","eventList","setEventList","eventPage","setEventPage","eventTotal","setEventTotal","selectedAlarmType","setSelectedAlarmType","alertHistiryQuery","setAlertHistiryQuery","getEventFilter","devieCount","setDevieCount","alarmsCount","setAlarmsCount","searchResult","setSearchResult","searchQuery","setSearchQuery","isFocused","setIsFocused","selectedRowKeys","setSelectedRowKeys","openAlertCloseModal","setOpenAlertCloseModal","useNavigate","notificationEvent","useNotification","mapViewRef","alarmOptions","getAlartsHistory","getAlertList","dayjs","getElderlyBySearch","getElderlies","getElderlyAndDeviceCount","getAlarmsCounts","endDate","startDate","getAlarmCount","rowSelection","selectedKeys","handleResolveSelected","refreshSomeAPIs","Button","FaCheck","Table","RiHome5Line","MdWarningAmber","MapView","AlertCloseModal","eventKey","onOk","onSearch","AdminDashboardComponent","isModalOpen","setIsModalOpen","activeTab","setActiveTab","search","setSearch","selected","setSelected","modalOPen","list","setList","setQuery","setPage","dealLoading","setDealLoading","SetUser","ls","role","setRole","mainRole","setMainRole","fromDate","setFromDate","toDate","setToDate","SOOrderStatus","setSOOrderStatus","SOAgentId","setSOAgentId","SBAOrderStatus","setSBAOrderStatus","SBAOrderLocation","setSBAOrderLocation","SBLOrderStatus","setSBLOrderStatus","SBLAgentId","setSBLAgentId","SBPAgentId","setSBPAgentId","SBIAgentId","setSBIAgentId","DDOrderStatus","setDDOrderStatus","DDAgentId","setDDAgentId","office","setOffice","salesAgent","setSalesAgent","officeId","setOfficeId","setCount","salesOverview","setSalesOverview","salesByAgent","setSalesByAgent","salesByLocation","setSalesByLocation","salesByPaymentStatus","setSalesByPaymentStatus","salesByInstallationStatus","setSalesByInstallationStatus","dealDetails","setDealDetails","officeQuery","setOfficeQuery","agentQuery","setAgentQuery","setChartByGender","setChartByAge","setDiseasesCountByGender","setAlertsCountByElderly","setAlertsCountByName","city","setCity","ChartByGender","getChartByGender","ChartByAge","getChartByAge","DiseasesCountByGender","getDiseasesCountByGender","AlertCountByElderly","getAlertsCountByElderly","AlertCountByName","getAlertsCountByName","filteredData","getAlertInfoViaEventDetails","AllCounts","getUsersCount","config","apiItem","SalesOverview","agentId","orderStatus","getSalesOverview","SalesByAgent","getSalesData","SalesByLocation","SalesByPaymentStatus","SalesByInstallationStatus","DealDetails","getDealDetails","newQuery","prevQuery","handleWeeklyMonthly","e","handleDatePicker","getAllOffice","getUser","getAllAgent","getAllCities","getAllCity","WeeklyMonthlyPicker","dateString","agent","statusName","bgColor","label","AdminDashboard","refsReady","setRefsReady","tourOpen","setTourOpen","tourSteps","setTourSteps","allRefs","setAllRefs","seenTours","setSeenTours","saved","userRole","handleRefsUpdate","refs","prevRefs","buttonStyles","buttonStyles2","tourStepsByTab","getActiveTabSteps","handleTourFinish","updatedSeenTours","RefProvider","Tour"],"mappings":"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"}