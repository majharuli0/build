{"version":3,"file":"Analytics-Dfp4I2BW.js","sources":["../../src/MonitoringService/Components/ui/area.tsx","../../src/MonitoringService/Components/ui/bar.tsx","../../src/MonitoringService/Components/ui/pie3.tsx","../../src/MonitoringService/Pages/Analytics/Analytics.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function AreaLineChartComponent({\r\n  width = \"100%\",\r\n  height = 400,\r\n  data = [],\r\n}) {\r\n  const processData = () => {\r\n    if (!data || data.length === 0) {\r\n      return generateFallbackData();\r\n    }\r\n\r\n    const dateMap = new Map();\r\n    data.forEach((item) => {\r\n      const date = new Date(item.year, item.month - 1, item.day);\r\n      const dateKey = date.toISOString().split(\"T\")[0];\r\n      const eventType = item.event === \"5\" ? \"Device Offline\" : \"Fall Alert\";\r\n\r\n      if (!dateMap.has(dateKey)) {\r\n        dateMap.set(dateKey, {\r\n          date,\r\n          timestamp: date.getTime(),\r\n          dateFormatted: formatXAxisDate(date, data),\r\n          tooltipDate: formatTooltipDate(date),\r\n          \"Fall Alert\": 0,\r\n          \"Device Offline\": 0,\r\n        });\r\n      }\r\n\r\n      const dateData = dateMap.get(dateKey);\r\n      dateData[eventType] += item.count || 0;\r\n    });\r\n\r\n    // Convert to array and sort by date\r\n    const sortedData = Array.from(dateMap.values()).sort(\r\n      (a, b) => a.timestamp - b.timestamp\r\n    );\r\n\r\n    // Extract dates and series data\r\n    const dates = sortedData.map((item) => item.dateFormatted);\r\n    const tooltipDates = sortedData.map((item) => item.tooltipDate);\r\n    const fallAlertData = sortedData.map((item) => item[\"Fall Alert\"]);\r\n    const deviceOfflineData = sortedData.map((item) => item[\"Device Offline\"]);\r\n\r\n    return { dates, tooltipDates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  // Format date for x-axis label\r\n  const formatXAxisDate = (date, data) => {\r\n    if (!data || data.length === 0) {\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    }\r\n\r\n    const dates = data.map(\r\n      (item) => new Date(item.year, item.month - 1, item.day)\r\n    );\r\n    const minDate = new Date(Math.min(...dates));\r\n    const maxDate = new Date(Math.max(...dates));\r\n\r\n    const diffTime = Math.abs(maxDate - minDate);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays <= 60) {\r\n      // Show month and day for short ranges (up to 2 months)\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    } else {\r\n      // Show month and year for longer ranges\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        year: \"2-digit\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Format date for tooltip (always shows full date)\r\n  const formatTooltipDate = (date) => {\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      weekday: \"short\",\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  // Generate fallback data if no data provided\r\n  const generateFallbackData = () => {\r\n    const dates = [];\r\n    const tooltipDates = [];\r\n    const fallAlertData = [];\r\n    const deviceOfflineData = [];\r\n\r\n    const today = new Date();\r\n    for (let i = 9; i >= 0; i--) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n\r\n      dates.push(\r\n        date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" })\r\n      );\r\n      tooltipDates.push(\r\n        date.toLocaleDateString(\"en-US\", {\r\n          weekday: \"short\",\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n        })\r\n      );\r\n      fallAlertData.push(Math.floor(0));\r\n      deviceOfflineData.push(Math.floor(0));\r\n    }\r\n\r\n    return { dates, tooltipDates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  const { dates, tooltipDates, fallAlertData, deviceOfflineData } =\r\n    processData();\r\n\r\n  // Smart label interval calculation\r\n  const getLabelInterval = (dataLength) => {\r\n    if (dataLength <= 10) return 0; // Show all labels\r\n    if (dataLength <= 20) return 1; // Show every other label\r\n    if (dataLength <= 40) return 2; // Show every 3rd label\r\n    if (dataLength <= 60) return 3; // Show every 4th label\r\n    return Math.floor(dataLength / 12); // Dynamic interval for large datasets\r\n  };\r\n\r\n  // Calculate totals for legend\r\n  const fallAlertTotal = fallAlertData.reduce((sum, value) => sum + value, 0);\r\n  const deviceOfflineTotal = deviceOfflineData.reduce(\r\n    (sum, value) => sum + value,\r\n    0\r\n  );\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      className: \"!shadow-none\",\r\n      axisPointer: {\r\n        type: \"line\",\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n          width: 1,\r\n        },\r\n      },\r\n      formatter: (params) => {\r\n        const index = params[0].dataIndex;\r\n        const date = tooltipDates[index];\r\n        const fallAlert = params.find((p) => p.seriesName === \"Fall Alert\");\r\n        const deviceOffline = params.find(\r\n          (p) => p.seriesName === \"Device Offline\"\r\n        );\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[180px]\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${date}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: #ef4444\"></div>\r\n                  <span class=\"text-text/80 text-sm\">Fall Alert</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  fallAlert?.value || 0\r\n                }</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: #f59e0b\"></div>\r\n                  <span class=\"text-text/80 text-sm\">Device Offline</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  deviceOffline?.value || 0\r\n                }</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 10,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n        fontWeight: \"normal\",\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Fall Alert\") {\r\n          return `Fall Alert: ${fallAlertTotal.toLocaleString()}`;\r\n        } else if (name === \"Device Offline\") {\r\n          return `Device Offline: ${deviceOfflineTotal.toLocaleString()}`;\r\n        }\r\n        return name;\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: dates.length > 15 ? \"80px\" : \"50px\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: dates,\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 11,\r\n        interval: getLabelInterval(dates.length),\r\n        rotate: dates.length > 15 ? 45 : 0,\r\n        margin: dates.length > 15 ? 15 : 8,\r\n        formatter: (value) => {\r\n          return value;\r\n        },\r\n      },\r\n      axisTick: {\r\n        alignWithLabel: true,\r\n        interval: getLabelInterval(dates.length),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Fall Alert\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false,\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#ef4444\", // Red color for Fall Alert\r\n        },\r\n        itemStyle: {\r\n          color: \"#ef4444\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(239, 68, 68, 0.3)\",\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(239, 68, 68, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: fallAlertData,\r\n      },\r\n      {\r\n        name: \"Device Offline\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false,\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#f59e0b\", // Amber warning color for Device Offline\r\n        },\r\n        itemStyle: {\r\n          color: \"#f59e0b\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(245, 158, 11, 0.3)\", // Amber with opacity\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(245, 158, 11, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: deviceOfflineData,\r\n      },\r\n    ],\r\n    dataZoom: [\r\n      {\r\n        type: \"inside\",\r\n        start: dates.length > 30 ? 100 - Math.floor(3000 / dates.length) : 0,\r\n        end: 100,\r\n      },\r\n      {\r\n        show: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function CleanBarGraph({ data = [], width = \"100%\", height = 350 }) {\r\n  const generateAgentData = () => {\r\n    const scores = data.map((agent) => agent.score);\r\n    const maxScore = Math.max(...scores);\r\n    const minScore = Math.min(...scores);\r\n\r\n    return data.map((agent) => ({\r\n      ...agent,\r\n      isHighest: agent.score === maxScore,\r\n      isLowest: agent.score === minScore,\r\n      itemStyle: {\r\n        color:\r\n          agent.score === maxScore\r\n            ? \"#10b981\"\r\n            : agent.score === minScore\r\n            ? \"#ef4444\"\r\n            : \"rgb(var(--ms-primary-color))\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const agentData = generateAgentData();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const { name, value, color } = params;\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${color}\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${name}</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm pr-1\">Performance Score: </span>\r\n                <span class=\"font-mono font-bold text-text text-sm\">${value}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      top: \"5%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      show: false,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      min: 0,\r\n      max: 100,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n        formatter: \"{value}%\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Performance Score\",\r\n        type: \"bar\",\r\n        barWidth: \"60%\",\r\n        itemStyle: {\r\n          borderRadius: [7, 7, 0, 0],\r\n          borderWidth: 0,\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          formatter: \"{c}%\",\r\n        },\r\n        emphasis: {\r\n          disabled: true,\r\n        },\r\n        data: agentData.map((agent) => ({\r\n          value: agent.score,\r\n          name: agent.name,\r\n          itemStyle: {\r\n            ...agent.itemStyle,\r\n            borderWidth: 0,\r\n          },\r\n          emphasis:\r\n            agent.isHighest || agent.isLowest\r\n              ? undefined\r\n              : {\r\n                  itemStyle: {\r\n                    opacity: 0.8,\r\n                  },\r\n                },\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function PieChartComponent({\r\n  data,\r\n  centerLabel,\r\n  width = \"100%\",\r\n  height = 400,\r\n}) {\r\n  const total = data.reduce((sum, item) => sum + item.value, 0);\r\n\r\n  // Find the maximum value to emphasize the largest segment\r\n  const maxValue = Math.max(...data.map((item) => item.value));\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const percent = ((params.value / total) * 100).toFixed(1);\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${\r\n                params.color\r\n              }\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${\r\n                params.name\r\n              }</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Count</span>\r\n                <span class=\"font-mono font-medium text-text\">${params.value.toLocaleString()}</span>\r\n              </div>\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Percent</span>\r\n                <span class=\"font-mono font-medium text-text\">${percent}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"37%\", \"77%\"],\r\n        roseType: \"area\",\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 10,\r\n          focus: \"self\",\r\n        },\r\n        itemStyle: {\r\n          borderWidth: 0,\r\n          borderColor: \"#fff\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          fontSize: 14,\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          formatter: ({ name, value }) => {\r\n            return `${name}\\n{value|${value.toLocaleString()}}`;\r\n          },\r\n          rich: {\r\n            value: {\r\n              fontSize: 24,\r\n              fontWeight: 600,\r\n              color: \"rgb(var(--ms-text-color)/0.7)\",\r\n              padding: [2, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n          length: 20,\r\n          length2: 10,\r\n          smooth: true,\r\n          lineStyle: {\r\n            width: 1,\r\n            type: \"solid\",\r\n          },\r\n        },\r\n        data: data.map((item) => ({\r\n          ...item,\r\n          // Make the largest segment bigger with emphasis\r\n          ...(item.value === maxValue && {\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 15,\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n              },\r\n            },\r\n            itemStyle: {\r\n              ...item.itemStyle,\r\n              shadowBlur: 8,\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.3)\",\r\n            },\r\n          }),\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\" style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n\r\n      {/* Center Label */}\r\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\r\n        <div className=\"text-[22px] font-bold text-text\">\r\n          {total.toLocaleString()}\r\n        </div>\r\n        <div className=\"text-xs text-muted-foreground mt-0\">\r\n          {centerLabel || \"Total\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import BreadcrumbUI from \"@/MonitoringService/Components/common/breadcrumb\";\r\nimport CardUI from \"@/MonitoringService/Components/common/card\";\r\nimport AnalyticsReportPdf from \"@/MonitoringService/Components/PDFTemplate/AnalyticsReportPdf\";\r\nimport { AreaLineChartComponent } from \"@/MonitoringService/Components/ui/area\";\r\nimport { CleanBarGraph } from \"@/MonitoringService/Components/ui/bar\";\r\nimport { Button } from \"@/MonitoringService/Components/ui/button\";\r\nimport { ButtonGroup } from \"@/MonitoringService/Components/ui/button-group\";\r\nimport { Calendar } from \"@/MonitoringService/Components/ui/calendar\";\r\nimport { PieChartComponent } from \"@/MonitoringService/Components/ui/pie3\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/MonitoringService/Components/ui/popover\";\r\nimport { Scatter } from \"@/MonitoringService/Components/ui/scatter\";\r\nimport {\r\n  useAgentPerformance,\r\n  useAlertTrends,\r\n  useCountStatistics,\r\n  useSLAReport,\r\n  useTotalAlertCount,\r\n} from \"@/MonitoringService/hooks/useAnalytics\";\r\nimport useMediaQuery from \"@/MonitoringService/hooks/useMediaQuery\";\r\nimport {\r\n  calculateAgentMetrics,\r\n  formatSLAData,\r\n} from \"@/MonitoringService/Utiles/agentMetrics\";\r\nimport { formatMilliseconds } from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\nimport { ArrowRight, Cable, CalendarIcon } from \"lucide-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaRegClock } from \"react-icons/fa\";\r\nimport { FaRegChessQueen } from \"react-icons/fa6\";\r\nimport { LuCircleFadingArrowUp } from \"react-icons/lu\";\r\nimport { PiWarningCircleBold } from \"react-icons/pi\";\r\nimport config from \"../../conf.json\";\r\nimport { useWhiteLabeling } from \"@/MonitoringService/hooks/useWhiteLabeling\";\r\n\r\nexport default function Analytics() {\r\n  const { appName, logoUrl, logoDarkUrl } = useWhiteLabeling().branding;\r\n\r\n  const [range, setRange] = React.useState({\r\n    from: null,\r\n    to: null,\r\n  });\r\n  const [alertCount, setAlertCount] = useState([]);\r\n  const [agentData, setAgentData] = useState([]);\r\n  const [pdfProps, setPdfProps] = useState({});\r\n\r\n  const mapping = {\r\n    2: { name: \"Fall Alerts\", color: \"#ef4444\" },\r\n    5: { name: \"Device Offline\", color: \"#f59e0b\" },\r\n  };\r\n  //====> Count Statistics <====//\r\n  const {\r\n    data: countStatistics,\r\n    isLoading,\r\n    isError,\r\n    isSuccess,\r\n    error,\r\n  } = useCountStatistics({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n\r\n  const uptime = countStatistics?.data?.device_uptime ?? 0;\r\n  const downtime = countStatistics?.data?.device_downtime ?? 0;\r\n  const total = uptime + downtime;\r\n  const uptimePercentage = total > 0 ? Math.round((uptime / total) * 100) : 0;\r\n\r\n  //====> Total Alert Count <====//\r\n  const {\r\n    data: totalAlertCount,\r\n    isLoading: isAlertLoading,\r\n    isError: isAlertError,\r\n    isSuccess: isAlertSuccess,\r\n    error: alertError,\r\n  } = useTotalAlertCount({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  useEffect(() => {\r\n    const chartData =\r\n      Array.isArray(totalAlertCount?.data) && totalAlertCount?.data?.length > 0\r\n        ? totalAlertCount?.data?.map((item) => ({\r\n            value: item?.count ?? 0,\r\n            name: mapping[item?._id]?.name || \"Unknown\",\r\n            itemStyle: { color: mapping[item?._id]?.color || \"#9ca3af\" },\r\n          }))\r\n        : [\r\n            {\r\n              value: 0,\r\n              name: \"No Data\",\r\n              itemStyle: { color: \"#9ca3af\" },\r\n            },\r\n          ];\r\n    setAlertCount(chartData);\r\n  }, [totalAlertCount, isAlertSuccess]);\r\n\r\n  //====> Alert Trends <====//\r\n  const {\r\n    data: alertTrends,\r\n    isLoading: isAlertTrendLoading,\r\n    isError: isAlertTrendError,\r\n    error: alertTrendError,\r\n    isSuccess: alertTrendSuccess,\r\n  } = useAlertTrends({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  //====> Agent Performance <====//\r\n  const {\r\n    data: agentPerformance,\r\n    isLoading: isAgentLoading,\r\n    isError: isAgentError,\r\n    isSuccess: isAgentSuccess,\r\n    error: agentError,\r\n  } = useAgentPerformance({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  useEffect(() => {\r\n    const transformedData = agentPerformance?.data?.map((item) => {\r\n      const total =\r\n        (item.countLessThan2Min ?? 0) + (item.countGreaterThan2Min ?? 0);\r\n      const p = total > 0 ? ((item.countLessThan2Min ?? 0) / total) * 100 : 0;\r\n\r\n      return {\r\n        name: item.closed_by,\r\n        score: Math.round(p),\r\n      };\r\n    });\r\n    setAgentData(transformedData);\r\n  }, [agentPerformance, isAgentSuccess]);\r\n\r\n  //====> SLA Report <====//\r\n  const {\r\n    data: SLAReport,\r\n    isLoading: isSLALoading,\r\n    isError: isSLAError,\r\n    isSuccess: isSLASuccess,\r\n    error: slaError,\r\n  } = useSLAReport({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  function calculateCompliancePercentage(data) {\r\n    if (!data || data.length === 0) return 0;\r\n\r\n    const compliantAlerts = data.filter((item) => item.sla_status).length;\r\n    const percentage = (compliantAlerts / data.length) * 100;\r\n\r\n    return Math.round(percentage * 100) / 100;\r\n  }\r\n  const isSmallScreen = useMediaQuery(\"(max-width: 1366px)\");\r\n  const metrics = calculateAgentMetrics(agentData);\r\n  const formatTooltipDate = (date) => {\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      weekday: \"short\",\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const basicInfo = {\r\n      companyName: appName,\r\n      startDate: range.from || dayjs().format(\"YYYY-MM-DD\"),\r\n      endDate: range.to || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n      totalAlerts: totalAlertCount?.data?.reduce((a, b) => a + b.count, 0) || 0,\r\n      avgResponseTime: formatMilliseconds(\r\n        countStatistics?.data?.avg_res_time || 0\r\n      ),\r\n      slaCompliance:\r\n        (SLAReport?.data && calculateCompliancePercentage(SLAReport?.data)) ||\r\n        0 + \"%\",\r\n      deviceUptime: Math.round(uptimePercentage) + \"%\",\r\n    };\r\n    const FallCount =\r\n      alertCount?.filter((item) => item.name == \"Fall Alerts\")[0]?.value || 0;\r\n    const DeviceOfflineCount =\r\n      alertCount?.filter((item) => item.name == \"Device Offline\")[0]?.value ||\r\n      0;\r\n\r\n    const totalAlertOverview = {\r\n      fall: FallCount,\r\n      offline: DeviceOfflineCount,\r\n      total: FallCount + DeviceOfflineCount,\r\n    };\r\n    const dateMap = new Map();\r\n    alertTrends?.data?.forEach((item) => {\r\n      const date = new Date(item.year, item.month - 1, item.day);\r\n      const dateKey = date.toISOString().split(\"T\")[0];\r\n      const eventType = item.event === \"5\" ? \"offline\" : \"fall\";\r\n\r\n      if (!dateMap.has(dateKey)) {\r\n        dateMap.set(dateKey, {\r\n          timestamp: date.getTime(),\r\n          date: formatTooltipDate(date),\r\n          fall: 0,\r\n          offline: 0,\r\n          total: 0,\r\n        });\r\n      }\r\n\r\n      const dateData = dateMap.get(dateKey);\r\n      dateData[eventType] += item.count || 0;\r\n      dateData.total = dateData.fall + dateData.offline;\r\n    });\r\n\r\n    const alertTrendsSorted = Array.from(dateMap.values()).sort(\r\n      (a, b) => a.timestamp - b.timestamp\r\n    );\r\n    alertTrendsSorted.forEach((item) => {\r\n      delete item.timestamp;\r\n    });\r\n\r\n    const agentDataWithPercentage = agentData?.map((item) => ({\r\n      ...item,\r\n      score: `${item.score}%`,\r\n    }));\r\n    const slaData = formatSLAData(SLAReport?.data || []);\r\n    setPdfProps({\r\n      basicInfo,\r\n      totalAlertOverview,\r\n      alertTrends: alertTrendsSorted,\r\n      agentPerformance: agentDataWithPercentage,\r\n      slaCompliance: slaData,\r\n    });\r\n  }, [\r\n    range.to,\r\n    range.form,\r\n    totalAlertCount,\r\n    alertTrends,\r\n    agentData,\r\n    isAgentSuccess,\r\n    SLAReport,\r\n  ]);\r\n  return (\r\n    <div className=\"mb-6\">\r\n      {\" \"}\r\n      <div\r\n        id=\"customer_heading\"\r\n        className=\"flex justify-between sm:flex-row flex-col gap-4 items-center mb-6\"\r\n      >\r\n        <Navigation />\r\n        <div className=\"flex gap-2  items-center\">\r\n          <Popover>\r\n            <PopoverTrigger asChild>\r\n              <Button variant=\"tertiary\">\r\n                <CalendarIcon />\r\n                {range?.from && range?.to ? (\r\n                  `${range.from} - ${range.to}`\r\n                ) : (\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span>Start Date</span> <ArrowRight /> <span>End Date</span>\r\n                  </div>\r\n                )}\r\n              </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"overflow-hidden p-0\" align=\"end\">\r\n              <Calendar\r\n                className=\"w-full border-border\"\r\n                mode=\"range\"\r\n                selected={range}\r\n                onSelect={(selectedRange) => {\r\n                  if (!selectedRange?.from || !selectedRange?.to) {\r\n                    setRange({ from: null, to: null });\r\n                    return;\r\n                  }\r\n\r\n                  setRange({\r\n                    from: dayjs(selectedRange.from).format(\"YYYY-MM-DD\"),\r\n                    to: dayjs(selectedRange.to).format(\"YYYY-MM-DD\"),\r\n                  });\r\n                }}\r\n                captionLayout=\"dropdown\"\r\n                fixedWeeks\r\n                showOutsideDays\r\n              />\r\n            </PopoverContent>\r\n          </Popover>\r\n\r\n          <AnalyticsReportPdf pdfProps={pdfProps} />\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        <div className=\" items-center justify-between grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4 lg:auto-rows-fr\">\r\n          <TailsCard\r\n            label=\"Total Alerts\"\r\n            value={totalAlertCount?.data?.reduce((a, b) => a + b.count, 0) || 0}\r\n            icon={<PiWarningCircleBold size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Avg. Response Time\"\r\n            value={formatMilliseconds(countStatistics?.data?.avg_res_time || 0)}\r\n            icon={<FaRegClock size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"SLA Compliance\"\r\n            value={\r\n              (SLAReport?.data &&\r\n                calculateCompliancePercentage(SLAReport?.data)) ||\r\n              0 + \"%\"\r\n            }\r\n            icon={<FaRegChessQueen size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Device Uptime\"\r\n            value={Math.round(uptimePercentage) + \"%\"}\r\n            icon={<LuCircleFadingArrowUp size={20} color=\"white\" />}\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2 lg:auto-rows-fr\">\r\n          <div id=\"Total Alert Overview Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Total Alert Overview</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4 !h-full flex items-center justify-center\">\r\n                <PieChartComponent\r\n                  data={alertCount}\r\n                  centerLabel=\" \"\r\n                  width=\"100%\"\r\n                  height={isSmallScreen ? 340 : 400}\r\n                />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Alert Trends Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Alert Trends</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <AreaLineChartComponent data={alertTrends?.data} />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Agent Performance Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Agent Performance</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <CleanBarGraph data={agentData} height={340} />\r\n                <div className=\"flex items-center gap-4 justify-center mt-4\">\r\n                  <SummaryView\r\n                    title=\"Total Agent\"\r\n                    value={metrics.totalAgents}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Avg. Performance\"\r\n                    value={metrics.averagePerformance + \"%\"}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Highest Performance\"\r\n                    value={metrics.highestPerformance + \"%\"}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Lowest Performance\"\r\n                    value={metrics.lowestPerformance + \"%\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"SLA Compliance Report Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">SLA Compliance Report</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <Scatter width=\"100%\" height={400} data={SLAReport?.data} />\r\n            </CardUI>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-start gap-2 w-full\">\r\n        <h1 className=\"text-text sm:text-xl text-lg\">Reporting & Analytics</h1>\r\n        <div className=\"opacity-95\">\r\n          <BreadcrumbUI />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TailsCard = ({ label = \"\", value = \"\", icon }) => {\r\n  return (\r\n    <div className=\"bg-card p-4 flex items-center justify-between gap-3 rounded-md w-full\">\r\n      <div>\r\n        <span className=\"text-sm\">{label}</span>\r\n        <h1 className=\"text-lg font-semibold\">{value}</h1>\r\n      </div>\r\n      <div className=\"p-2 bg-primary w-fit rounded-md text-lg\">{icon}</div>\r\n    </div>\r\n  );\r\n};\r\nconst SummaryView = ({ title, value }) => {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-2 \">\r\n        <div className=\"p-2 px-3 bg-primary rounded-lg text-white font-medium text-sm\">\r\n          {\" \"}\r\n          {value}\r\n        </div>\r\n        <div className=\"rounded-lg text-sm text-wrap\"> {title}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["AreaLineChartComponent","width","height","data","processData","generateFallbackData","dateMap","item","date","dateKey","eventType","formatXAxisDate","formatTooltipDate","dateData","sortedData","a","b","dates","tooltipDates","fallAlertData","deviceOfflineData","minDate","maxDate","diffTime","today","i","getLabelInterval","dataLength","fallAlertTotal","sum","value","deviceOfflineTotal","option","params","index","fallAlert","p","deviceOffline","name","jsx","ReactECharts","CleanBarGraph","agentData","scores","agent","maxScore","minScore","color","PieChartComponent","centerLabel","total","maxValue","percent","jsxs","Analytics","appName","logoUrl","logoDarkUrl","useWhiteLabeling","range","setRange","React","alertCount","setAlertCount","useState","setAgentData","pdfProps","setPdfProps","mapping","countStatistics","isLoading","isError","isSuccess","error","useCountStatistics","dayjs","uptime","_a","downtime","_b","uptimePercentage","totalAlertCount","isAlertLoading","isAlertError","isAlertSuccess","alertError","useTotalAlertCount","useEffect","chartData","alertTrends","isAlertTrendLoading","isAlertTrendError","alertTrendError","alertTrendSuccess","useAlertTrends","agentPerformance","isAgentLoading","isAgentError","isAgentSuccess","agentError","useAgentPerformance","transformedData","SLAReport","isSLALoading","isSLAError","isSLASuccess","slaError","useSLAReport","calculateCompliancePercentage","percentage","isSmallScreen","useMediaQuery","metrics","calculateAgentMetrics","basicInfo","formatMilliseconds","FallCount","_c","DeviceOfflineCount","_d","totalAlertOverview","_e","alertTrendsSorted","agentDataWithPercentage","slaData","formatSLAData","Navigation","Popover","PopoverTrigger","Button","CalendarIcon","ArrowRight","PopoverContent","Calendar","selectedRange","AnalyticsReportPdf","TailsCard","PiWarningCircleBold","FaRegClock","FaRegChessQueen","LuCircleFadingArrowUp","CardUI","SummaryView","Scatter","Fragment","BreadcrumbUI","label","icon","title"],"mappings":"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"}