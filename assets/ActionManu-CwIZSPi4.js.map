{"version":3,"file":"ActionManu-CwIZSPi4.js","sources":["../../src/Components/AutoUpdatingDuration/AutoUpdatingDuration.jsx","../../src/Components/ActionManu/ActionManu.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { transformDateAndTimeToDuration } from \"@/utils/helper\";\r\n\r\nconst AutoUpdatingDuration = ({ date }) => {\r\n  const [duration, setDuration] = useState(() =>\r\n    transformDateAndTimeToDuration(date)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const updateDuration = () => {\r\n      const newDuration = transformDateAndTimeToDuration(date);\r\n      setDuration(newDuration);\r\n    };\r\n\r\n    updateDuration();\r\n\r\n    const interval = setInterval(updateDuration, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [date]);\r\n\r\n  return <>{duration}</>;\r\n};\r\n\r\nexport default AutoUpdatingDuration;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { HiDotsVertical } from \"react-icons/hi\";\r\nimport { IoMdCheckmark } from \"react-icons/io\";\r\nimport { FaRegRectangleXmark } from \"react-icons/fa6\";\r\nimport { Popover } from \"antd\";\r\nimport DeleteModal from \"@/Shared/delete/DeleteModal\";\r\nimport SuccessModal from \"@/Shared/Success/SuccessModal\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport { addEvent, getEventList, updateEvent } from \"@/api/elderlySupport\";\r\nimport CustomErrorToast from \"@/Shared/Tosat/CustomErrorToast\";\r\nimport toast from \"react-hot-toast\";\r\nimport CustomToast from \"@/Shared/Tosat/CustomToast\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\n\r\nexport default function ActionManu({ row }) {\r\n  const [popupShow, setPopupShow] = useState(false);\r\n  const [closeModal, setCloseModal] = useState(false);\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const sharedMethod = useContext(SidebarContext);\r\n\r\n  const handleOpenChange = (open) => {\r\n    setPopupShow(open);\r\n  };\r\n  const onMark = (inf) => {\r\n    updateEvent({\r\n      id: inf.id,\r\n      data: {\r\n        event_status: inf.event_status,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        toast.custom((t) => (\r\n          <CustomToast t={t} text={\"Event Status Updated Successfully!\"} />\r\n        ));\r\n        sharedMethod?.getList();\r\n      })\r\n      .catch((err) => {\r\n        toast.custom((t) => (\r\n          <CustomErrorToast t={t} title=\"Error\" text={err.message} />\r\n        ));\r\n      });\r\n  };\r\n  const content = (\r\n    <>\r\n      <div className=\"flex items-center gap-1 flex-col m-2\">\r\n        <span\r\n          onClick={() => setSuccessModal(true)}\r\n          className=\"flex items-center gap-2 justify-start p-2 px-4 w-full mt-2 rounded-md hover:bg-[#008000]/10 cursor-pointer\"\r\n        >\r\n          <IoMdCheckmark color=\"green\" /> Mark As Done\r\n        </span>\r\n        <span\r\n          onClick={() => setCloseModal(true)}\r\n          className=\"flex items-center gap-2 justify-start p-2 px-4 mb-2 w-full rounded-md hover:bg-red-500/10 cursor-pointer\"\r\n        >\r\n          <FaRegRectangleXmark color=\"red\" />\r\n          Close Event\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div\r\n        onClick={() => setPopupShow(true)}\r\n        className=\"cursor-pointer p-2 hover:bg-[#E8E9EE] rounded-full\"\r\n      >\r\n        <HiDotsVertical className=\"cursor-pointer\" />\r\n      </div>\r\n      <Popover\r\n        open={popupShow}\r\n        onOpenChange={handleOpenChange}\r\n        content={content}\r\n        placement=\"leftTop\"\r\n        trigger=\"click\"\r\n      ></Popover>\r\n      <DeleteModal\r\n        onDelete={() => onMark({ id: row?._id, event_status: \"closed\" })}\r\n        modalOPen={closeModal}\r\n        setModalOpen={setCloseModal}\r\n        title={\"Are you sure you want to mark this event as close?\"}\r\n        title2={\"This process cannot be undone.\"}\r\n        okText={\"Close Event\"}\r\n      />\r\n      <SuccessModal\r\n        modalOPen={successModal}\r\n        setModalOpen={setSuccessModal}\r\n        onOk={() => onMark({ id: row?._id, event_status: \"open\" })}\r\n        title={\"Are you sure you want to mark this event as completed?\"}\r\n        title2={\"This process cannot be undone.\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n// export const content = (\r\n//   <>\r\n//     <div className=\"flex items-center gap-1 flex-col m-2\">\r\n//       <span\r\n//         onClick={() => setCloseModal(true)}\r\n//         className=\"flex items-center gap-2 justify-start p-2 px-4 w-full mt-2 rounded-md hover:bg-[#008000]/10 cursor-pointer\"\r\n//       >\r\n//         <IoMdCheckmark color=\"green\" /> Mark As Done\r\n//       </span>\r\n//       <span className=\"flex items-center gap-2 justify-start p-2 px-4 mb-2 w-full rounded-md hover:bg-red-500/10 cursor-pointer\">\r\n//         <FaRegRectangleXmark color=\"red\" />\r\n//         Close Event\r\n//       </span>\r\n//     </div>\r\n//   </>\r\n// );\r\n"],"names":["AutoUpdatingDuration","date","duration","setDuration","useState","transformDateAndTimeToDuration","useEffect","updateDuration","newDuration","interval","ActionManu","row","popupShow","setPopupShow","closeModal","setCloseModal","successModal","setSuccessModal","sharedMethod","useContext","SidebarContext","handleOpenChange","open","onMark","inf","updateEvent","res","toast","t","jsx","CustomToast","err","CustomErrorToast","content","Fragment","jsxs","IoMdCheckmark","FaRegRectangleXmark","HiDotsVertical","Popover","DeleteModal","SuccessModal"],"mappings":"qoBAGA,MAAMA,EAAuB,CAAC,CAAE,KAAAC,KAAW,CACnC,KAAA,CAACC,EAAUC,CAAW,EAAIC,EAAA,SAAS,IACvCC,EAA+BJ,CAAI,CAAA,EAGrCK,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAiB,IAAM,CACrB,MAAAC,EAAcH,EAA+BJ,CAAI,EACvDE,EAAYK,CAAW,CAAA,EAGVD,IAET,MAAAE,EAAW,YAAYF,EAAgB,GAAK,EAC3C,MAAA,IAAM,cAAcE,CAAQ,CAAA,EAClC,CAACR,CAAI,CAAC,oBAEC,SAASC,CAAA,CAAA,CACrB,ECPwB,SAAAQ,EAAW,CAAE,IAAAC,GAAO,CAC1C,KAAM,CAACC,EAAWC,CAAY,EAAIT,WAAS,EAAK,EAC1C,CAACU,EAAYC,CAAa,EAAIX,WAAS,EAAK,EAC5C,CAACY,EAAcC,CAAe,EAAIb,WAAS,EAAK,EAChDc,EAAeC,aAAWC,CAAc,EAExCC,EAAoBC,GAAS,CACjCT,EAAaS,CAAI,CAAA,EAEbC,EAAUC,GAAQ,CACVC,EAAA,CACV,GAAID,EAAI,GACR,KAAM,CACJ,aAAcA,EAAI,YACpB,CAAA,CACD,EACE,KAAME,GAAQ,CACPC,EAAA,OAAQC,GACZC,MAACC,GAAY,EAAAF,EAAM,KAAM,oCAAsC,CAAA,CAChE,EACDV,GAAA,MAAAA,EAAc,SAAQ,CACvB,EACA,MAAOa,GAAQ,CACRJ,EAAA,OAAQC,GACXC,EAAA,IAAAG,EAAA,CAAiB,EAAAJ,EAAM,MAAM,QAAQ,KAAMG,EAAI,OAAA,CAAS,CAC1D,CAAA,CACF,CAAA,EAECE,EACJJ,EAAAA,IAAAK,EAAA,SAAA,CACE,SAACC,OAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAAAA,EAAA,KAAC,OAAA,CACC,QAAS,IAAMlB,EAAgB,EAAI,EACnC,UAAU,6GAEV,SAAA,CAACY,EAAAA,IAAAO,EAAA,CAAc,MAAM,OAAQ,CAAA,EAAE,eAAA,CAAA,CACjC,EACAD,EAAA,KAAC,OAAA,CACC,QAAS,IAAMpB,EAAc,EAAI,EACjC,UAAU,2GAEV,SAAA,CAACc,EAAAA,IAAAQ,EAAA,CAAoB,MAAM,KAAM,CAAA,EAAE,aAAA,CAAA,CAErC,CAAA,CACF,CAAA,CACF,CAAA,EAIA,OAAAF,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAN,EAAA,IAAC,MAAA,CACC,QAAS,IAAMhB,EAAa,EAAI,EAChC,UAAU,qDAEV,SAAAgB,EAAAA,IAACS,EAAe,CAAA,UAAU,gBAAiB,CAAA,CAAA,CAC7C,EACAT,EAAA,IAACU,EAAA,CACC,KAAM3B,EACN,aAAcS,EACd,QAAAY,EACA,UAAU,UACV,QAAQ,OAAA,CACT,EACDJ,EAAA,IAACW,EAAA,CACC,SAAU,IAAMjB,EAAO,CAAE,GAAIZ,GAAA,YAAAA,EAAK,IAAK,aAAc,SAAU,EAC/D,UAAWG,EACX,aAAcC,EACd,MAAO,qDACP,OAAQ,iCACR,OAAQ,aAAA,CACV,EACAc,EAAA,IAACY,EAAA,CACC,UAAWzB,EACX,aAAcC,EACd,KAAM,IAAMM,EAAO,CAAE,GAAIZ,GAAA,YAAAA,EAAK,IAAK,aAAc,OAAQ,EACzD,MAAO,yDACP,OAAQ,gCAAA,CACV,CACF,CAAA,CAAA,CAEJ"}