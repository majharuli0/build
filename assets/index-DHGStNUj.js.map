{"version":3,"file":"index-DHGStNUj.js","sources":["../../src/Pages/Supportnursing/components/salesOverviewChart.jsx","../../src/Pages/Supportnursing/components/totalSalesChart.jsx","../../src/Pages/Supportnursing/components/barChart.jsx","../../src/Pages/Supportnursing/components/barChartByGender.jsx","../../src/Pages/Supportnursing/components/pieChart.jsx","../../src/Pages/Supportnursing/count-utiles.jsx","../../src/Pages/Supportnursing/components/totalAlertChart.jsx","../../src/Pages/Supportnursing/components/bubbleChart.jsx","../../src/Pages/Supportnursing/Dashboards/MonitoringStation.jsx","../../src/Pages/Supportnursing/utiles.jsx","../../src/Pages/Supportnursing/Dashboards/Installer.jsx","../../src/Pages/Supportnursing/Dashboards/MonitoringAgency.jsx","../../src/Pages/Supportnursing/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function SalesOverviewChart({ data = [] }) {\r\n  // Extract _id (dates) and total_orders\r\n  const datesArray = data.map((item) => item._id);\r\n  const totalOrdersArray = data.map((item) => item.total_orders);\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"10%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: datesArray,\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        data: totalOrdersArray,\r\n        type: \"line\",\r\n        symbol: \"circle\",\r\n        symbolSize: 10,\r\n        itemStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1, // Gradient from top (y=0) to bottom (y=1)\r\n            colorStops: [\r\n              { offset: 0, color: \"rgba(67, 121, 238, 0.5)\" }, // Top: Transparent\r\n              { offset: 1, color: \"rgba(255, 255, 255, 0) \" }, // Bottom: Blue with 50% opacity\r\n            ],\r\n          },\r\n        },\r\n\r\n        lineStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n      },\r\n    ],\r\n    graphic:\r\n      totalOrdersArray.length === 0\r\n        ? {\r\n            type: \"text\",\r\n            left: \"center\",\r\n            top: \"middle\",\r\n            style: {\r\n              text: \"No Data Available\",\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              fill: \"#999\", // color of the text\r\n            },\r\n          }\r\n        : null,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function TotalSalesChart({ data = [], chartFor = \"\" }) {\r\n  const totalValue = data.reduce((sum, item) => sum + item.total_orders, 0);\r\n  const [colorMapping, setColorMapping] = useState({});\r\n  const propertyNamesMapping = {\r\n    completed: \"Completed\",\r\n    pending: \"In Progress\",\r\n    cancelled: \"Cancelled\",\r\n    not_started: \"Not Started\",\r\n  };\r\n  useEffect(() => {\r\n    if (chartFor === \"totalSales\") {\r\n      setColorMapping({\r\n        completed: \"#4379EE\",\r\n        pending: \"#F1963A\",\r\n        cancelled: \"#D90000\",\r\n      });\r\n    } else if (chartFor === \"totalInstallations\") {\r\n      setColorMapping({\r\n        completed: \"#36b610\",\r\n        pending: \"#833af1\",\r\n        not_started: \"#5d5d5d\",\r\n      });\r\n    }\r\n  }, [chartFor]);\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"0%\",\r\n      top: \"0%\",\r\n      containLabel: true,\r\n    },\r\n    // color: Object.values(colorMapping),\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"40%\", \"70%\"],\r\n        avoidLabelOverlap: false,\r\n        itemStyle: {\r\n          borderRadius: 10,\r\n          borderColor: \"#fff\",\r\n          borderWidth: 2,\r\n        },\r\n        label: {\r\n          show: false,\r\n          position: \"center\",\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: false,\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n        },\r\n        data: data.map((item) => ({\r\n          value: item.total_orders,\r\n          name: propertyNamesMapping[item.property_name] || \"Unknown Status\",\r\n          itemStyle: {\r\n            color: colorMapping[item.property_name],\r\n          },\r\n        })),\r\n      },\r\n    ],\r\n    graphic: {\r\n      elements: [\r\n        {\r\n          type: \"text\",\r\n          id: \"center-total-text\",\r\n          left: \"center\",\r\n          top: \"53%\",\r\n          style: {\r\n            text: \"Total\",\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 16,\r\n          },\r\n        },\r\n        {\r\n          type: \"text\",\r\n          id: \"center-value-text\",\r\n          left: \"center\",\r\n          top: \"45%\",\r\n          style: {\r\n            text: totalValue,\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 22,\r\n            fontWeight: \"bold\",\r\n          },\r\n          // Position the value text slightly below the center\r\n          position: [0, 50], // Adjust the 20 value to control the vertical spacing\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"340px\", height: \"340px\" }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function BarChart({ data = [], graphTitle }) {\r\n  const yAxisData = data.map(\r\n    (item) => item.property_name || item.elderly_name || \"Unknown\"\r\n  );\r\n  const seriesData = data.map((item) => item.total_orders || item.count);\r\n  const option = {\r\n    xAxis: {\r\n      max: \"dataMax\",\r\n    },\r\n    tooltip: {},\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"10%\",\r\n      top: \"5%\",\r\n      containLabel: true,\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      data: yAxisData,\r\n      inverse: true,\r\n      animationDuration: 300,\r\n      animationDurationUpdate: 300,\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"inside\",\r\n        yAxisIndex: 0,\r\n        start: 0,\r\n        end: 100,\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: graphTitle,\r\n        type: \"bar\",\r\n        // stack:'total',\r\n        data: seriesData,\r\n        itemStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          valueAnimation: true,\r\n        },\r\n        barWidth: seriesData.length < 5 ? 30 : \"auto\",\r\n      },\r\n    ],\r\n    label: {\r\n      show: true,\r\n      // formatter: \"{c}\", // Format to show dollar sign before the value\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    graphic:\r\n      seriesData.length === 0\r\n        ? {\r\n            type: \"text\",\r\n            left: \"center\",\r\n            top: \"middle\",\r\n            style: {\r\n              text: \"No Data Available\",\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              fill: \"#999\", // color of the text\r\n            },\r\n          }\r\n        : null,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function BarChartByGender({ data = [], chartFor }) {\r\n  const [options, setOptions] = useState({});\r\n  useEffect(() => {\r\n    if (data.length === 0) {\r\n      setOptions({\r\n        graphic: {\r\n          type: \"text\",\r\n          left: \"center\",\r\n          top: \"middle\",\r\n          style: {\r\n            text: \"No Data Available\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            fill: \"#999\",\r\n          },\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Default X-Axis for Age Chart\r\n    const defaultAgeXAxis = [\r\n      \"20-29\",\r\n      \"30-39\",\r\n      \"40-49\",\r\n      \"50-59\",\r\n      \"60-69\",\r\n      \"70-79\",\r\n      \"80-89\",\r\n      \"90-99\",\r\n    ];\r\n\r\n    // Prepare X-Axis and Y-Axis Data\r\n    const xAxisData =\r\n      chartFor === \"age\" ? defaultAgeXAxis : data.map((item) => item._id);\r\n    const yAxisData = [\r\n      {\r\n        name: \"Male\",\r\n        type: \"bar\",\r\n        color: \"#357AF6\",\r\n        data: xAxisData.map((range) => {\r\n          const found = data.find((item) => item._id === range);\r\n          return found ? found.male_count : 0;\r\n        }),\r\n      },\r\n      {\r\n        name: \"Female\",\r\n        type: \"bar\",\r\n        color: \"#5CC8BE\",\r\n        data: xAxisData.map((range) => {\r\n          const found = data.find((item) => item._id === range);\r\n          return found ? found.female_count : 0;\r\n        }),\r\n      },\r\n    ];\r\n    const maxValue = Math.max(...yAxisData.flatMap((item) => item.data));\r\n\r\n    // Define chart options dynamically\r\n    const newOptions = {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: { type: \"shadow\" },\r\n      },\r\n      legend: {\r\n        show: true,\r\n        top: 0,\r\n        data: [\"Male\", \"Female\"],\r\n      },\r\n      grid: {\r\n        left: chartFor === \"age\" ? \"0%\" : \"5%\",\r\n        right: \"0%\",\r\n        bottom: \"10%\",\r\n        top: \"10%\",\r\n        containLabel: true,\r\n      },\r\n      series: yAxisData, // Series is the same for both chart types\r\n    };\r\n\r\n    if (chartFor === \"age\") {\r\n      newOptions.xAxis = {\r\n        type: \"category\",\r\n        data: xAxisData,\r\n      };\r\n      newOptions.yAxis = {\r\n        type: \"value\",\r\n        boundaryGap: [0, 0.01],\r\n        min: 0,\r\n        max: maxValue,\r\n        interval: 1,\r\n        axisLabel: {\r\n          formatter: (value) => {\r\n            // Display integer values only\r\n            return Math.floor(value);\r\n          },\r\n        },\r\n      };\r\n    } else if (chartFor === \"diseases\") {\r\n      newOptions.yAxis = {\r\n        type: \"category\",\r\n        data: xAxisData,\r\n      };\r\n      newOptions.xAxis = {\r\n        type: \"value\",\r\n        boundaryGap: [0, 0.01],\r\n        min: 0,\r\n        max: maxValue,\r\n        interval: 1,\r\n        axisLabel: {\r\n          formatter: (value) => {\r\n            // Display integer values only\r\n            return Math.floor(value);\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    setOptions(newOptions);\r\n  }, [data.length]);\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={options}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\nimport grid from \"antd/es/grid\";\r\n\r\nexport default function PieChart({ data = [], chartFor }) {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let datForChart = data?.map((item) => {\r\n      if (chartFor === \"device\") {\r\n        const colorMap = {\r\n          completed: \"#08A1F7\", // Changed to hex code for green\r\n          pending: \"#922BF2\", // Changed to hex code for gray\r\n          not_started: \"#FF3B11\",\r\n        };\r\n\r\n        const colors = data.map((item) => colorMap[item._id]);\r\n\r\n        const newOptions = {\r\n          ...options,\r\n          color: colors,\r\n        };\r\n\r\n        setOptions(newOptions);\r\n        const nameMap = {\r\n          not_started: \"Not Started\",\r\n          completed: \"Completed\",\r\n          pending: \"Pending\",\r\n        };\r\n        return {\r\n          value: item.count,\r\n          name: nameMap[item._id] || item._id,\r\n        };\r\n      } else {\r\n        return {\r\n          value: item.male_count + item.female_count,\r\n          name:\r\n            item._id === \"male\"\r\n              ? \"Male\"\r\n              : item._id === \"fe-male\"\r\n              ? \"Female\"\r\n              : null,\r\n        };\r\n      }\r\n    });\r\n    setChartData(datForChart);\r\n  }, [data]);\r\n\r\n  const [options, setOptions] = useState({\r\n    title: {},\r\n    tooltip: {\r\n      trigger: \"item\",\r\n    },\r\n\r\n    legend: { show: false },\r\n    labelLine: {\r\n      show: false,\r\n    },\r\n    color: [\"#4379EE\", \"#5CC8BE\", \"#243642\", \"#BC7C7C\"],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newOptions = { ...options };\r\n    if (chartFor == \"gender\") {\r\n      newOptions.series = [\r\n        {\r\n          type: \"pie\",\r\n          radius: \"50%\",\r\n          data: chartData,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n        },\r\n      ];\r\n    } else if (chartFor == \"device\") {\r\n      newOptions.series = [\r\n        {\r\n          type: \"pie\",\r\n          radius: \"50%\",\r\n          data: chartData,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n        },\r\n      ];\r\n    }\r\n    setOptions(newOptions);\r\n  }, [chartFor, chartData]);\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={options}\r\n      style={{ width: \"340px\", height: \"340px\" }}\r\n    />\r\n  );\r\n}\r\n","import { FiUser } from \"react-icons/fi\";\r\nimport { MdOutlineRealEstateAgent } from \"react-icons/md\";\r\nimport { MdOutlineSupportAgent } from \"react-icons/md\";\r\nimport { RiPhoneFindLine } from \"react-icons/ri\";\r\nimport { MdOutlineAddHome } from \"react-icons/md\";\r\nimport { IoLogoAppleAr } from \"react-icons/io5\";\r\nimport { MdOutlineElderly } from \"react-icons/md\";\r\nimport { PiBuildingOffice } from \"react-icons/pi\";\r\nimport { BiDevices } from \"react-icons/bi\";\r\n\r\nexport const CountMapping = [\r\n  {\r\n    role: \"monitoring_station\",\r\n    label: \"Control Center\",\r\n    color: \"#EA5A92\",\r\n    icon: RiPhoneFindLine,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"supports_agent\",\r\n    label: \"Support Agent\",\r\n    color: \"#17C3A5\",\r\n    icon: MdOutlineSupportAgent,\r\n    rolesAllowed: [\"sales_agent\", \"supports_agent\", \"monitoring_station\"],\r\n  },\r\n  {\r\n    role: \"nursing_home\",\r\n    label: \"Nursing Home\",\r\n    color: \"#5096F6\",\r\n    icon: MdOutlineAddHome,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"distributor\",\r\n    label: \"Distributor\",\r\n    color: \"#FA8035\",\r\n    icon: IoLogoAppleAr,\r\n    rolesAllowed: [],\r\n  },\r\n  {\r\n    role: \"sales_agent\",\r\n    label: \"Sales Agent\",\r\n    color: \"#D188E1\",\r\n    icon: MdOutlineRealEstateAgent,\r\n    rolesAllowed: [\"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"end_user\",\r\n    label: \"End User\",\r\n    color: \"#7DBBE2\",\r\n    icon: FiUser,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"installer\",\r\n    label: \"Installer\",\r\n    color: \"#7695FF\",\r\n    icon: FiUser,\r\n    rolesAllowed: [\"monitoring_station\", \"office\", \"sales_agent\"],\r\n  },\r\n  {\r\n    role: \"elderly\",\r\n    label: \"Elderly\",\r\n    color: \"#FF885B\",\r\n    icon: MdOutlineElderly,\r\n    rolesAllowed: [\"monitoring_station\"],\r\n  },\r\n  {\r\n    role: \"office\",\r\n    label: \"Office\",\r\n    color: \"#FF885B\",\r\n    icon: PiBuildingOffice,\r\n    rolesAllowed: [\"\"],\r\n  },\r\n  {\r\n    role: \"device\",\r\n    label: \"Device\",\r\n    color: \"#FF885B\",\r\n    icon: BiDevices,\r\n    rolesAllowed: [],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function TotalAlertChart({ data = [] }) {\r\n  // Calculate counts for each type\r\n  const problemCount = data\r\n    .filter((item) => item.type === 1)\r\n    .reduce((acc, curr) => acc + curr.count, 0);\r\n  const warningCount = data\r\n    .filter((item) => item.type === 2)\r\n    .reduce((acc, curr) => acc + curr.count, 0);\r\n  const criticalCount = data\r\n    .filter((item) => item.type === 3)\r\n    .reduce((acc, curr) => acc + curr.count, 0);\r\n\r\n  // Prepare data for the pie chart\r\n  const pieData = [\r\n    { value: problemCount, name: \"Info\" },\r\n    { value: warningCount, name: \"Warning\" },\r\n    { value: criticalCount, name: \"Critical\" },\r\n  ];\r\n\r\n  // Calculate the total value\r\n  const totalValue = pieData.reduce((sum, item) => sum + item.value, 0);\r\n\r\n  // ECharts option configuration\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n    },\r\n    color: [\"#4379EE\", \"#F1963A\", \"#D90000\"],\r\n    series: [\r\n      {\r\n        name: \"Activity\",\r\n        type: \"pie\",\r\n        radius: [\"40%\", \"70%\"],\r\n        avoidLabelOverlap: false,\r\n        itemStyle: {\r\n          borderRadius: 10,\r\n          borderColor: \"#fff\",\r\n          borderWidth: 2,\r\n        },\r\n        label: {\r\n          show: false,\r\n          formatter: \"{b}: {c} ({d}%)\",\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: false,\r\n            fontSize: 18,\r\n            fontWeight: \"bold\",\r\n          },\r\n        },\r\n        data: data.length !== 0 ? pieData : null,\r\n      },\r\n    ],\r\n    graphic: {\r\n      elements: [\r\n        {\r\n          type: \"text\",\r\n          left: \"center\",\r\n          top: \"53%\",\r\n          style: {\r\n            text: \"Total\",\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 16,\r\n          },\r\n        },\r\n        {\r\n          type: \"text\",\r\n          left: \"center\",\r\n          top: \"45%\",\r\n          style: {\r\n            text: totalValue.toString(),\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 22,\r\n            fontWeight: \"bold\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts option={option} style={{ width: \"340px\", height: \"340px\" }} />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nconst BubbleChart = ({ data = [] }) => {\r\n  const hasData = data.length > 0;\r\n  const option = {\r\n    title: {},\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      textStyle: {\r\n        color: \"#333\", // Text color\r\n        fontSize: 16,\r\n        fontFamily: \"Arial, sans-serif\",\r\n      },\r\n      formatter: function (params) {\r\n        return `\r\n            <div style=\"padding: 5px; text-align: left;\">\r\n              <div><strong>Activity:</strong> ${params.data[0]}</div>\r\n              <div><strong>Count:</strong> ${params.data[1]}</div>\r\n            </div>\r\n          `;\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"2%\",\r\n      right: \"0%\",\r\n      bottom: \"30%\",\r\n      top: \"12%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n      axisLine: {\r\n        show: false, // Hide x-axis line\r\n      },\r\n      axisTick: {\r\n        show: false, // Hide x-axis ticks\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      name: \"Count\",\r\n      nameLocation: \"center\",\r\n      nameGap: 40,\r\n      scale: true, // Enables dynamic scaling for the y-axis\r\n      splitLine: {\r\n        show: false, // Optional: Hide grid lines for a cleaner look\r\n      },\r\n    },\r\n    dataZoom: hasData\r\n      ? [\r\n          {\r\n            type: \"inside\", // Enables scrolling and zooming\r\n            start: 0,\r\n            end: 100,\r\n          },\r\n          {\r\n            type: \"slider\",\r\n            start: 0,\r\n            end: 100,\r\n          },\r\n        ]\r\n      : [], // No zoom bar if there's no data\r\n    series: hasData\r\n      ? [\r\n          {\r\n            type: \"scatter\",\r\n            symbolSize: function (value) {\r\n              // Dynamic bubble size with an upper limit for large datasets\r\n              return Math.min(Math.sqrt(value[1]) * 5, 40);\r\n            },\r\n            data: data.map((item) => [item.property_name, item.count]),\r\n            label: {\r\n              show: false, // Turn off bubble labels for large datasets\r\n            },\r\n            itemStyle: {\r\n              color: \"rgba(67, 121, 238, 0.8)\", // Semi-transparent shade\r\n            },\r\n          },\r\n        ]\r\n      : [],\r\n  };\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"w-full h-full flex items-center justify-center\">\r\n        {\" \"}\r\n        <span className=\"text-[#999999] font-semibold text-xl\">\r\n          {\" \"}\r\n          No Data Available\r\n        </span>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ReactECharts\r\n      option={option}\r\n      style={{ height: \"370px\", width: \"100%\" }}\r\n      opts={{ renderer: \"canvas\" }} // Ensures canvas-based rendering for responsiveness\r\n    />\r\n  );\r\n};\r\n\r\nexport default BubbleChart;\r\n","import React, { useRef } from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport BarChartByGender from \"../components/barChartByGender\";\r\nimport PieChart from \"../components/pieChart\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport TotalAlertChart from \"../components/totalAlertChart\";\r\nimport BarChart from \"../components/barChart\";\r\nimport {\r\n  getChartByGender,\r\n  getChartByAge,\r\n  getDiseasesCountByGender,\r\n} from \"@/api/Dashboard\";\r\nimport BubbleChart from \"../components/bubbleChart\";\r\nimport { useRefContext } from \"@/Context/RefContext\";\r\n\r\nexport default function MonitoringStation({\r\n  count,\r\n  chartByAge = [],\r\n  chartByGender = [],\r\n  diseasesCountByGender = [],\r\n  alertsCountByName = [],\r\n  alertsCountByElderly = [],\r\n}) {\r\n  const { registerRef } = useRefContext();\r\n\r\n  // const [chartByGender, setChartByGender] = useState([]);\r\n  // const [chartByAge, setChartByAge] = useState([]);\r\n  // const [diseasesCountByGender, setDiseasesCountByGender] = useState([]);\r\n  // //Chart by gender (male and female)\r\n  // const ChartByGender = useCallback(() => {\r\n  //   getChartByGender()\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setChartByGender(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  // //chart by age with range\r\n  // const ChartByAge = useCallback(() => {\r\n  //   getChartByAge()\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setChartByAge(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  // //Diseses count by gender\r\n  // const DiseasesCountByGender = useCallback(() => {\r\n  //   getDiseasesCountByGender()\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setDiseasesCountByGender(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   ChartByGender();\r\n  //   ChartByAge();\r\n  //   DiseasesCountByGender();\r\n  // }, []);\r\n  const stepsRef = {\r\n    usersCountM: useRef(null),\r\n    mostAlertM: useRef(null),\r\n    activityCountM: useRef(null),\r\n    agesM: useRef(null),\r\n    genderM: useRef(null),\r\n    diseasesM: useRef(null),\r\n    activityM: useRef(null),\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(stepsRef).forEach((key) => {\r\n      if (stepsRef[key].current) {\r\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\r\n      }\r\n    });\r\n  }, [registerRef]);\r\n  return (\r\n    <div className=\"w-full flex flex-col gap-6 pt-6\">\r\n      <div className=\"flex gap-6 lg:flex-row flex-col h-fit\">\r\n        <div className=\"rounded-2xl lg:w-[75%] w-full flex flex-col gap-6 h-full\">\r\n          <div id=\"Reports\" className=\"w-full rounded-2xl flex flex-col gap-6\">\r\n            <div\r\n              id=\"Cards\"\r\n              className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3\"\r\n              ref={stepsRef.usersCountM}\r\n            >\r\n              {count?.map((item, key) => {\r\n                let IconName = item.icon;\r\n                return (\r\n                  <div\r\n                    key={key}\r\n                    id=\"Card\"\r\n                    style={{ backgroundColor: item?.color }}\r\n                    className=\"cursor-pointer group flex w-full items-center p-4 py-6 text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n                  >\r\n                    <div\r\n                      id=\"circle\"\r\n                      className=\"w-[100px] h-[100px] bg-white/20 absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out\"\r\n                    ></div>\r\n                    <div\r\n                      id=\"circle\"\r\n                      className=\"w-[100px] h-[100px] bg-white/10 absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out\"\r\n                    ></div>\r\n                    <div className=\"bg-opacity-10 h-fit rounded-[8px] p-2 bg-black/20\">\r\n                      {IconName && <IconName color=\"#fff\" size={20} />}\r\n                    </div>\r\n                    <div className=\"flex flex-col items-start\">\r\n                      <h1 className=\"text-[26px] font-semibold leading-none\">\r\n                        {item.count || 0}\r\n                      </h1>\r\n                      <span className=\"text-[14px] font-medium text-white/70 leading-none\">\r\n                        {item.label}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {[1, 2, 3].map((item, key) => (\r\n              <div\r\n                key={key}\r\n                id=\"Card\"\r\n                className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#0F60FF] text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n              >\r\n                <div\r\n                  id=\"circle\"\r\n                  className=\"w-[100px] h-[100px] bg-white/20 absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out\"\r\n                ></div>\r\n                <div\r\n                  id=\"circle\"\r\n                  className=\"w-[100px] h-[100px] bg-white/10 absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out\"\r\n                ></div>\r\n                <div className=\"bg-opacity-10 h-fit rounded-[8px] p-2 bg-black/20\">\r\n                  <FiUser color=\"#fff\" size={20} />\r\n                </div>\r\n                <div className=\"flex flex-col items-start\">\r\n                  <h1 className=\"text-[26px] font-semibold leading-none\">\r\n                    1.6k\r\n                  </h1>\r\n                  <span className=\"text-[14px] font-medium text-white/70 leading-none\">\r\n                    Customers\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))} */}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\r\n            ref={stepsRef.agesM}\r\n          >\r\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n              <h1 className=\"text-[24px] font-bold\">Ages</h1>\r\n            </div>\r\n            <BarChartByGender\r\n              // data={\r\n              //   chartByAge.length > 0\r\n              //     ? chartByAge\r\n              //     : [\r\n              //         {\r\n              //           _id: \"20-29\",\r\n              //           male_count: 4,\r\n              //           female_count: 0,\r\n              //         },\r\n              //         {\r\n              //           _id: \"70-79\",\r\n              //           male_count: 0,\r\n              //           female_count: 2,\r\n              //         },\r\n              //         {\r\n              //           _id: \"90-99\",\r\n              //           male_count: 1,\r\n              //           female_count: 1,\r\n              //         },\r\n              //       ]\r\n              // }\r\n              data={chartByGender}\r\n              chartFor=\"age\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\r\n            ref={stepsRef.diseasesM}\r\n          >\r\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n              <h1 className=\"text-[24px] font-bold\">Diseases</h1>\r\n            </div>\r\n            <BarChartByGender\r\n              // data={\r\n              //   diseasesCountByGender.length > 0\r\n              //     ? diseasesCountByGender\r\n              //     : [\r\n              //         {\r\n              //           _id: \"Diabetes5\",\r\n              //           male_count: 0,\r\n              //           female_count: 1,\r\n              //         },\r\n              //         {\r\n              //           _id: \"Hypertension5\",\r\n              //           male_count: 0,\r\n              //           female_count: 1,\r\n              //         },\r\n              //       ]\r\n              // }\r\n              data={diseasesCountByGender}\r\n              chartFor=\"diseases\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-2xl lg:w-[35%] w-full flex flex-col gap-6 h-full\">\r\n          <div\r\n            className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\"\r\n            ref={stepsRef.genderM}\r\n          >\r\n            <div>\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Gender</h1>\r\n              </div>\r\n              <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                <PieChart\r\n                  // data={\r\n                  //   chartByGender.length > 0\r\n                  //     ? chartByGender\r\n                  //     : [\r\n                  //         {\r\n                  //           _id: \"fe-male\",\r\n                  //           male_count: 0,\r\n                  //           female_count: 3,\r\n                  //         },\r\n                  //         {\r\n                  //           _id: \"male\",\r\n                  //           male_count: 5,\r\n                  //           female_count: 0,\r\n                  //         },\r\n                  //       ]\r\n                  // }\r\n                  data={chartByAge}\r\n                  chartFor=\"gender\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Total</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {chartByAge.reduce(\r\n                    (acc, item) => acc + item.male_count + item.female_count,\r\n                    0\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Male</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {chartByAge.map((item) =>\r\n                    item._id === \"male\" ? item.male_count || 0 : 0\r\n                  )}\r\n                  {chartByAge.length === 0 && <>0</>}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#5CC8BE] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Female</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {\" \"}\r\n                  {chartByAge.map((item) =>\r\n                    item._id === \"female\" ? item.male_count || 0 : 0\r\n                  )}\r\n                  {chartByAge.length === 0 && <>0</>}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\"\r\n            ref={stepsRef.activityM}\r\n          >\r\n            <div>\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Activity</h1>\r\n                <div id=\"chartController\" className=\"flex gap-4\"></div>\r\n              </div>\r\n              <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                <TotalAlertChart data={alertsCountByName} />\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Info</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {alertsCountByName\r\n                    .filter((item) => item.type === 1)\r\n                    .reduce((acc, curr) => acc + curr.count, 0)}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#F1963A] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Warning</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {alertsCountByName\r\n                    .filter((item) => item.type === 2)\r\n                    .reduce((acc, curr) => acc + curr.count, 0)}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#D90000] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Critical</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {alertsCountByName\r\n                    .filter((item) => item.type === 3)\r\n                    .reduce((acc, curr) => acc + curr.count, 0)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full flex gap-6 xl:flex-row flex-col h-[500px] justify-between\">\r\n        <div\r\n          className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\r\n          ref={stepsRef.mostAlertM}\r\n        >\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">Most Alerts</h1>\r\n          </div>\r\n          <BarChart data={alertsCountByElderly} />\r\n        </div>\r\n        <div\r\n          className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\r\n          ref={stepsRef.activityCountM}\r\n        >\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">Activity Count</h1>\r\n          </div>\r\n          <BubbleChart data={alertsCountByName} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Tag } from \"antd\";\r\nimport ReportActionModal from \"@/Components/ReportActionModal/ReportActionModal\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { ConfigProvider, Select } from \"antd\";\r\nimport {\r\n  activeSubscriptions,\r\n  updateInstallationStatus,\r\n} from \"@/api/ordersManage\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { getUserDetails } from \"@/api/Users\";\r\nimport SuccessModal from \"@/Shared/Success/SuccessModal\";\r\nfunction StatusDropdown({ row }) {\r\n  const sharedMethod = useContext(SidebarContext);\r\n  const [status, setStatus] = useState(row?.installation_status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    if (value === \"completed\") {\r\n      setModalOpen(true);\r\n    } else {\r\n      sethandleLoading(true);\r\n      updateInstallationStatus(row?._id, {\r\n        installation_status: value,\r\n      })\r\n        .then((res) => {\r\n          if (res) {\r\n            setStatus(value);\r\n          }\r\n          sharedMethod.getInstallationList.getCompletedandToBeInstalled();\r\n          sharedMethod.getInstallationList.getDeviceSalesCounts();\r\n        })\r\n        .catch((err) => {\r\n          setStatus(row?.installation_status);\r\n        })\r\n        .finally(() => {\r\n          sethandleLoading(false);\r\n        });\r\n    }\r\n  };\r\n  const completeChnage = async () => {\r\n    sethandleLoading(true);\r\n    const isAIMonitoring = row?.products.filter(\r\n      (item) => item?.type === \"AI Monitoring\"\r\n    );\r\n    if (isAIMonitoring.length > 0) {\r\n      await getUserDetails({\r\n        id: row?.user_id,\r\n      })\r\n        .then((user) => {\r\n          if (user) {\r\n            activeSubscriptions({\r\n              subscription_id: user?.data?.subscription_id,\r\n              extend_day: \"30\",\r\n            })\r\n              .then(() => {})\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    await updateInstallationStatus(row?._id, {\r\n      installation_status: \"completed\",\r\n    })\r\n      .then((res) => {\r\n        if (res) {\r\n          setStatus(\"completed\");\r\n        }\r\n        sharedMethod.getInstallationList.getCompletedandToBeInstalled();\r\n        sharedMethod.getInstallationList.getDeviceSalesCounts();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setStatus(row?.installation_status);\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.installation_status);\r\n  }, [row?.installation_status]);\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status === \"completed\"\r\n            ? \"bg-[#1EB564]\"\r\n            : status === \"pending\"\r\n            ? \"bg-yellow-500\"\r\n            : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      {/* Status select dropdown */}\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          dropdownMatchSelectWidth={false}\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: \"completed\", label: <span>Complete</span> },\r\n            { value: \"pending\", label: <span>Pending</span> },\r\n            { value: \"not_started\", label: <span>Not Started</span> },\r\n          ]}\r\n        />\r\n        <SuccessModal\r\n          modalOPen={modalOpen}\r\n          setModalOpen={setModalOpen}\r\n          title={\"\"}\r\n          title2={\r\n            \"Are you sure you want to change the status to 'Completed'? Once confirmed, this action cannot be undone, and user subscription will start immediately from now.\"\r\n          }\r\n          okText=\"Confirm\"\r\n          onOk={() => completeChnage()}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\nconst dealDetailCol = [\r\n  {\r\n    title: \"Office Identifier\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.office_name}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Agent Name (ID Number)\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.agent_name} ({row.agent_unique_id})\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Date of Sales\",\r\n    render: (row) => {\r\n      const formattedDate = new Date(row.created_at).toLocaleDateString(\r\n        \"en-CA\"\r\n      );\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {formattedDate}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  // {\r\n  //   title: \"Approval Date\",\r\n  //   render: (row) => (\r\n  //     <button>\r\n  //       <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n  //         {row.approvalDate}\r\n  //       </span>\r\n  //     </button>\r\n  //   ),\r\n  // },\r\n  {\r\n    title: \"Product Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\r\n              indx < 2 && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter((item, indx, self) => {\r\n              const isUniqueSeenyorKit =\r\n                item.type === \"Seenyor Kit\" &&\r\n                self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\r\n              return (\r\n                !/^AI Sensor/.test(item.type) &&\r\n                (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\r\n              );\r\n            })\r\n            .map((item, indx) => {\r\n              const color =\r\n                item.type === \"Seenyor Kit\"\r\n                  ? \"blue\"\r\n                  : item.type === \"Installation\"\r\n                  ? \"orange\"\r\n                  : \"default\";\r\n              return (\r\n                <Tag key={indx} color={color}>\r\n                  {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\r\n                </Tag>\r\n              );\r\n            })}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Product Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n          $\r\n          {row.products\r\n            .filter((item) =>\r\n              [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              )\r\n            )\r\n            .reduce((total, item) => total + item.price, 0)\r\n            .toFixed(2)}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter(\r\n              (item) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                )\r\n            )\r\n            .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\r\n          0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products\r\n              .filter(\r\n                (item) =>\r\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                    item.type\r\n                  )\r\n              )\r\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.products\r\n            .map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n            .filter(Boolean).length === 0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products.map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Total Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          ${row.total.toFixed(2)}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.address?.line1},{\" \"}\r\n          {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\r\n          {row.address?.city}, {row.address?.state},{\" \"}\r\n          {row.address ? row.address.postal_code : \" \"}, {row.address?.country}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    dataIndex: \"payment_status\",\r\n    key: \"payment_status\",\r\n    filters: [\r\n      { text: \"Pending\", value: \"pending\" },\r\n      { text: \"Cancelled\", value: \"cancelled\" },\r\n      { text: \"Completed\", value: \"completed\" },\r\n    ],\r\n    filterMultiple: true,\r\n    onFilter: (value, record) => record.payment_status.includes(value),\r\n    render: (status, record) => {\r\n      let color = \"\";\r\n\r\n      switch (status) {\r\n        case \"pending\":\r\n          color = \"orange\";\r\n          break;\r\n        case \"cancelled\":\r\n          color = \"red\";\r\n          break;\r\n        case \"completed\":\r\n          color = \"green\";\r\n          break;\r\n        default:\r\n          color = \"black\";\r\n      }\r\n\r\n      return (\r\n        <span\r\n          style={{\r\n            backgroundColor: color,\r\n            color: \"white\",\r\n            padding: \"4px 8px\",\r\n            borderRadius: \"4px\",\r\n            fontWeight: 500,\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {status}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst installation = [\r\n  {\r\n    title: \"Installation Status\",\r\n    render: (row) => <StatusDropdown row={row} />,\r\n  },\r\n  {\r\n    title: \"Report\",\r\n    render: (row) => (\r\n      <div className=\"flex justify-center\">\r\n        <ReportActionModal report={row} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Customer Name\",\r\n    render: (row) => {\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {row?.user_name}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Customer Phone Number\",\r\n    render: (row) => {\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {row?.user_phone}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Customer Email\",\r\n    render: (row) => {\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {row?.user_email}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.address?.line1},{\" \"}\r\n          {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\r\n          {row.address?.city}, {row.address?.state},{\" \"}\r\n          {row.address ? row.address.postal_code : \" \"}, {row.address?.country}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Product Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\r\n              indx < 2 && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter((item, indx, self) => {\r\n              const isUniqueSeenyorKit =\r\n                item.type === \"Seenyor Kit\" &&\r\n                self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\r\n              return (\r\n                !/^AI Sensor/.test(item.type) &&\r\n                (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\r\n              );\r\n            })\r\n            .map((item, indx) => {\r\n              const color =\r\n                item.type === \"Seenyor Kit\"\r\n                  ? \"blue\"\r\n                  : item.type === \"Installation\"\r\n                  ? \"orange\"\r\n                  : \"default\";\r\n              return (\r\n                <Tag key={indx} color={color}>\r\n                  {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\r\n                </Tag>\r\n              );\r\n            })}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Product Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n          $\r\n          {row.products\r\n            .filter((item) =>\r\n              [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              )\r\n            )\r\n            .reduce((total, item) => total + item.price, 0)\r\n            .toFixed(2)}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter(\r\n              (item) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                )\r\n            )\r\n            .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\r\n          0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products\r\n              .filter(\r\n                (item) =>\r\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                    item.type\r\n                  )\r\n              )\r\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.products\r\n            .map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n            .filter(Boolean).length === 0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products.map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Total Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          ${row.total}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Date of Sales\",\r\n    render: (row) => {\r\n      const formattedDate = new Date(row.created_at).toLocaleDateString(\r\n        \"en-CA\"\r\n      );\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {formattedDate}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n\r\n  {\r\n    title: \"Payment Status\",\r\n    dataIndex: \"payment_status\",\r\n    key: \"payment_status\",\r\n    filters: [\r\n      { text: \"Completed\", value: \"completed\" },\r\n      { text: \"Pending\", value: \"pending\" },\r\n      { text: \"Cancelled\", value: \"cancelled\" },\r\n    ],\r\n    filterMultiple: true,\r\n    onFilter: (value, record) => record.payment_status.includes(value),\r\n    render: (status) => {\r\n      let color = \"\";\r\n\r\n      switch (status) {\r\n        case \"completed\":\r\n          color = \"green\";\r\n          break;\r\n        case \"pending\":\r\n          color = \"orange\";\r\n          break;\r\n        case \"cancelled\":\r\n          color = \"red\";\r\n          break;\r\n        default:\r\n          color = \"black\";\r\n      }\r\n\r\n      return (\r\n        <span\r\n          style={{\r\n            backgroundColor: color,\r\n            color: \"white\",\r\n            padding: \"4px 8px\",\r\n            borderRadius: \"4px\",\r\n            fontWeight: 500,\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {status}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\n// Export both arrays\r\nexport { dealDetailCol, installation };\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport PieChart from \"../components/pieChart\";\r\nimport MapLocat from \"../components/map\";\r\nimport { ConfigProvider, Table } from \"antd\";\r\nimport { installation } from \"../utiles\";\r\nimport { getInstallationList } from \"../../../api/ordersManage\";\r\nimport { getDeviceSalesCount } from \"@/api/Dashboard\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { useRefContext } from \"@/Context/RefContext\";\r\n\r\nexport default function InstallerDashboard() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, SetPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [installationList, setInstallationList] = useState([]);\r\n  const [completedInstallationList, setCompletedInstallationList] = useState(\r\n    []\r\n  );\r\n  const [deviceSalesCount, setDeviceSalesCount] = useState([]);\r\n  function getList(query) {\r\n    // setLoading(true);\r\n    setLoading(true);\r\n    getInstallationList(query)\r\n      .then((res) => {\r\n        setInstallationList(res.data);\r\n        setTotal(res.total);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getDeviceSalesCounts = useCallback(() => {\r\n    getDeviceSalesCount()\r\n      .then((res) => {\r\n        setDeviceSalesCount(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [page]);\r\n  const getCompletedandToBeInstalled = useCallback(() => {\r\n    getList({ installation_status: \"completed\", ne: true, page: page });\r\n  }, [page]);\r\n  useEffect(() => {\r\n    getCompletedandToBeInstalled();\r\n  }, [getCompletedandToBeInstalled]);\r\n  useEffect(() => {\r\n    getDeviceSalesCounts();\r\n  }, [getDeviceSalesCounts]);\r\n  const { registerRef } = useRefContext();\r\n\r\n  const stepsRef = {\r\n    step1: useRef(null),\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(stepsRef).forEach((key) => {\r\n      if (stepsRef[key].current) {\r\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\r\n      }\r\n    });\r\n  }, [registerRef]);\r\n  return (\r\n    <div className=\"flex flex-col gap-6 pt-6\">\r\n      <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\r\n        {/* <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[500px]\">\r\n          <MapLocat />\r\n        </div> */}\r\n        <div\r\n          id=\"NewInstallation\"\r\n          className=\"p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-full\"\r\n        >\r\n          <div\r\n            id=\"ChartHeader\"\r\n            className=\"w-full flex justify-between mb-8\"\r\n            ref={stepsRef.step1}\r\n          >\r\n            <h1 className=\"text-[24px] font-bold\">To Be Installed</h1>\r\n            <div id=\"chartController\" className=\"flex gap-4\"></div>\r\n          </div>\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                fontFamily: \"Baloo2\",\r\n                colorPrimary: \"#8086AC\",\r\n                colorLinkActive: \"#8086AC\",\r\n                colorLinkHover: \"#8086AC\",\r\n                colorLink: \"#8086AC\",\r\n              },\r\n            }}\r\n          >\r\n            <SidebarContext.Provider\r\n              value={{\r\n                getInstallationList: {\r\n                  getCompletedandToBeInstalled,\r\n                  getDeviceSalesCounts,\r\n                },\r\n                total: total,\r\n                page,\r\n                SetPage,\r\n              }}\r\n            >\r\n              <CustomTable\r\n                loading={loading}\r\n                scroll={{ x: 750 }}\r\n                columns={installation}\r\n                tableData={installationList}\r\n              />\r\n            </SidebarContext.Provider>\r\n          </ConfigProvider>\r\n        </div>\r\n        <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full\">\r\n          <div>\r\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n              <h1 className=\"text-[24px] font-bold\">Device Installed</h1>\r\n            </div>\r\n            <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n              <PieChart data={deviceSalesCount} chartFor=\"device\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n            {[\"completed\", \"pending\", \"not_started\"].map((status, index) => {\r\n              const item = deviceSalesCount.find(\r\n                (item) => item._id === status\r\n              ) || { _id: status, count: 0 };\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  id=\"InfoItem\"\r\n                  className=\"w-full flex justify-between\"\r\n                >\r\n                  <div className=\"flex gap-2 items-center\">\r\n                    <div\r\n                      className={`w-[12px] h-[12px] ${\r\n                        item._id === \"completed\"\r\n                          ? \"bg-[#08A1F7]\"\r\n                          : item._id === \"pending\"\r\n                          ? \"bg-[#922BF2]\"\r\n                          : \"bg-[#FF3B11]\"\r\n                      } rounded-full`}\r\n                    ></div>\r\n                    <span className=\"text-lg font-medium capitalize\">\r\n                      {item._id === \"completed\"\r\n                        ? \"Completed\"\r\n                        : item._id === \"pending\"\r\n                        ? \"Pending\"\r\n                        : \"Not Started\"}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"text-lg font-semibold\">{item.count}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div\r\n        id=\"TotalInstallation\"\r\n        className=\" p-[25px] rounded-2xl  bg-white w-full h-full \"\r\n      >\r\n        <div id=\"ChartHeader\" className=\"w-full flex justify-between mb-8\">\r\n          <h1 className=\"text-[24px] font-bold\">Total Installation</h1>\r\n          <div id=\"chartController\" className=\"flex gap-4\"></div>\r\n        </div>\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              fontFamily: \"Baloo2\",\r\n              colorPrimary: \"#8086AC\",\r\n              colorLinkActive: \"#8086AC\",\r\n              colorLinkHover: \"#8086AC\",\r\n              colorLink: \"#8086AC\",\r\n            },\r\n          }}\r\n        >\r\n          <SidebarContext.Provider\r\n            value={{\r\n              getInstallationList: {\r\n                getCompletedandToBeInstalled,\r\n                getDeviceSalesCounts,\r\n              },\r\n              total: total,\r\n              page,\r\n              SetPage,\r\n            }}\r\n          >\r\n            <CustomTable\r\n              loading={loading}\r\n              scroll={{ x: 750 }}\r\n              columns={installation}\r\n              tableData={completedInstallationList}\r\n            />\r\n          </SidebarContext.Provider>\r\n        </ConfigProvider>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Select, Table, Button } from \"antd\";\r\nimport { HomeOutlined, AimOutlined } from \"@ant-design/icons\";\r\nimport MapView from \"./Components/Mapview/index\";\r\nimport { DatePicker, Input } from \"antd\";\r\nconst { RangePicker } = DatePicker;\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { useAlertTableColumns } from \"../Utiles/utiles\";\r\nimport { getAlertList, getEventList } from \"@/api/elderlySupport\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\n// import { getEventFilter } from \"@/utils/helper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ActiveAlertsCards from \"@/Components/ActiveAlerts/ActiveAlertsCards\";\r\nimport { getElderlies } from \"@/api/elderly\";\r\nimport { getAlarmCount, getElderlyAndDeviceCount } from \"@/api/Dashboard\";\r\nimport { RiHome5Line } from \"react-icons/ri\";\r\nimport { IoMdWarning } from \"react-icons/io\";\r\nimport { MdWarningAmber } from \"react-icons/md\";\r\nimport { FaCheck } from \"react-icons/fa6\";\r\nimport AlertCloseModal from \"@/Components/ActiveAlerts/AlertCloseModal\";\r\nimport { useNotification } from \"@/Context/useNotification\";\r\n\r\nexport default function MonitoringAgencyDashboard() {\r\n  const [viewType, setViewType] = useState(\"Map View\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [expandedRowKeys, setExpandedRowKeys] = useState([]);\r\n  const activeAlertTableColumns = useAlertTableColumns(\"activeAlert\");\r\n  const recentlyClosedAlertTableColumns = useAlertTableColumns(\"recentAlarms\");\r\n  const [alertHistory, setAlertHistory] = useState([]);\r\n  const [alertHistoryLoading, setAlertHistoryLoading] = useState(true);\r\n  const [limit, setLimit] = useState(50);\r\n  const [eventList, setEventList] = useState([]);\r\n  const [eventPage, setEventPage] = useState([]);\r\n  const [eventTotal, setEventTotal] = useState(0);\r\n  const eventsTableColumns = useAlertTableColumns(\"events\");\r\n  const [selectedAlarmType, setSelectedAlarmType] = useState(\"fl_dv\"); // Default to \"All Alarms\"\r\n  const [alertHistiryQuery, setAlertHistiryQuery] = useState(\r\n    getEventFilter(\"fl_dv\")\r\n  );\r\n  const [devieCount, setDevieCount] = useState({});\r\n  const [alarmsCount, setAlarmsCount] = useState({});\r\n  const [searchResult, setSearchResult] = useState();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [openAlertCloseModal, setOpenAlertCloseModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { notificationEvent } = useNotification();\r\n  const mapViewRef = useRef(null);\r\n  const alarmOptions = [\r\n    { value: \"fl_dv\", label: \"All Alarms\" },\r\n    { value: \"fall_detected\", label: \"Fall Detected\" },\r\n    { value: \"device_disconnected\", label: \"Device Disconnected\" },\r\n  ];\r\n\r\n  function handleDatePicker(dateString) {\r\n    console.log(dateString);\r\n  }\r\n\r\n  const onExpand = (expanded, record) => {\r\n    if (expanded) {\r\n      setExpandedRowKeys([record._id]);\r\n    } else {\r\n      setExpandedRowKeys([]);\r\n    }\r\n  };\r\n\r\n  const getAlartsHistory = useCallback(() => {\r\n    setAlertHistoryLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-01-01\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: false,\r\n      lookup: false,\r\n      limit: limit,\r\n      ...alertHistiryQuery,\r\n    })\r\n      .then((res) => {\r\n        setAlertHistoryLoading(false);\r\n        setAlertHistory(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setAlertHistoryLoading(false);\r\n        console.log(err);\r\n      });\r\n  }, [limit, alertHistiryQuery]);\r\n\r\n  useEffect(() => {\r\n    getAlartsHistory();\r\n  }, [getAlartsHistory]);\r\n\r\n  const getElderlyBySearch = useCallback(() => {\r\n    if (searchQuery.trim() === \"\") {\r\n      setSearchResult([]);\r\n      return;\r\n    }\r\n    getElderlies({ search: searchQuery })\r\n      .then((res) => {\r\n        setSearchResult(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [searchQuery]);\r\n\r\n  useEffect(() => {\r\n    getElderlyBySearch();\r\n  }, [getElderlyBySearch]);\r\n\r\n  const highlightText = (text, query) => {\r\n    if (!query) return text;\r\n    const regex = new RegExp(`(${query})`, \"gi\");\r\n    return text.replace(\r\n      regex,\r\n      `<mark style=\"background-color: #80CAA7; color: white;\">$1</mark>`\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getElderlyAndDeviceCount()\r\n      .then((res) => setDevieCount(res?.data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const getAlarmsCounts = useCallback(() => {\r\n    const endDate = dayjs();\r\n    const startDate = dayjs().subtract(7, \"days\");\r\n    getAlarmCount({\r\n      end_date: startDate.format(\"YYYY-MM-DD\"),\r\n      from_date: endDate.format(\"YYYY-MM-DD\"),\r\n    })\r\n      .then((res) => setAlarmsCount(res?.data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAlarmsCounts();\r\n  }, [getAlarmsCounts]);\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: (selectedKeys) => setSelectedRowKeys(selectedKeys),\r\n  };\r\n\r\n  const handleResolveSelected = () => {\r\n    setOpenAlertCloseModal(true);\r\n  };\r\n  useEffect(() => {\r\n    if (notificationEvent) {\r\n      getAlartsHistory();\r\n    }\r\n  }, [notificationEvent]);\r\n  function refreshSomeAPIs() {\r\n    if (mapViewRef.current && mapViewRef.current.getAlertListData) {\r\n      mapViewRef.current.getAlertListData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"flex gap-4 flex-col pb-8\">\r\n        <div className=\"flex item-center justify-between w-full\"></div>\r\n        <div className=\"flex items-start gap-4 w-full\">\r\n          <div\r\n            id=\"Recently_Closed_Alerts\"\r\n            className=\"w-[50%] flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6\"\r\n          >\r\n            <div\r\n              id=\"Recently_Closed_Alerts_Header\"\r\n              className=\"w-full flex justify-between items-center\"\r\n            >\r\n              <h1 className=\"text-[24px] font-bold\">Recent Notifications</h1>\r\n              <div className=\"flex items-center gap-4\">\r\n                {selectedRowKeys.length == 0 && (\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <Select\r\n                      value={selectedAlarmType}\r\n                      onChange={(value) => {\r\n                        setSelectedAlarmType(value);\r\n                        setAlertHistiryQuery(getEventFilter(value));\r\n                      }}\r\n                      options={alarmOptions}\r\n                      style={{ width: 200 }}\r\n                      dropdownMatchSelectWidth={false}\r\n                    />\r\n                    <Select\r\n                      value={limit}\r\n                      onChange={(value) => setLimit(value)}\r\n                      dropdownMatchSelectWidth={false}\r\n                      options={[\r\n                        { value: 10, label: \"10\" },\r\n                        { value: 50, label: \"50\" },\r\n                        { value: 100, label: \"100\" },\r\n                        { value: 1000, label: \"1000\" },\r\n                      ]}\r\n                      style={{ width: 80 }}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {selectedRowKeys.length !== 0 && (\r\n                  <Button\r\n                    variant=\"solid\"\r\n                    style={{ backgroundColor: \"black\" }}\r\n                    icon={<FaCheck />}\r\n                    onClick={() => handleResolveSelected()}\r\n                  >\r\n                    Resolve\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div id=\"Recently_Closed_Alerts_Table\" className=\"w-full\">\r\n              <SidebarContext.Provider\r\n                value={{\r\n                  getLatestAlarmList: {\r\n                    getAlartsHistory,\r\n                    getAlarmsCounts,\r\n                    refreshSomeAPIs,\r\n                  },\r\n                }}\r\n              >\r\n                <Table\r\n                  rowSelection={rowSelection}\r\n                  columns={recentlyClosedAlertTableColumns}\r\n                  dataSource={alertHistory}\r\n                  rowKey=\"_id\"\r\n                  loading={alertHistoryLoading}\r\n                  pagination={false}\r\n                  locale={{ emptyText: \"No recent alerts\" }}\r\n                  className=\"rounded-lg\"\r\n                  scroll={{ x: scroll?.x || scroll || 700, y: scroll?.y }}\r\n                />\r\n              </SidebarContext.Provider>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-[50%] flex flex-col gap-4\">\r\n            <div className=\"flex gap-4 w-full\">\r\n              <div className=\"bg-white w-full p-4 rounded-xl flex flex-col\">\r\n                <div>\r\n                  <div className=\"font-medium opacity-90 flex items-center gap-1\">\r\n                    <RiHome5Line /> <span>Total User</span>\r\n                  </div>\r\n                  <h2 className=\"text-4xl font-medium\">\r\n                    {devieCount?.house_count}\r\n                  </h2>\r\n                </div>\r\n                <div className=\"flex w-full items-end justify-end gap-6\">\r\n                  <div className=\"flex flex-col justify-center items-center\">\r\n                    <h2 className=\"font-semibold text-2xl\">\r\n                      {devieCount?.active_device_count}\r\n                    </h2>\r\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\r\n                      <div className=\"size-2 bg-lime-600 rounded-sm\"></div>\r\n                      <span>Online Devices</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"flex flex-col justify-center items-center\">\r\n                    <h2 className=\"font-semibold text-2xl\">\r\n                      {devieCount?.inactive_device_count}\r\n                    </h2>\r\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\r\n                      <div className=\"size-2 bg-red-600 rounded-sm\"></div>\r\n                      <span>Offline Devices</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-white w-full p-4 rounded-xl flex flex-col\">\r\n                <div>\r\n                  <div className=\"font-medium opacity-90 flex items-center gap-1\">\r\n                    <MdWarningAmber />\r\n                    <span>Past Week Alarms</span>\r\n                  </div>\r\n                  <h2 className=\"text-4xl font-medium\">\r\n                    {alarmsCount?.alarm_count}\r\n                  </h2>\r\n                </div>\r\n                <div className=\"flex w-full items-end justify-end gap-6\">\r\n                  <div className=\"flex flex-col justify-center items-center\">\r\n                    <h2 className=\"font-semibold text-2xl\">\r\n                      {alarmsCount?.closed_alarm}\r\n                    </h2>\r\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\r\n                      <div className=\"size-2 bg-lime-600 rounded-sm\"></div>\r\n                      <span>Closed Alarms</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"flex flex-col justify-center items-center\">\r\n                    <h2 className=\"font-semibold text-2xl\">\r\n                      {alarmsCount?.false_alarm}\r\n                    </h2>\r\n                    <p className=\"capitalize font-medium opacity-90 text-[14px] flex items-center gap-1\">\r\n                      <div className=\"size-2 bg-red-600 rounded-sm\"></div>\r\n                      <span>False Alarms</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full p-0\">\r\n              <div className=\"bg-transparent rounded-2xl h-[750px] z-1\">\r\n                {viewType === \"Map View\" && (\r\n                  <MapView height={650} ref={mapViewRef} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <AlertCloseModal\r\n        openAlertCloseModal={openAlertCloseModal}\r\n        setOpenAlertCloseModal={setOpenAlertCloseModal}\r\n        selectedAlert={selectedRowKeys}\r\n        getAlertListDatas={() => {\r\n          refreshSomeAPIs();\r\n          getAlartsHistory();\r\n          getAlarmsCounts();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const alertViewSegmentOptions = [\r\n  { label: `Map View`, value: \"Map View\", icon: <AimOutlined /> },\r\n  { label: \"Room View\", value: \"Room View\", icon: <HomeOutlined /> },\r\n];\r\n\r\n// Filter logic helper (assumed to be in @/utils/helper)\r\nexport const getEventFilter = (eventKey) => {\r\n  const filters = {\r\n    fall_detected: { event: \"2\" },\r\n    device_disconnected: { event: \"5\", is_online: \"1\" },\r\n    fl_dv: { event: \"2,5\", is_online: \"1\" }, // Show both Fall Detected and Device Disconnected\r\n  };\r\n  return filters[eventKey] || {};\r\n};\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport { DatePicker, Select, ConfigProvider, Tour } from \"antd\";\r\nimport ls from \"store2\";\r\nimport \"./style.css\";\r\nimport SalesOverviewChart from \"./components/salesOverviewChart\";\r\nimport TotalSalesChart from \"./components/totalSalesChart\";\r\nimport BarChart from \"./components/barChart\";\r\nimport BarChartByGender from \"./components/barChartByGender\";\r\nimport PieChart from \"./components/pieChart\";\r\nimport {\r\n  getUsersCount,\r\n  getSalesData,\r\n  getSalesOverview,\r\n  getDealDetails,\r\n  getChartByAge,\r\n} from \"@/api/Dashboard\";\r\nimport { getAllCity } from \"@/api/ordersManage\";\r\nimport { getUser } from \"@/api/Users\";\r\nconst { RangePicker } = DatePicker;\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { CountMapping } from \"./count-utiles\";\r\nimport MonitoringStation from \"./Dashboards/MonitoringStation\";\r\nimport InstallerDashboard from \"./Dashboards/Installer\";\r\nimport WeeklyMonthlyPicker from \"@/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker\";\r\nimport {\r\n  getChartByGender,\r\n  getDiseasesCountByGender,\r\n  getAlertsCountByElderly,\r\n  getAlertsCountByName,\r\n} from \"@/api/Dashboard\";\r\nimport { getAlertInfoViaEvent } from \"@/utils/helper\";\r\nimport BubbleChart from \"./components/bubbleChart\";\r\nimport { RefProvider } from \"@/Context/RefContext\";\r\nimport { useRefContext } from \"@/Context/RefContext\";\r\nimport { updateUserDetails } from \"@/api/Users\";\r\nimport MonitoringAgencyDashboard from \"./Dashboards/MonitoringAgency\";\r\nimport { getAlertInfoViaEventDetails } from \"../../utils/helper\";\r\nconst onOk = (value) => {\r\n  console.log(\"onOk: \", value);\r\n};\r\nconst onChange = (value) => {\r\n  console.log(`selected ${value}`);\r\n};\r\nconst onSearch = (value) => {\r\n  console.log(\"search:\", value);\r\n};\r\nconst AdminDashboardComponent = () => {\r\n  // const { role } = useContext(SidebarContext);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"Overview\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [query, setQuery] = useState({\r\n    current: \"1\",\r\n    size: \"10\",\r\n  });\r\n  const { registerRef } = useRefContext();\r\n\r\n  const [page, setPage] = useState({ page: 1, limit: 10 });\r\n  const [dealLoading, setDealLoading] = useState(false);\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n  const [role, setRole] = useState(ls.get(\"role\"));\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  //Date Controll\r\n  const [fromDate, setFromDate] = useState(null);\r\n  const [toDate, setToDate] = useState(null);\r\n\r\n  //Sales Overview\r\n  const [SOOrderStatus, setSOOrderStatus] = useState(null);\r\n  const [SOAgentId, setSOAgentId] = useState(\"all\");\r\n  //Sales By Agent\r\n  const [SBAOrderStatus, setSBAOrderStatus] = useState(null);\r\n  const [SBAOrderLocation, setSBAOrderLocation] = useState(null);\r\n  //Sales By Location\r\n  const [SBLOrderStatus, setSBLOrderStatus] = useState(null);\r\n  const [SBLAgentId, setSBLAgentId] = useState(null);\r\n  //Sales By PaymentStatus\r\n  const [SBPAgentId, setSBPAgentId] = useState(null);\r\n  //Sales by installation status\r\n  const [SBIAgentId, setSBIAgentId] = useState(null);\r\n  //Deal Details\r\n  const [DDOrderStatus, setDDOrderStatus] = useState(null);\r\n  const [DDAgentId, setDDAgentId] = useState(null);\r\n  // Dashboard Data\r\n  const [office, setOffice] = useState([]);\r\n  const [salesAgent, setSalesAgent] = useState([]);\r\n  const [officeId, setOfficeId] = useState(null);\r\n  const [count, setCount] = useState([]);\r\n  const [salesOverview, setSalesOverview] = useState([]);\r\n  const [salesByAgent, setSalesByAgent] = useState([]);\r\n  const [salesByLocation, setSalesByLocation] = useState([]);\r\n  const [salesByPaymentStatus, setSalesByPaymentStatus] = useState([]);\r\n  const [salesByInstallationStatus, setSalesByInstallationStatus] = useState(\r\n    []\r\n  );\r\n  const [dealDetails, setDealDetails] = useState([]);\r\n  const [officeQuery, setOfficeQuery] = useState({});\r\n  const [agentQuery, setAgentQuery] = useState({});\r\n  const [chartByGender, setChartByGender] = useState([]);\r\n  const [chartByAge, setChartByAge] = useState([]);\r\n  const [diseasesCountByGender, setDiseasesCountByGender] = useState([]);\r\n  const [alertsCountByElderly, setAlertsCountByElderly] = useState([]);\r\n  const [alertsCountByName, setAlertsCountByName] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  //Report Download\r\n  const downloadReport = async () => {\r\n    try {\r\n      if (!dealDetails.data || dealDetails.data.length === 0) {\r\n        throw new Error(\"No data available to download\");\r\n      }\r\n\r\n      const formattedData = dealDetails.data.map((item, index) => {\r\n        console.log(\"DealDetails ===============>\", dealDetails.data);\r\n\r\n        const saleDate = new Date(item.created_at);\r\n        return {\r\n          \"No.\": index + 1,\r\n          \"Office Name\": item.office_name,\r\n          \"Agent ID\": item.agent_unique_id,\r\n          \"Agent Name\": item.agent_name,\r\n          // \"Order Number\": item.order_no,\r\n          \"Sale Date\": saleDate.toLocaleDateString(\"en-CA\"),\r\n          \"Sale Time\": saleDate.toLocaleTimeString(\"en-GB\", {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n\r\n          Products: item.products\r\n            .map((product, idx) => `${idx + 1}. ${product.name}`)\r\n            .join(\"\"),\r\n          \"Extra Product\": item.products\r\n            .map((item, indx) => {\r\n              if (\r\n                item.type !== \"Seenyor Kit\" &&\r\n                item.type !== \"Installation\" &&\r\n                item.type !== \"AI Monitoring\"\r\n              ) {\r\n                return item.type;\r\n              }\r\n            })\r\n            .join(\"\"),\r\n          \"Current Sale Status\": item.saleStatus,\r\n          \"City Location\": item.address?.city || \"N/A\",\r\n        };\r\n      });\r\n\r\n      const worksheet = XLSX.utils.json_to_sheet(formattedData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Sales Report\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const blob = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n\r\n      const fileName = `Sales_Report_${\r\n        new Date().toISOString().split(\"T\")[0]\r\n      }.xlsx`;\r\n      saveAs(blob, fileName);\r\n    } catch (error) {\r\n      console.error(\"Error downloading the sales report:\", error);\r\n      // Here you might want to show an error message to the user\r\n      // For example: message.error(\"Failed to download report. Please try again.\");\r\n    }\r\n  };\r\n  //Chart by gender (male and female)\r\n  const ChartByGender = useCallback(() => {\r\n    getChartByGender()\r\n      .then((res) => {\r\n        setChartByGender(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //chart by age with range\r\n  const ChartByAge = useCallback(() => {\r\n    getChartByAge()\r\n      .then((res) => {\r\n        setChartByAge(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //Diseses count by gender\r\n  const DiseasesCountByGender = useCallback(() => {\r\n    getDiseasesCountByGender()\r\n      .then((res) => {\r\n        setDiseasesCountByGender(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const AlertCountByElderly = useCallback(() => {\r\n    getAlertsCountByElderly()\r\n      .then((res) => {\r\n        setAlertsCountByElderly(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const AlertCountByName = useCallback(() => {\r\n    getAlertsCountByName()\r\n      .then((res) => {\r\n        const filteredData = res.data.map((item) => {\r\n          return {\r\n            property_name: getAlertInfoViaEventDetails(item)?.title,\r\n            count: item.count,\r\n            type: getAlertInfoViaEventDetails(item)?.status,\r\n          };\r\n        });\r\n        console.log(filteredData);\r\n\r\n        setAlertsCountByName(filteredData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  //Distributor Reports\r\n  function AllCounts() {\r\n    getUsersCount()\r\n      .then((res) => {\r\n        // Map over CountMapping to ensure every role is represented\r\n        const mergedData = CountMapping.map((config) => {\r\n          // Find if there's data from the API matching the current role\r\n          const apiItem = res.data?.find((item) => item.role === config.role);\r\n\r\n          // If found, use the API count; otherwise, set count to 0\r\n          return {\r\n            ...config,\r\n            count: apiItem ? apiItem.count : 0, // Default to 0 if not found in the API response\r\n          };\r\n        });\r\n\r\n        // Optional: filter based on rolesAllowed for the current user\r\n        const filteredData = mergedData.filter((item) =>\r\n          item.rolesAllowed.includes(user.role)\r\n        );\r\n\r\n        // Set the final filtered data to state\r\n        setCount(filteredData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const SalesOverview = useCallback(\r\n    (agentId, orderStatus) => {\r\n      getSalesOverview({\r\n        office_id: officeQuery.office_id,\r\n        agent_id: agentId,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          console.log(\"sales Overview\", res);\r\n\r\n          setSalesOverview(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SOAgentId, SOOrderStatus, officeQuery.office_id, toDate]\r\n  );\r\n\r\n  const SalesByAgent = useCallback(\r\n    (city, orderStatus) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"agent_name\",\r\n        city: city,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          const filteredData = res.data?.filter((item) => item.property_name);\r\n          setSalesByAgent(filteredData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBAOrderLocation, SBAOrderStatus, officeQuery.office_id, toDate]\r\n  );\r\n  const SalesByLocation = useCallback(\r\n    (agentId, orderStatus) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"location\",\r\n        payment_status: orderStatus,\r\n        agent_id: agentId,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          const filteredData = res.data?.filter((item) => item.property_name);\r\n\r\n          setSalesByLocation(filteredData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBLAgentId, SBLOrderStatus, officeQuery.office_id, toDate]\r\n  );\r\n\r\n  const SalesByPaymentStatus = useCallback(\r\n    (agentId) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"payment_status\",\r\n        agent_id: agentId,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          setSalesByPaymentStatus(res.data);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBPAgentId, officeQuery.office_id, toDate]\r\n  );\r\n  const SalesByInstallationStatus = useCallback(\r\n    (agentId) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"installation_status\",\r\n        agent_id: agentId,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          setSalesByInstallationStatus(res.data);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBIAgentId, officeQuery.office_id, toDate]\r\n  );\r\n  const DealDetails = useCallback(\r\n    (agentId, orderStatus) => {\r\n      setDealLoading(true);\r\n      getDealDetails({\r\n        ...page,\r\n        ...officeQuery,\r\n        agent_id: agentId,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n\r\n          setDealDetails(res);\r\n          setDealLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [DDOrderStatus, DDAgentId, officeQuery.office_id, toDate, page]\r\n  );\r\n\r\n  //All Graph Controller Handle Functions\r\n  useEffect(() => {\r\n    SalesOverview(\r\n      SOAgentId === \"all\" ? null : SOAgentId,\r\n      SOOrderStatus === \"all\" ? null : SOOrderStatus\r\n    );\r\n  }, [SalesOverview]);\r\n  useEffect(() => {\r\n    SalesByAgent(\r\n      SBAOrderLocation === \"all\" ? null : SBAOrderLocation,\r\n      SBAOrderStatus === \"all\" ? null : SBAOrderStatus\r\n    );\r\n  }, [SalesByAgent]);\r\n  useEffect(() => {\r\n    SalesByLocation(\r\n      SBLAgentId === \"all\" ? null : SBLAgentId,\r\n      SBLOrderStatus === \"all\" ? null : SBLOrderStatus\r\n    );\r\n  }, [SalesByLocation]);\r\n  useEffect(() => {\r\n    SalesByPaymentStatus(SBPAgentId === \"all\" ? null : SBPAgentId);\r\n  }, [SalesByPaymentStatus]);\r\n  useEffect(() => {\r\n    SalesByInstallationStatus(SBIAgentId === \"all\" ? null : SBIAgentId);\r\n  }, [SalesByInstallationStatus]);\r\n  useEffect(() => {\r\n    DealDetails(\r\n      DDAgentId === \"all\" ? null : DDAgentId,\r\n      DDOrderStatus === \"all\" ? null : DDOrderStatus\r\n    );\r\n  }, [DealDetails]);\r\n\r\n  useEffect(() => {\r\n    if (!officeId) return;\r\n    if (officeId === \"all\") {\r\n      if (officeQuery.office_id) {\r\n        const newQuery = { ...officeQuery };\r\n        delete newQuery.office_id;\r\n        setOfficeQuery(newQuery);\r\n      }\r\n    } else {\r\n      setOfficeQuery((prevQuery) => ({\r\n        ...prevQuery,\r\n        office_id: officeId,\r\n      }));\r\n      // Reset other states if needed\r\n      setSBPAgentId(\"all\");\r\n      setSBIAgentId(\"all\");\r\n      setSBLAgentId(\"all\");\r\n      setSOAgentId(\"all\");\r\n    }\r\n  }, [officeId]);\r\n\r\n  //Weekly, Monthly and  Date Picker Handler\r\n  function handleWeeklyMonthly(e) {\r\n    console.log(e);\r\n    setFromDate(e.start);\r\n    setToDate(e.end);\r\n  }\r\n  function handleDatePicker(e) {\r\n    setFromDate(e[0]);\r\n    setToDate(e[1]);\r\n  }\r\n\r\n  function getAllOffice() {\r\n    getUser({ role: \"office\" })\r\n      .then((res) => {\r\n        setOffice(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function getAllAgent() {\r\n    console.log(\"called agent get list!\", agentQuery);\r\n\r\n    getUser({ ...officeQuery, role: \"sales_agent\" })\r\n      .then((res) => {\r\n        setSalesAgent(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function getAllCities() {\r\n    getAllCity({ ...officeQuery })\r\n      .then((res) => {\r\n        setCity(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const stepsRef = {\r\n    officeDropdown: useRef(null),\r\n    datePicker: useRef(null),\r\n    usersCount: useRef(null),\r\n    totalSales: useRef(null),\r\n    totalInstallations: useRef(null),\r\n    salesOverview: useRef(null),\r\n    salesByAgent: useRef(null),\r\n    salesByLocation: useRef(null),\r\n    mostAlert: useRef(null),\r\n    activityCount: useRef(null),\r\n    ages: useRef(null),\r\n    gender: useRef(null),\r\n    diseases: useRef(null),\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(stepsRef).forEach((key) => {\r\n      if (stepsRef[key].current) {\r\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\r\n      }\r\n    });\r\n  }, [registerRef]);\r\n\r\n  useEffect(() => {\r\n    AllCounts();\r\n    getAllOffice();\r\n\r\n    if (user.role === \"nursing_home\" || user.role === \"monitoring_station\") {\r\n      ChartByGender();\r\n      ChartByAge();\r\n      DiseasesCountByGender();\r\n      AlertCountByElderly();\r\n      AlertCountByName();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllAgent();\r\n    getAllCities();\r\n  }, [officeQuery]);\r\n  // const updateUserDetailsWithFCMToken = (id, token) => {\r\n  //   if (!token) return;\r\n  //   console.log(token);\r\n  //   updateUserDetails(id, { fcm_token_web: token })\r\n  //     .then((res) => {\r\n  //       console.log(\"Token Updated\");\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n  // useEffect(() => {\r\n  //   console.log(user);\r\n  //   requestPermission().then((token) => {\r\n  //     if (\r\n  //       (user.role === \"nurse\" ||\r\n  //         user.role === \"support_agent\" ||\r\n  //         user.role === \"end_user\") &&\r\n  //       token\r\n  //     ) {\r\n  //       console.log(token);\r\n\r\n  //       updateUserDetailsWithFCMToken(user?._id, token);\r\n  //     }\r\n  //   });\r\n  // }, [user]);\r\n  return (\r\n    <div className=\"\">\r\n      {/* Tamplete for w-1/3 w-2/3 */}\r\n      {/* <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\r\n            <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[445px]\"></div>\r\n            <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full  h-[445px]\"></div>\r\n          </div> */}\r\n      {/* Tamplete for w-1/2 w-1/2 */}\r\n      {/* <div className=\"w-full flex gap-6 xl:flex-row flex-col\">\r\n            <div className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"></div>\r\n            <div className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"></div>\r\n          </div> */}\r\n\r\n      {/* This code for Distributor , Sales Agent , Office Dashboard */}\r\n      {(user.role == \"distributor\" ||\r\n        user.role == \"office\" ||\r\n        user.role == \"sales_agent\") && (\r\n        <div className=\"pt-[29px] flex flex-col w-full gap-6 pb-10\">\r\n          <div\r\n            id=\"Distributor_Dash_Top\"\r\n            className=\"flex justify-between w-full mb-5 flex-wrap gap-5\"\r\n          >\r\n            <ConfigProvider\r\n              theme={{\r\n                token: {\r\n                  fontFamily: \"Baloo2\",\r\n                  colorPrimary: \"#8086AC\",\r\n                  colorLinkActive: \"#8086AC\",\r\n                  colorLinkHover: \"#8086AC\",\r\n                  colorLink: \"#8086AC\",\r\n                },\r\n              }}\r\n            >\r\n              {user.role == \"office\" ? (\r\n                <div className=\"p-2 px-4 rounded-lg text-[36px] font-bold  text-primary\">\r\n                  {user.office}\r\n                </div>\r\n              ) : user.role == \"sales_agent\" ? null : (\r\n                <div ref={stepsRef.officeDropdown}>\r\n                  <Select\r\n                    showSearch\r\n                    optionFilterProp=\"label\"\r\n                    onChange={(e) => setOfficeId(e.value)}\r\n                    onSearch={onSearch}\r\n                    defaultValue={\"all\"}\r\n                    size=\"large\"\r\n                    className=\"custom-select\"\r\n                    dropdownMatchSelectWidth={false}\r\n                    labelInValue={true}\r\n                    options={[\r\n                      {\r\n                        value: \"all\",\r\n                        label: (\r\n                          <>\r\n                            All Offices{\" \"}\r\n                            <span className=\"highlighted-number\">\r\n                              {office.length}\r\n                            </span>\r\n                          </>\r\n                        ), // Number of options included here\r\n                      },\r\n                      ...office.map((office) => ({\r\n                        value: office._id,\r\n                        label: office.name,\r\n                      })),\r\n                    ]}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div\r\n                id=\"DatePickers\"\r\n                className=\"flex gap-4 items-center\"\r\n                ref={stepsRef.datePicker}\r\n              >\r\n                <WeeklyMonthlyPicker\r\n                  placeholder={\"Weekly/Monthly\"}\r\n                  style={{ width: \"140px\", borderRadius: \"10px\" }}\r\n                  handleChnage={handleWeeklyMonthly}\r\n                />\r\n                <RangePicker\r\n                  showTime={false}\r\n                  style={{ width: \"200px\", borderRadius: \"10px\" }}\r\n                  size=\"large\"\r\n                  placeholder={[\"Pick Data Range (Start)\", \"End\"]}\r\n                  format=\"YYYY-MM-DD\"\r\n                  onChange={(value, dateString) => {\r\n                    handleDatePicker(dateString);\r\n                  }}\r\n                  onOk={onOk}\r\n                />\r\n                {/* <CustomButton\r\n                  disabled={dealDetails?.data?.length <= 0}\r\n                  onClick={downloadReport}\r\n                  type=\"text\"\r\n                >\r\n                  Download\r\n                </CustomButton> */}\r\n              </div>\r\n            </ConfigProvider>\r\n          </div>\r\n\r\n          <div\r\n            id=\"Reports\"\r\n            className=\"w-full rounded-2xl bg-transparent flex flex-col gap-6\"\r\n            ref={stepsRef.usersCount}\r\n          >\r\n            <div\r\n              id=\"Cards\"\r\n              className=\"grid gap-5 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5\"\r\n            >\r\n              {count?.map((item, key) => {\r\n                let IconName = item.icon;\r\n                return (\r\n                  <div\r\n                    key={key}\r\n                    id=\"Card\"\r\n                    className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#fff] text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n                  >\r\n                    <div\r\n                      id=\"circle\"\r\n                      style={{ backgroundColor: item.color, opacity: \"0.9\" }}\r\n                      className={`w-[100px] h-[100px] absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out`}\r\n                    ></div>\r\n                    <div\r\n                      id=\"circle\"\r\n                      style={{ backgroundColor: item.color, opacity: \"0.2\" }}\r\n                      className={`w-[100px] h-[100px] absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out`}\r\n                    ></div>\r\n                    <div\r\n                      style={{ backgroundColor: `${item.color}15` }}\r\n                      className=\"h-fit rounded-[8px] p-2\"\r\n                    >\r\n                      {IconName && (\r\n                        <IconName style={{ color: item?.color }} size={20} />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex flex-col items-start\">\r\n                      <h1 className=\"text-[26px] font-semibold leading-none text-text-primary\">\r\n                        {item.count}\r\n                      </h1>\r\n                      <span className=\"text-[14px] font-medium text-text-primary/70 leading-none\">\r\n                        {item.label}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"SalesOverview&Total\" className=\"w-full flex  gap-6 flex-col\">\r\n            <div className=\"w-full flex gap-6\">\r\n              <div\r\n                className=\" p-[25px] rounded-2xl  bg-white lg:w-[50%] w-full  h-[445px]\"\r\n                ref={stepsRef.totalSales}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Total Sales</h1>\r\n                  <div id=\"chartController\" className=\"flex gap-4\">\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <ConfigProvider\r\n                        theme={{\r\n                          token: {\r\n                            fontFamily: \"Baloo2\",\r\n                            colorPrimary: \"#8086AC\",\r\n                            colorLinkActive: \"#8086AC\",\r\n                            colorLinkHover: \"#8086AC\",\r\n                            colorLink: \"#8086AC\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          optionFilterProp=\"label\"\r\n                          onChange={(e) => setSBPAgentId(e.value)}\r\n                          onSearch={onSearch}\r\n                          defaultValue={{ value: \"all\", label: \"All Agents\" }}\r\n                          size=\"large\"\r\n                          labelInValue\r\n                          dropdownMatchSelectWidth={false}\r\n                          options={[\r\n                            { value: \"all\", label: \"All Agents\" },\r\n                            ...salesAgent.map((agent) => ({\r\n                              value: agent._id,\r\n                              label: agent.name + \" \" + agent.last_name,\r\n                            })),\r\n                          ]}\r\n                        />\r\n                      </ConfigProvider>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                  <TotalSalesChart\r\n                    data={salesByPaymentStatus}\r\n                    chartFor=\"totalSales\"\r\n                  />\r\n                </div>\r\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n                  {[\"completed\", \"pending\", \"cancelled\"].map((statusName) => {\r\n                    const status = salesByPaymentStatus.find(\r\n                      (item) => item.property_name === statusName\r\n                    ) || { property_name: statusName, total_orders: 0 };\r\n\r\n                    let bgColor;\r\n                    let label;\r\n\r\n                    switch (status.property_name) {\r\n                      case \"completed\":\r\n                        bgColor = \"#4379EE\";\r\n                        label = \"Completed\";\r\n                        break;\r\n                      case \"pending\":\r\n                        bgColor = \"#F1963A\";\r\n                        label = \"Pending\";\r\n                        break;\r\n                      case \"cancelled\":\r\n                        bgColor = \"#D90000\";\r\n                        label = \"Cancelled\";\r\n                        break;\r\n                      default:\r\n                        bgColor = \"#000000\"; // Default color if needed\r\n                        label = \"Unknown\";\r\n                    }\r\n\r\n                    return (\r\n                      <div\r\n                        key={status.property_name}\r\n                        id=\"InfoItem\"\r\n                        className=\"w-full flex justify-between\"\r\n                      >\r\n                        <div className=\"flex gap-2 items-center\">\r\n                          <div\r\n                            className={`w-[12px] h-[12px] rounded-full`}\r\n                            style={{ backgroundColor: bgColor }}\r\n                          ></div>\r\n                          <span className=\"text-lg font-medium\">{label}</span>\r\n                        </div>\r\n                        <span className=\"text-lg font-semibold\">\r\n                          {status.total_orders}\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\" p-[25px] rounded-2xl  bg-white lg:w-[50%] w-full  h-[445px]\"\r\n                ref={stepsRef.totalInstallations}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Total Installations</h1>\r\n                  <div id=\"chartController\" className=\"flex gap-4\">\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <ConfigProvider\r\n                        theme={{\r\n                          token: {\r\n                            fontFamily: \"Baloo2\",\r\n                            colorPrimary: \"#8086AC\",\r\n                            colorLinkActive: \"#8086AC\",\r\n                            colorLinkHover: \"#8086AC\",\r\n                            colorLink: \"#8086AC\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          optionFilterProp=\"label\"\r\n                          onChange={(e) => setSBIAgentId(e.value)}\r\n                          onSearch={onSearch}\r\n                          defaultValue={\"all\"}\r\n                          size=\"large\"\r\n                          dropdownMatchSelectWidth={false}\r\n                          labelInValue={true}\r\n                          options={[\r\n                            {\r\n                              value: \"all\",\r\n                              label: \"All Agents\",\r\n                            },\r\n                            ...salesAgent.map((agent) => ({\r\n                              value: agent._id,\r\n                              label: agent.name + \" \" + agent.last_name,\r\n                            })),\r\n                          ]}\r\n                        />\r\n                      </ConfigProvider>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                  <TotalSalesChart\r\n                    data={salesByInstallationStatus}\r\n                    chartFor=\"totalInstallations\"\r\n                  />\r\n                </div>\r\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n                  {[\"completed\", \"pending\", \"not_started\"].map((statusName) => {\r\n                    const status = salesByInstallationStatus.find(\r\n                      (item) => item.property_name === statusName\r\n                    ) || { property_name: statusName, total_orders: 0 };\r\n\r\n                    let bgColor;\r\n                    let label;\r\n\r\n                    switch (status.property_name) {\r\n                      case \"completed\":\r\n                        bgColor = \"#36b610\";\r\n                        label = \"Completed\";\r\n                        break;\r\n                      case \"pending\":\r\n                        bgColor = \"#833af1\";\r\n                        label = \"In Progress\";\r\n                        break;\r\n                      case \"not_started\":\r\n                        bgColor = \"#5d5d5d\";\r\n                        label = \"Not Started\";\r\n                        break;\r\n                      default:\r\n                        bgColor = \"#000000\"; // Default color if needed\r\n                        label = \"Unknown\";\r\n                    }\r\n\r\n                    return (\r\n                      <div\r\n                        key={status.property_name}\r\n                        id=\"InfoItem\"\r\n                        className=\"w-full flex justify-between\"\r\n                      >\r\n                        <div className=\"flex gap-2 items-center\">\r\n                          <div\r\n                            className={`w-[12px] h-[12px] rounded-full`}\r\n                            style={{ backgroundColor: bgColor }}\r\n                          ></div>\r\n                          <span className=\"text-lg font-medium\">{label}</span>\r\n                        </div>\r\n                        <span className=\"text-lg font-semibold\">\r\n                          {status.total_orders}\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\" p-[25px] rounded-2xl  bg-white lg:w-[100%] w-full  h-[445px]\"\r\n              ref={stepsRef.salesOverview}\r\n            >\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Sales Overview</h1>\r\n\r\n                <div id=\"chartController\" className=\"flex gap-4\">\r\n                  <ConfigProvider\r\n                    theme={{\r\n                      token: {\r\n                        fontFamily: \"Baloo2\",\r\n                        colorPrimary: \"#8086AC\",\r\n                        colorLinkActive: \"#8086AC\",\r\n                        colorLinkHover: \"#8086AC\",\r\n                        colorLink: \"#8086AC\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Select\r\n                      optionFilterProp=\"label\"\r\n                      onChange={(e) => setSOOrderStatus(e.value)}\r\n                      defaultValue={\"all\"}\r\n                      size=\"large\"\r\n                      dropdownMatchSelectWidth={false}\r\n                      labelInValue={true}\r\n                      options={[\r\n                        {\r\n                          value: \"all\",\r\n                          label: \"All Sales\",\r\n                        },\r\n                        {\r\n                          value: \"completed\",\r\n                          label: \"Completed\",\r\n                        },\r\n                        {\r\n                          value: \"pending\",\r\n                          label: \"Pending\",\r\n                        },\r\n                        {\r\n                          value: \"cancelled\",\r\n                          label: \"Cancelled\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <Select\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSOAgentId(e.value)}\r\n                        onSearch={onSearch}\r\n                        value={SOAgentId}\r\n                        defaultValue={\"all\"}\r\n                        size=\"large\"\r\n                        dropdownMatchSelectWidth={false}\r\n                        labelInValue={true}\r\n                        options={[\r\n                          {\r\n                            value: \"all\",\r\n                            label: \"All Agents\",\r\n                          },\r\n                          ...salesAgent.map((agent) => ({\r\n                            value: agent._id,\r\n                            label: agent.name + \" \" + agent.last_name,\r\n                          })),\r\n                        ]}\r\n                      />\r\n                    ) : null}\r\n                  </ConfigProvider>\r\n                </div>\r\n              </div>\r\n              <SalesOverviewChart data={salesOverview} />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            id=\"SalesByLucation&Agents\"\r\n            className=\"w-full flex gap-6 xl:flex-row flex-col\"\r\n          >\r\n            {user.role == \"sales_agent\" ? null : (\r\n              <div\r\n                className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"\r\n                ref={stepsRef.salesByAgent}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\"> Sales by Agent</h1>\r\n\r\n                  <div id=\"chartController\" className=\"flex gap-4\">\r\n                    <ConfigProvider\r\n                      theme={{\r\n                        token: {\r\n                          fontFamily: \"Baloo2\",\r\n                          colorPrimary: \"#8086AC\",\r\n                          colorLinkActive: \"#8086AC\",\r\n                          colorLinkHover: \"#8086AC\",\r\n                          colorLink: \"#8086AC\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Select\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSBAOrderStatus(e.value)}\r\n                        defaultValue=\"all\"\r\n                        size=\"large\"\r\n                        labelInValue={true}\r\n                        dropdownMatchSelectWidth={false}\r\n                        options={[\r\n                          {\r\n                            value: \"all\",\r\n                            label: \"All Sales\",\r\n                          },\r\n                          {\r\n                            value: \"completed\",\r\n                            label: \"Completed\",\r\n                          },\r\n                          {\r\n                            value: \"pending\",\r\n                            label: \"Pending\",\r\n                          },\r\n                          {\r\n                            value: \"cancelled\",\r\n                            label: \"Cancelled\",\r\n                          },\r\n                        ]}\r\n                      />\r\n\r\n                      <Select\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSBAOrderLocation(e.value)}\r\n                        onSearch={onSearch}\r\n                        defaultValue={\"all\"}\r\n                        size=\"large\"\r\n                        //   className=\"custom-select\"\r\n                        dropdownMatchSelectWidth={false}\r\n                        labelInValue={true}\r\n                        options={[\r\n                          { value: \"all\", label: \"All Locations\" },\r\n                          ...city.map((item) => ({\r\n                            value: item.city_name,\r\n                            label: item.city_name,\r\n                          })),\r\n                        ]}\r\n                      />\r\n                    </ConfigProvider>\r\n                  </div>\r\n                </div>\r\n                <BarChart data={salesByAgent} graphTitle=\"Sales by Agent\" />\r\n              </div>\r\n            )}\r\n\r\n            <div\r\n              className=\"p-[25px] rounded-2xl  bg-white w-full h-[445px]\"\r\n              ref={stepsRef.salesByLocation}\r\n            >\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Sales by Location</h1>\r\n                <div id=\"chartController\" className=\"flex gap-4\">\r\n                  <ConfigProvider\r\n                    theme={{\r\n                      token: {\r\n                        fontFamily: \"Baloo2\",\r\n                        colorPrimary: \"#8086AC\",\r\n                        colorLinkActive: \"#8086AC\",\r\n                        colorLinkHover: \"#8086AC\",\r\n                        colorLink: \"#8086AC\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Select\r\n                      optionFilterProp=\"label\"\r\n                      onChange={(e) => setSBLOrderStatus(e.value)}\r\n                      defaultValue={\"all\"}\r\n                      size=\"large\"\r\n                      dropdownMatchSelectWidth={false}\r\n                      //   className=\"custom-select\"\r\n                      labelInValue={true}\r\n                      options={[\r\n                        {\r\n                          value: \"all\",\r\n                          label: \"All Sales\",\r\n                        },\r\n                        {\r\n                          value: \"completed\",\r\n                          label: \"Completed\",\r\n                        },\r\n                        {\r\n                          value: \"pending\",\r\n                          label: \"Pending\",\r\n                        },\r\n                        {\r\n                          value: \"cancelled\",\r\n                          label: \"Cancelled\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <Select\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSBLAgentId(e.value)}\r\n                        onSearch={onSearch}\r\n                        defaultValue={\"all\"}\r\n                        dropdownMatchSelectWidth={false}\r\n                        size=\"large\"\r\n                        labelInValue={true}\r\n                        options={[\r\n                          {\r\n                            value: \"all\",\r\n                            label: \"All Agents\",\r\n                          },\r\n                          ...salesAgent.map((agent) => ({\r\n                            value: agent._id,\r\n                            label: agent.name + \" \" + agent.last_name,\r\n                          })),\r\n                        ]}\r\n                      />\r\n                    ) : null}\r\n                  </ConfigProvider>\r\n                </div>\r\n              </div>\r\n              <BarChart data={salesByLocation} graphTitle=\"Sales by Location\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* This code For Monitoring Station dashboard  */}\r\n      {user.role == \"monitoring_station\" ? (\r\n        <MonitoringStation\r\n          count={count}\r\n          chartByAge={chartByAge}\r\n          chartByGender={chartByGender}\r\n          diseasesCountByGender={diseasesCountByGender}\r\n          alertsCountByName={alertsCountByName}\r\n          alertsCountByElderly={alertsCountByElderly}\r\n        />\r\n      ) : null}\r\n\r\n      {/* This Code for Installer Dashboard */}\r\n      {role == \"installer\" ? <InstallerDashboard /> : null}\r\n      {role == \"monitoring_agency\" ? <MonitoringAgencyDashboard /> : null}\r\n\r\n      {/* This Code for Installer Dashboard */}\r\n      {user.role == \"nursing_home\" ? (\r\n        <div className=\"w-full flex flex-col gap-6 pt-6\">\r\n          <div className=\"w-full flex gap-6 xl:flex-row flex-col h-fit justify-between\">\r\n            <div\r\n              className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\r\n              ref={stepsRef.mostAlert}\r\n            >\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Most Activity</h1>\r\n              </div>\r\n              <BarChart data={alertsCountByElderly} />\r\n            </div>\r\n            <div\r\n              className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\"\r\n              ref={stepsRef.activityCount}\r\n            >\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Activity Count</h1>\r\n              </div>\r\n              {/* <BarChart data={alertsCountByName} /> */}\r\n              <BubbleChart data={alertsCountByName} />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-6 lg:flex-row flex-col h-fit\">\r\n            <div className=\"rounded-2xl lg:w-[75%] w-full flex flex-col gap-6 h-full\">\r\n              <div\r\n                className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\r\n                ref={stepsRef.ages}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Ages</h1>\r\n                </div>\r\n                <BarChartByGender chartFor=\"age\" data={chartByGender} />\r\n              </div>\r\n              <div\r\n                className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\"\r\n                ref={stepsRef.diseases}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Diseases</h1>\r\n                </div>\r\n                <BarChartByGender\r\n                  chartFor=\"diseases\"\r\n                  data={diseasesCountByGender}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rounded-2xl lg:w-[35%] w-full flex flex-col gap-6 h-full\">\r\n              <div\r\n                className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\"\r\n                ref={stepsRef.gender}\r\n              >\r\n                <div>\r\n                  <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                    <h1 className=\"text-[24px] font-bold\">Gender</h1>\r\n                  </div>\r\n                  <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                    <PieChart data={chartByAge} chartFor=\"gender\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                    <div className=\"flex gap-2 items-center\">\r\n                      <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\r\n                      <span className=\"text-lg font-medium\">Total</span>\r\n                    </div>\r\n                    <span className=\"text-lg font-semibold\">\r\n                      {chartByAge.reduce(\r\n                        (acc, item) =>\r\n                          acc + item.male_count + item.female_count,\r\n                        0\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                    <div className=\"flex gap-2 items-center\">\r\n                      <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                      <span className=\"text-lg font-medium\">Male</span>\r\n                    </div>\r\n                    <span className=\"text-lg font-semibold\">\r\n                      {chartByAge.map((item) =>\r\n                        item._id === \"male\" ? item.male_count || 0 : 0\r\n                      )}\r\n                      {chartByAge.length === 0 && <>0</>}\r\n                    </span>\r\n                  </div>\r\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                    <div className=\"flex gap-2 items-center\">\r\n                      <div className=\"w-[12px] h-[12px] bg-[#5CC8BE] rounded-full\"></div>\r\n                      <span className=\"text-lg font-medium\">Female</span>\r\n                    </div>\r\n                    <span className=\"text-lg font-semibold\">\r\n                      {\" \"}\r\n                      {chartByAge.map((item) =>\r\n                        item._id === \"female\" ? item.male_count || 0 : 0\r\n                      )}\r\n                      {chartByAge.length === 0 && <>0</>}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminDashboard = () => {\r\n  const [refsReady, setRefsReady] = useState({});\r\n  const [tourOpen, setTourOpen] = useState(false);\r\n  const [tourSteps, setTourSteps] = useState({});\r\n  const [allRefs, setAllRefs] = useState({});\r\n  const [seenTours, setSeenTours] = useState(() => {\r\n    const saved = ls.get(\"seenToursDash\");\r\n    return saved ? saved : {};\r\n  });\r\n  const userRole = ls.get(\"user\")?.role;\r\n  const user = ls.get(\"user\");\r\n  const handleRefsUpdate = useCallback((refs) => {\r\n    setAllRefs((prevRefs) => {\r\n      if (prevRefs !== refs) {\r\n        // Compare references\r\n        return refs;\r\n      }\r\n      return prevRefs; // No update if refs is the same\r\n    });\r\n    // console.log(refs);\r\n\r\n    // const readyTabs = {};\r\n    // Object.keys(refs).forEach((key) => {\r\n    //   if (key.startsWith(\"tour_\") && refs[key].current) {\r\n    //     const tab = key.split(\"_\")[1];\r\n    //     readyTabs[tab] = true;\r\n    //   }\r\n    // });\r\n\r\n    // setRefsReady((prev) => {\r\n    //   const newReadyTabs = { ...prev, ...readyTabs };\r\n    //   if (JSON.stringify(newReadyTabs) !== JSON.stringify(prev)) {\r\n    //     return newReadyTabs; // Only update if content changes\r\n    //   }\r\n    //   return prev;\r\n    // });\r\n  }, []);\r\n  const buttonStyles = {\r\n    fontSize: \"14px\",\r\n    padding: \"14px 18px\",\r\n    borderRadius: \"8px\",\r\n    // color: \"white\",\r\n  };\r\n  const buttonStyles2 = {\r\n    fontSize: \"14px\",\r\n    padding: \"14px 18px\",\r\n    borderRadius: \"8px\",\r\n  };\r\n  // const stepsRef = {\r\n  //   officeDropdown: useRef(null),\r\n  //   datePicker: useRef(null),\r\n  //   usersCount: useRef(null),\r\n  //   totalSales: useRef(null),\r\n  //   totalInstallations: useRef(null),\r\n  //   salesOverview: useRef(null),\r\n  //   salesByAgent: useRef(null),\r\n  //   salesByLocation: useRef(null),\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const tourStepsByTab = {\r\n      distributor: [\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              As a distributor, you have a central role in managing offices,\r\n              agents, and location-specific analytics. Explore the tools and\r\n              features available to you and take control of your domain!\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Let's Start\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n        },\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Your Responsibilities</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              As a Distributor, you manage offices, agents, and location\r\n              analytics.\r\n              <ul className=\"list-disc pl-5\">\r\n                <li>Create and manage Offices, Managers, and Agents</li>\r\n                <li>Assign agents to offices</li>\r\n                <li>View and filter location-based analytics</li>\r\n                <li>Oversee daily operations</li>\r\n              </ul>\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Start Tour\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Office Dropdown</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Use the office dropdown to select a specific office or view data\r\n              for all offices at once.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            className: \"tour_step_btn\",\r\n\r\n            color: \"default\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Apply a custom date range filter to narrow down the data to a\r\n              specific period for more focused analysis.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_datePicker?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Quickly check the number of key users: Nursing Stations, Sales\r\n              Agents, Monitoring Stations and End Users.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_usersCount?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              View the total number of sales made, with a breakdown of their\r\n              statuses (Completed, Pending, and Cancelled).\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalSales?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Monitor installation statuses, including Completed, In Progress,\r\n              and Not Started, to track installation progress.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalInstallations?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Visualize sales trends over time with the Sales Overview graph,\r\n              helping you identify patterns and performance.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesOverview?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Agent</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              See the total sales made by each agent, allowing you to track\r\n              individual performance and contributions.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByAgent?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Review sales performance across different locations, helping you\r\n              identify high-performing or underperforming areas.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByLocation?.current,\r\n          nextButtonProps: {\r\n            children: \"Finish\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n      ],\r\n      office: [\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              As an Office Manager, you'll be overseeing the performance of your\r\n              support agents and managing operations within your office. Let’s\r\n              get started!\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Let's Start\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n        },\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\">Your Responsibilities</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              As an Office Manager, your key tasks include:\r\n              <ul className=\"list-disc pl-5\">\r\n                <li>\r\n                  Tracking the performance of support agents assigned to your\r\n                  office\r\n                </li>\r\n                <li>Managing deals with end users</li>\r\n                <li>\r\n                  Coordinating the scheduling of installers for setup and\r\n                  service\r\n                </li>\r\n              </ul>\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Start Tour\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Apply a custom date range filter to narrow down the data to a\r\n              specific period for more focused analysis.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_datePicker?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Quickly check the number of key users: Nursing Stations, Sales\r\n              Agents, Monitoring Stations and End Users.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_usersCount?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              View the total number of sales made, with a breakdown of their\r\n              statuses (Completed, Pending, and Cancelled).\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalSales?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Monitor installation statuses, including Completed, In Progress,\r\n              and Not Started, to track installation progress.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalInstallations?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Visualize sales trends over time with the Sales Overview graph,\r\n              helping you identify patterns and performance.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesOverview?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Agent</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              See the total sales made by each agent, allowing you to track\r\n              individual performance and contributions.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByAgent?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Review sales performance across different locations, helping you\r\n              identify high-performing or underperforming areas.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByLocation?.current,\r\n          nextButtonProps: {\r\n            children: \"Finish\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n      ],\r\n      sales_agent: [\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\">\r\n              {\" \"}\r\n              Welcome, {user?.name} {user?.last_name}!\r\n            </h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Welcome to your Sales Agent Dashboard! As a Sales Agent, you are\r\n              responsible for registering Nursing Homes, Monitoring Stations,\r\n              Support Agents, and Installers. Let’s dive in and see what you can\r\n              do!\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Let's Start\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n        },\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\">Your Responsibilities</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              As a Sales Agent, your key tasks include:\r\n              <ul className=\"list-disc pl-5\">\r\n                <li>\r\n                  Registering Nursing Homes, Monitoring Stations, Support\r\n                  Agents, and Installers\r\n                </li>\r\n                <li>Registering end users through a sales-specific website</li>\r\n                <li>Viewing the end users you have signed up</li>\r\n              </ul>\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Start Tour\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Apply a custom date range filter to narrow down the data to a\r\n              specific period for more focused analysis.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_datePicker?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Quickly check the number of key users: Nursing Stations, Sales\r\n              Agents, Monitoring Stations and End Users.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_usersCount?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              View the total number of sales made, with a breakdown of their\r\n              statuses (Completed, Pending, and Cancelled).\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalSales?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Monitor installation statuses, including Completed, In Progress,\r\n              and Not Started, to track installation progress.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalInstallations?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Visualize sales trends over time with the Sales Overview graph,\r\n              helping you identify patterns and performance.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesOverview?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Review sales performance across different locations, helping you\r\n              identify high-performing or underperforming areas.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByLocation?.current,\r\n          nextButtonProps: {\r\n            children: \"Finish\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n      ],\r\n      monitoring_station: [\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Welcome to your Monitoring Company Dashboard! As a Monitoring\r\n              Company, you manage Installer and Support Agent accounts, ensuring\r\n              smooth operations for your customers. Let’s take a look at your\r\n              responsibilities:\r\n              <ul className=\"list-disc pl-5\">\r\n                <li>\r\n                  Manage Installer accounts and oversee their setup of devices\r\n                  and profiles\r\n                </li>\r\n                <li>Monitor and resolve alerts via the platform and app</li>\r\n                <li>Support elderly profiles assigned to your company</li>\r\n                <li>\r\n                  Ensure all installations are completed successfully at\r\n                  customer's homes\r\n                </li>\r\n              </ul>\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Let's Start\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n        },\r\n        // {\r\n        //   title: (\r\n        //     <h1 className=\"text-xl text-primary\"> Daily Activity Summary</h1>\r\n        //   ),\r\n        //   description: (\r\n        //     <p className=\"text-base tracking-tight text-primary/80\">\r\n        //       Displays key metrics such as Indoor Duration, Walking Steps, Skill\r\n        //       Time, Walking Speed, and Room Entry/Exit Count.\r\n        //     </p>\r\n        //   ),\r\n        //   // target: () => allRefs.tour_step_officeDropdown?.current,\r\n        //   nextButtonProps: {\r\n        //     children: \"Start Tour\",\r\n        //     style: buttonStyles,\r\n        //     variant: \"solid\",\r\n        //     size: \"middle\",\r\n        //     color: \"default\",\r\n        //     className: \"tour_step_btn\",\r\n        //   },\r\n        //   prevButtonProps: {\r\n        //     style: buttonStyles2,\r\n        //   },\r\n        // },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Quickly check the number of key users: Nursing Stations, Sales\r\n              Agents, Monitoring Stations and End Users.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_usersCountM?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Ages</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              This section shows the age distribution of individuals in the\r\n              Nursing Home. It helps in understanding the demographics of your\r\n              residents, displayed by age group and gender.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_agesM?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Gender</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              The Gender section provides a visual breakdown of male and female\r\n              residents, giving you a clear understanding of the gender\r\n              distribution in your Nursing Home.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_genderM?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Diseases</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              This section tracks the prevalence of various diseases such as\r\n              Thyroid Disorders, Hearing Loss, Depression, and more. It helps\r\n              you monitor the health trends of your residents.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_diseasesM?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Activity</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              The Activity section shows a summary of all system activities,\r\n              including info, warning, and critical notifications. Here, you can\r\n              monitor the status of any alerts or updates, ensuring your system\r\n              is running smoothly.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_activityM?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Most Alerts</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              This section displays the most frequent alerts in the system,\r\n              allowing you to track any ongoing issues or patterns. You can see\r\n              the total alert count and the distribution of alerts across\r\n              various categories.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_mostAlertM?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Activity Count</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              The Activity Count visualizes the actions performed over time.\r\n              Each circle represents a different level of activity, allowing you\r\n              to monitor trends and track performance across periods.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_activityCountM?.current,\r\n          nextButtonProps: {\r\n            children: \"Finish\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n      ],\r\n      nursing_home: [\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Welcome to your Nursing Home Owner Dashboard! As a Nursing Home\r\n              Owner, you have full control over managing nurse accounts,\r\n              overseeing billing and services, and interacting with end users.\r\n              Let’s take a look at your responsibilities:\r\n              <ul className=\"list-disc pl-5\">\r\n                <li>Manage nurse accounts and edit their information</li>\r\n                <li>\r\n                  View and manage a list of Elderlies in your Nursing Home\r\n                </li>\r\n                <li>Create and manage end-user accounts</li>\r\n                <li>\r\n                  End users interact solely with you for subscriptions and\r\n                  device-related services\r\n                </li>\r\n              </ul>\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Let's Start\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n        },\r\n        // {\r\n        //   title: (\r\n        //     <h1 className=\"text-xl text-primary\"> Daily Activity Summary</h1>\r\n        //   ),\r\n        //   description: (\r\n        //     <p className=\"text-base tracking-tight text-primary/80\">\r\n        //       Displays key metrics such as Indoor Duration, Walking Steps, Skill\r\n        //       Time, Walking Speed, and Room Entry/Exit Count.\r\n        //     </p>\r\n        //   ),\r\n        //   // target: () => allRefs.tour_step_officeDropdown?.current,\r\n        //   nextButtonProps: {\r\n        //     children: \"Start Tour\",\r\n        //     style: buttonStyles,\r\n        //     variant: \"solid\",\r\n        //     size: \"middle\",\r\n        //     color: \"default\",\r\n        //     className: \"tour_step_btn\",\r\n        //   },\r\n        //   prevButtonProps: {\r\n        //     style: buttonStyles2,\r\n        //   },\r\n        // },\r\n\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Most Alerts</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              This section displays the most frequent alerts in the system,\r\n              allowing you to track any ongoing issues or patterns. You can see\r\n              the total alert count and the distribution of alerts across\r\n              various categories.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_mostAlert?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Activity Count</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              The Activity Count visualizes the actions performed over time.\r\n              Each circle represents a different level of activity, allowing you\r\n              to monitor trends and track performance across periods.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_activityCount?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Ages</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              This section shows the age distribution of individuals in the\r\n              Nursing Home. It helps in understanding the demographics of your\r\n              residents, displayed by age group and gender.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_ages?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Gender</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              The Gender section provides a visual breakdown of male and female\r\n              residents, giving you a clear understanding of the gender\r\n              distribution in your Nursing Home.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_gender?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\">Diseases</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              This section tracks the prevalence of various diseases such as\r\n              Thyroid Disorders, Hearing Loss, Depression, and more. It helps\r\n              you monitor the health trends of your residents.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_diseases?.current,\r\n          nextButtonProps: {\r\n            children: \"Finish\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    setTourSteps(tourStepsByTab[userRole] || []);\r\n    setTimeout(() => {\r\n      if (tourSteps.length > 0 && !seenTours[userRole]) setTourOpen(true);\r\n    }, 2000);\r\n  }, [allRefs]);\r\n  const getActiveTabSteps = () => {\r\n    if (tourSteps.length > 0) {\r\n      return tourSteps;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n  function handleTourFinish() {\r\n    setTourOpen(false);\r\n    const updatedSeenTours = { ...seenTours, [userRole]: true };\r\n    setSeenTours(updatedSeenTours);\r\n    ls.set(\"seenToursDash\", updatedSeenTours);\r\n  }\r\n  return (\r\n    <>\r\n      <RefProvider onRefsUpdate={handleRefsUpdate}>\r\n        <AdminDashboardComponent />\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              fontFamily: \"Baloo2\",\r\n              colorPrimary: \"#252F67\",\r\n              colorLinkActive: \"#252F67\",\r\n              colorLinkHover: \"#252F67\",\r\n              colorLink: \"#252F67\",\r\n              primaryColor: \"#252F67\",\r\n            },\r\n          }}\r\n        >\r\n          <Tour\r\n            open={tourOpen}\r\n            onFinish={handleTourFinish}\r\n            steps={getActiveTabSteps()}\r\n            onClose={handleTourFinish}\r\n          />\r\n        </ConfigProvider>\r\n      </RefProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AdminDashboard;\r\n"],"names":["SalesOverviewChart","data","datesArray","item","totalOrdersArray","option","jsx","ReactEcharts","TotalSalesChart","chartFor","totalValue","sum","colorMapping","setColorMapping","useState","propertyNamesMapping","useEffect","BarChart","graphTitle","yAxisData","seriesData","BarChartByGender","options","setOptions","xAxisData","range","found","maxValue","newOptions","value","PieChart","chartData","setChartData","datForChart","colorMap","colors","nameMap","CountMapping","RiPhoneFindLine","MdOutlineSupportAgent","MdOutlineAddHome","IoLogoAppleAr","MdOutlineRealEstateAgent","FiUser","MdOutlineElderly","PiBuildingOffice","BiDevices","TotalAlertChart","problemCount","acc","curr","warningCount","criticalCount","pieData","BubbleChart","hasData","params","jsxs","ReactECharts","MonitoringStation","count","chartByAge","chartByGender","diseasesCountByGender","alertsCountByName","alertsCountByElderly","registerRef","useRefContext","stepsRef","useRef","key","IconName","Fragment","StatusDropdown","row","sharedMethod","useContext","SidebarContext","status","setStatus","handleLoading","sethandleLoading","modalOpen","setModalOpen","handleChange","updateInstallationStatus","res","err","completeChnage","getUserDetails","user","activeSubscriptions","_a","ConfigProvider","Select","SuccessModal","installation","ReportActionModal","_b","_c","_d","_e","_f","indx","self","isUniqueSeenyorKit","i","color","Tag","total","formattedDate","record","InstallerDashboard","loading","setLoading","page","SetPage","setTotal","installationList","setInstallationList","completedInstallationList","setCompletedInstallationList","deviceSalesCount","setDeviceSalesCount","getList","query","getInstallationList","getDeviceSalesCounts","useCallback","getDeviceSalesCount","getCompletedandToBeInstalled","CustomTable","index","RangePicker","DatePicker","MonitoringAgencyDashboard","viewType","setViewType","expandedRowKeys","setExpandedRowKeys","useAlertTableColumns","recentlyClosedAlertTableColumns","alertHistory","setAlertHistory","alertHistoryLoading","setAlertHistoryLoading","limit","setLimit","eventList","setEventList","eventPage","setEventPage","eventTotal","setEventTotal","selectedAlarmType","setSelectedAlarmType","alertHistiryQuery","setAlertHistiryQuery","getEventFilter","devieCount","setDevieCount","alarmsCount","setAlarmsCount","searchResult","setSearchResult","searchQuery","setSearchQuery","isFocused","setIsFocused","selectedRowKeys","setSelectedRowKeys","openAlertCloseModal","setOpenAlertCloseModal","useNavigate","notificationEvent","useNotification","mapViewRef","alarmOptions","getAlartsHistory","getAlertList","dayjs","getElderlyBySearch","getElderlies","getElderlyAndDeviceCount","getAlarmsCounts","endDate","startDate","getAlarmCount","rowSelection","selectedKeys","handleResolveSelected","refreshSomeAPIs","Button","FaCheck","Table","RiHome5Line","MdWarningAmber","MapView","AlertCloseModal","eventKey","onOk","onSearch","AdminDashboardComponent","isModalOpen","setIsModalOpen","activeTab","setActiveTab","search","setSearch","selected","setSelected","modalOPen","list","setList","setQuery","setPage","dealLoading","setDealLoading","SetUser","ls","role","setRole","mainRole","setMainRole","fromDate","setFromDate","toDate","setToDate","SOOrderStatus","setSOOrderStatus","SOAgentId","setSOAgentId","SBAOrderStatus","setSBAOrderStatus","SBAOrderLocation","setSBAOrderLocation","SBLOrderStatus","setSBLOrderStatus","SBLAgentId","setSBLAgentId","SBPAgentId","setSBPAgentId","SBIAgentId","setSBIAgentId","DDOrderStatus","setDDOrderStatus","DDAgentId","setDDAgentId","office","setOffice","salesAgent","setSalesAgent","officeId","setOfficeId","setCount","salesOverview","setSalesOverview","salesByAgent","setSalesByAgent","salesByLocation","setSalesByLocation","salesByPaymentStatus","setSalesByPaymentStatus","salesByInstallationStatus","setSalesByInstallationStatus","dealDetails","setDealDetails","officeQuery","setOfficeQuery","agentQuery","setAgentQuery","setChartByGender","setChartByAge","setDiseasesCountByGender","setAlertsCountByElderly","setAlertsCountByName","city","setCity","ChartByGender","getChartByGender","ChartByAge","getChartByAge","DiseasesCountByGender","getDiseasesCountByGender","AlertCountByElderly","getAlertsCountByElderly","AlertCountByName","getAlertsCountByName","filteredData","getAlertInfoViaEventDetails","AllCounts","getUsersCount","config","apiItem","SalesOverview","agentId","orderStatus","getSalesOverview","SalesByAgent","getSalesData","SalesByLocation","SalesByPaymentStatus","SalesByInstallationStatus","DealDetails","getDealDetails","newQuery","prevQuery","handleWeeklyMonthly","e","handleDatePicker","getAllOffice","getUser","getAllAgent","getAllCities","getAllCity","WeeklyMonthlyPicker","dateString","agent","statusName","bgColor","label","AdminDashboard","refsReady","setRefsReady","tourOpen","setTourOpen","tourSteps","setTourSteps","allRefs","setAllRefs","seenTours","setSeenTours","saved","userRole","handleRefsUpdate","refs","prevRefs","buttonStyles","buttonStyles2","tourStepsByTab","getActiveTabSteps","handleTourFinish","updatedSeenTours","RefProvider","Tour"],"mappings":"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"}