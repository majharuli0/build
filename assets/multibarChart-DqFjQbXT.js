import{Q as D,g as E,r as g,a1 as M,d,j as v,bt as Y}from"./index-DrfFrwDA.js";import{E as C}from"./index-CVhU_Heo.js";try{let t=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},a=new t.Error().stack;a&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[a]="5ce5b3a1-ec94-4d51-96f1-168f503438a2",t._sentryDebugIdIdentifier="sentry-dbid-5ce5b3a1-ec94-4d51-96f1-168f503438a2")}catch{}var O={exports:{}};(function(t,a){(function(i,o){t.exports=o()})(D,function(){return function(i,o){o.prototype.isSameOrAfter=function(n,c){return this.isSame(n,c)||this.isAfter(n,c)}}})})(O);var I=O.exports;const _=E(I);var w={exports:{}};(function(t,a){(function(i,o){t.exports=o()})(D,function(){return function(i,o){o.prototype.isSameOrBefore=function(n,c){return this.isSame(n,c)||this.isBefore(n,c)}}})})(w);var k=w.exports;const N=E(k);d.extend(_);d.extend(N);function G({data:t,fromDate:a,toDate:i,valueType:o="duration"}){console.log(t,a,i,o);const[n,c]=g.useState([]),{sleepEventsType:b,sleepEventsColor:S}=g.useContext(M);g.useEffect(()=>{c(Array.isArray(t)?t:[]),console.log(t)},[t]);const A=(p,u)=>{if(u==="duration"){const x=Math.floor(p/60),y=p%60;return`${x}hr ${y}m`}return p.toString()},$=g.useMemo(()=>{const u=((r,e)=>{const s=[];let l=d(r);const f=d(e);for(;l.isSameOrBefore(f);)s.push(l.format("YYYY-MM-DD")),l=l.add(1,"day");return s})(a,i);console.log("All Dates:",u);const x=(Array.isArray(n)?n:[]).reduce((r,e)=>{if(!(e!=null&&e.date)||!(e!=null&&e.data))return r;const s=d(e.date).format("YYYY-MM-DD");return r[s]=e.data,r},{});console.log("Data By Date:",x);const y=[...new Set((Array.isArray(n)?n:[]).flatMap(r=>{var e;return((e=r==null?void 0:r.data)==null?void 0:e.map(s=>s.status))||[]}))];console.log("Active Statuses:",y);const h=Object.entries(b).filter(([r])=>y.includes(r));console.log("Active Events:",h);const j=h.map(([r,e])=>{const s=u.map(l=>{const f=x[l],m=f==null?void 0:f.find(B=>B.status===r);return m?Number(m.value):0});return console.log(`Series data for ${e}:`,s),{name:e,type:"bar",stack:"total",data:s,itemStyle:{color:S[e]}}});return{tooltip:{trigger:"axis",axisPointer:{type:"shadow"},formatter:r=>{let e=`${r[0].axisValue}<br/>`;return r.forEach(s=>{s.value>0&&(e+=`${s.marker} ${s.seriesName}: ${A(s.value,o)}<br/>`)}),e}},legend:{data:h.map(([r,e])=>e)},xAxis:{type:"category",data:u},yAxis:{type:"value",axisLabel:{formatter:r=>A(r,o)}},series:j}},[n,a,i,b,S,o]);return(t==null?void 0:t.length)===0||!i||!a?v.jsx(Y,{description:"No data available to show"}):v.jsx(C,{option:$,style:{height:"350px"}})}export{G as default};
//# sourceMappingURL=multibarChart-DqFjQbXT.js.map
