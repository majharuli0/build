import{r as O,j as k,bt as N,l as T}from"./index-DrfFrwDA.js";import{E as P}from"./index-CVhU_Heo.js";import"./helper-vkthGy9w.js";try{let l=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},b=new l.Error().stack;b&&(l._sentryDebugIds=l._sentryDebugIds||{},l._sentryDebugIds[b]="172c9110-e251-4856-bc74-4e2932ef1e98",l._sentryDebugIdIdentifier="sentry-dbid-172c9110-e251-4856-bc74-4e2932ef1e98")}catch{}function H({data:l,dataType:b,color:D,chartType:S="Day",toDate:_,fromDate:w,xUnit:p="date",hourLimit:v=12,numberLimit:I=100,dataUnit:B="",chartFor:f=""}){const $=O.useMemo(()=>{if(!(l!=null&&l.length))return null;console.log(l,b,p);function z(t){const r=Array.from({length:67},(i,o)=>{const m=60+o*10,g=Math.floor(m/60),h=m%60;return h===0?`${g} hr`:`${g} hr ${h} min`}),a=new Array(r.length).fill(0);t==null||t.forEach(i=>{const o=Math.floor((i.sleep_total_time-60)/10);o>=0&&o<a.length&&a[o]++});const u=a.reduce((i,o)=>i+o,0),c=a.map(i=>u>0?(i/u*100).toFixed(0):"0");return{xaxis:r,data:c}}function E(t){const r=Array.from({length:10},(i,o)=>`${0+o*10}-${0+(o+1)*10}`),a=new Array(r.length).fill(0);t==null||t.forEach(i=>{const o=Math.floor(f!=="deepSleepPercentageDistribution"?(i==null?void 0:i.sleep_efficiency)/10:(i==null?void 0:i.sleep_quality)/10);o>=0&&o<a.length&&a[o]++});const u=t.length,c=a.map(i=>u>0?(i/u*100).toFixed(0):"0");return T.set(f,{xaxis:r,data:c}),{xaxis:r,data:c}}function M(t){const e=Array.from({length:6},(c,i)=>`${i*5}-${(i+1)*5}`),r=new Array(e.length).fill(0);t==null||t.forEach(c=>{const i=parseFloat(c.ahi),o=Math.floor(i/5);o>=0&&o<r.length&&r[o]++});const a=t.length,u=r.map(c=>a>0?(c/a*100).toFixed(0):"0");return{xaxis:e,data:u}}function R(t){const e=Array.from({length:12},(c,i)=>`${i*10}-${(i+1)*10}`),r=new Array(e.length).fill(0);t==null||t.forEach(c=>{const i=c.totalFallAsleepDuration,o=Math.floor(i/10);o>=0&&o<r.length&&r[o]++});const a=t.length,u=r.map(c=>a>0?(c/a*100).toFixed(0):"0");return{xaxis:e,data:u}}function C(t){const n={xaxis:Array.from({length:31},(i,o)=>o+6).map(i=>i.toString()),data:Array(31).fill(0)};let e=Array(31).fill(0);t.forEach(i=>{const o=i.data_list.filter(g=>g!=="-1"&&g!=="0").map(Number);let m=Array(31).fill(0);o.forEach(g=>{if(g>=6&&g<=36){const h=g-6;m[h]++}}),m.forEach((g,h)=>{e[h]+=g})});const r=e.map((i,o)=>i>0?o:null).filter(i=>i!==null);if(r.length===0)return n;const a=Math.max(r[0]-1,0),u=Math.min(r[r.length-1]+1,30),c=e.slice(a,u+1).reduce((i,o)=>i+o,0);return n.data=e.map((i,o)=>o>=a&&o<=u&&c>0?(i/c*100).toFixed(2):"0.00"),console.log("Total Counts:",e),console.log("Result:",n),n}const y=["45-50","50-55","55-60","60-65","65-70","70-75","75-80","80-85","85-90","90-95","95-100","100-105","105-110","110-115","115-120"],j=t=>{const s=new Array(y.length).fill(0);t==null||t.forEach(r=>{r.data_list.forEach(a=>{if(a>0)for(let u=0;u<y.length;u++){const[c,i]=y[u].split("-").map(Number);if(a>=c&&a<i){s[u]+=1;break}}})});const n=t==null?void 0:t.reduce((r,a)=>r+a.data_list.filter(u=>u>0).length,0),e=s.map(r=>(r/n*100).toFixed(0));return{xaxis:y,data:e}},d=(()=>{if(p==="number"){if(f==="apneaIndexDistribution"){const{xaxis:t,data:s}=M(l);return t.map((n,e)=>({number:n,value:s[e]}))}else if(f==="heartRateDistribution"){const{xaxis:t,data:s}=j(l);return t.map((n,e)=>({number:n,value:s[e]}))}else if(f==="breathRateDistribution"){const{xaxis:t,data:s}=C(l);return t.map((n,e)=>({number:n,value:s[e]}))}}if(p==="hour")if(l&&l.length>0&&f==="durationDistribution"){const{xaxis:t,data:s}=z(l);return t.map((n,e)=>({hour:n,percentage:parseInt(n,10),value:s[e]}))}else if(l&&l.length>0&&f==="fallAsleepDurationDistribution"){const{xaxis:t,data:s}=R(l);return t.map((n,e)=>({hour:n,percentage:parseInt(n,10),value:s[e]}))}else return Array.from({length:v},(t,s)=>({hour:s,value:0,percentage:0}));else if(p==="percentage")if(f==="efficiencyDistribution"||f==="deepSleepPercentageDistribution"){const{xaxis:t,data:s}=E(l);return console.log("data===================>",l),t.map((n,e)=>({percentage:n,value:s[e]}))}else{const t=Array.from({length:11},(n,e)=>e*10),s=new Map(l.map(n=>[Math.floor(n.sleep_efficiency/10)*10,{value:n.sleep_efficiency,date:n.date}]));return t.map(n=>{var e,r;return{percentage:n,value:((e=s.get(n))==null?void 0:e.value)||0,date:((r=s.get(n))==null?void 0:r.date)||null}})}else{const s=((e,r)=>{const a=[],u=new Date(e),c=new Date(r);for(;u<=c;)a.push(new Date(u).toISOString().split("T")[0]),u.setDate(u.getDate()+1);return a})(w,_),n=new Map(l.map(e=>[e.date.split("T")[0],e.ratio||e.walk_speed||e.bed_exit_duration||e.value||e.sleep_time||e.ahi||f==="walkingStepsStatistix"&&e.walking_stpes||e.anomalyHeartRate||e.sleep_efficiency||(e.leave_bed_count&&f==="numberOfBedExitTime"?e.leave_bed_count:null)||(e.sleep_quality&&f!=="numberOfBedExitTime"&&f!=="roomInOut"&&f==="deepSleepPercentageStatistic"?e.sleep_quality:null)||(e.entry_exit_count&&f==="roomInOut"?e.entry_exit_count:null)||f==="sleedDurationStatistic"&&e.sleep_total_time||e.totalFallAsleepDuration||"--"]));return s.map(e=>({date:e,value:n.get(e)||0}))}})(),A=(t,s="axis")=>{if(p==="percentage"||b==="percentage")return`${t}%`;if(b==="duration"){const n=Math.floor(t/60),e=t%60;return n>0?`${n}h ${e}m`:`${e}m`}return t},x=t=>{if(p==="number")return t==null?void 0:t.toString();if(p==="hour")return`${t}`;if(p==="percentage")return`${t}%`;if(S==="Week"){const n=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],e=new Date(t);return n[e.getDay()]}return new Date(t).toLocaleDateString("en-US",{month:"2-digit",day:"2-digit"}).replace("/","-")};return{xAxis:{type:"category",data:d.map(t=>x(p==="hour"?t.hour:p==="percentage"?t.percentage:p==="number"?t.number:t.date))},grid:{top:"5%",left:"8%",bottom:"5%",right:"2%"},yAxis:{type:"value",axisLabel:{formatter:A},max:p==="percentage"||b==="percentage"?100:void 0},series:[{data:d.map(t=>t.value),type:"bar",barWidth:10,itemStyle:{color:D||"#000",borderRadius:[50,50,0,0]}}],tooltip:{trigger:"axis",formatter:t=>{if(p==="number")if(f!=="apneaIndexDistribution"){const e=d[t[0].dataIndex];return`<div style="margin-top: 4px">
              <span >${e.value}%</span>
              <br>
              <span style="font-weight: bold">${e.number} BPM</span>
              </div>`}else{const e=d[t[0].dataIndex];return`<div style="margin-top: 4px">
              <span style="font-weight: bold">${e.value}%</span>
              <br>
              <span style="font-weight: normal">${e.number}</span>
              </div>`}else if(p==="hour"){const e=d[t[0].dataIndex];return`<div style="margin-top: 4px">
                    ${e.value?`<span>${e.value}%</span>`:"--"}
                    <br>
                    <span style="font-weight: bold">${e.hour}</span>
                    </div>`}else if(p==="percentage"){const e=d[t[0].dataIndex];if(e.date){const r=new Date(e.date).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-");return`<div style="font-weight: bold">${e.value}%</div>
                     <div style="margin-top: 4px">${r}</div>`}return`<div style="font-weight: bold"> ${e.value}% <br/> <span style="font-weight: normal">${e.percentage}%</span></div>`}const s=d[t[0].dataIndex].date;return`<div style="font-weight: bold">${new Date(s).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-")}</div>
                  <div style="margin-top: 4px">${A(t[0].value)}${B}</div>`}}}},[l,b,D,S,w,_,p,v,I]);return!(l!=null&&l.length)||!$?k.jsxs("div",{className:"w-full h-full flex items-center justify-center",children:[" ",k.jsx(N,{description:"No data available to show"})]}):k.jsx(P,{option:$,style:{height:"350px"}})}export{H as default};
//# sourceMappingURL=barChart-CxSEjZ4d.js.map
