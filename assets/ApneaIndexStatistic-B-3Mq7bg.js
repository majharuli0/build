import{r as t,d as p,fr as g,j as c}from"./index-BhcrJ0Lq.js";import"./mockData-DnyFJQLN.js";import h from"./barChart-CiOkHhqP.js";import{T as A}from"./Template-DSWuKZKV.js";import{g as C}from"./utiles-BGL1ze99.js";import{C as T}from"./UseCustomContext-CIrMsIcX.js";import"./index-6hoW5P8A.js";import"./helper-DzRZPsxz.js";import"./WeeklyMonthlyPicker-DI0HqXmC.js";import"./SwapRightOutlined-CsOIsLV0.js";import"./weekOfYear-B_SN_R-v.js";import"./index-C0DYdJYr.js";import"./weekday-5kzg0uZP.js";import"./index-CNclDzrS.js";import"./index-Ci381ZTU.js";import"./index-CyI_KFhz.js";import"./index-7ZgbEtds.js";import"./index-DvEJHYGE.js";function K(){const{title:d,color:s,icon:f,dataAnalysis:u,summaryProps:x}=C("Apnea Index"),D=t.useContext(T),{chartToDate:e="",chartFromDate:i="",elderlyDetails:a}=D||{},[r,l]=t.useState(p().subtract(1,"day").format("YYYY-MM-DD")),[m,S]=t.useState(p().subtract(31,"day").format("YYYY-MM-DD")),[Y,I]=t.useState([]),n=t.useCallback(()=>{g({uids:a==null?void 0:a.deviceId,to_date:m,from_date:r}).then(o=>{I(o.data),console.log(o.data)}).catch(o=>{console.log(o)})},[r,a]);return t.useEffect(()=>{n()},[n]),t.useEffect(()=>{e&&i&&(l(e),S(i))},[e]),c.jsx(A,{title:d,color:s,icon:f,dataAnalysis:u,summaryProps:x,children:c.jsx(h,{data:Y,color:s,dataType:"number",fromDate:m,toDate:r})})}export{K as default};
