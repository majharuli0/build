import{r as S,j as D,bv as x}from"./index-d_7D8AC7.js";import{E as A}from"./index-BJ-cyjPg.js";import{f as R}from"./helper-C8eLjNk9.js";function O({data:n,dataType:p,color:f,chartType:h="Day",toDate:m,fromDate:y,xUnit:r="date",hourLimit:b=12,numberLimit:M=100,dataUnit:$=""}){const v=S.useMemo(()=>{if(!(n!=null&&n.length))return null;const i=(()=>{if(r==="number"){const t=n.map(s=>s.heart_rate||s.breath_rate),o=Math.min(...t),a=Math.max(...t),e=10,l=Math.max(0,o-e),g=a+e,c=Array.from({length:g-l+1},(s,_)=>l+_),d=new Map(n.map(s=>[s.heart_rate||s.breath_rate,{value:s.percentage,count:s.count}]));return c.map(s=>({number:s,...d.get(s)||{value:0,count:0}}))}else if(r==="hour"){const t=Array.from({length:b},(a,e)=>e),o=new Map(n.map(a=>[Math.floor(a.sleep_total_time/60),{value:a.sleep_total_time,percentage:a.percentage,count:a.count}]));return t.map(a=>({hour:a,...o.get(a)||{value:0,percentage:0,count:0}}))}else if(r==="percentage"){const t=Array.from({length:11},(a,e)=>e*10),o=new Map(n.map(a=>[Math.floor(a.sleep_efficiency/10)*10,{value:a.sleep_efficiency,date:a.date}]));return t.map(a=>{var e,l;return{percentage:a,value:((e=o.get(a))==null?void 0:e.value)||0,date:((l=o.get(a))==null?void 0:l.date)||null}})}else{const o=((e,l)=>{const g=[],c=new Date(e),d=new Date(l);for(;c<=d;)g.push(new Date(c).toISOString().split("T")[0]),c.setDate(c.getDate()+1);return g})(y,m),a=new Map(n.map(e=>[e.date.split("T")[0],e.ratio||e.walk_speed||e.value||e.sleep_time||e.ahi||"--"]));return o.map(e=>({date:e,value:a.get(e)||0}))}})(),w=(t,o="axis")=>{if(r==="percentage"||p==="percentage")return`${t}%`;if(p==="duration"){const a=Math.floor(t/60),e=t%60;return a>0?`${a}h ${e}m`:`${e}m`}return t},u=t=>{if(r==="number")return t.toString();if(r==="hour")return`${t}hr`;if(r==="percentage")return`${t}%`;if(h==="Week"){const a=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],e=new Date(t);return a[e.getDay()]}return new Date(t).toLocaleDateString("en-US",{month:"2-digit",day:"2-digit"}).replace("/","-")};return{xAxis:{type:"category",data:i.map(t=>u(r==="hour"?t.hour:r==="percentage"?t.percentage:r==="number"?t.number:t.date))},grid:{top:"5%",left:"8%",bottom:"5%",right:"2%"},yAxis:{type:"value",axisLabel:{formatter:w},max:r==="percentage"||p==="percentage"?100:void 0},series:[{data:i.map(t=>t.value),type:"bar",barWidth:10,itemStyle:{color:f||"#000",borderRadius:[50,50,0,0]}}],tooltip:{trigger:"axis",formatter:t=>{if(r==="number"){const e=i[t[0].dataIndex];return`<div style="margin-top: 4px">
            <span >${e.value}%</span>
            <br>
            <span style="font-weight: bold">${e.number} BPM</span>
            </div>`}else if(r==="hour"){const e=i[t[0].dataIndex];return`<div style="margin-top: 4px">
            ${e.percentage?`<span>${e.percentage}%</span>`:"--"}
            <br>
            <span style="font-weight: bold">${R(e.value)}</span>
                    </div>`}else if(r==="percentage"){const e=i[t[0].dataIndex];if(e.date){const l=new Date(e.date).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-");return`<div style="font-weight: bold">${e.value}%</div>
                     <div style="margin-top: 4px">${l}</div>`}return`<div style="font-weight: bold">${e.percentage}%</div>`}const o=i[t[0].dataIndex].date;return`<div style="font-weight: bold">${new Date(o).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-")}</div>
                  <div style="margin-top: 4px">${w(t[0].value)}${$}</div>`}}}},[n,p,f,h,y,m,r,b,M]);return!(n!=null&&n.length)||!v?D.jsx(x,{description:"No data available to show"}):D.jsx(A,{option:v,style:{height:"350px"}})}export{O as default};
