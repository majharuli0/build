{"version":3,"file":"Analytics-BxX2T5S2.js","sources":["../../src/MonitoringService/Components/ui/area.tsx","../../src/MonitoringService/Components/ui/bar.tsx","../../src/MonitoringService/Components/ui/pie3.tsx","../../src/MonitoringService/Components/ui/scatter.tsx","../../src/MonitoringService/hooks/useAnalytics.js","../../src/MonitoringService/Utiles/agentMetrics.js","../../src/MonitoringService/Pages/Analytics/Analytics.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function AreaLineChartComponent({\r\n  width = \"100%\",\r\n  height = 400,\r\n  data = [],\r\n}) {\r\n  // Process the actual data from API response\r\n  const processData = () => {\r\n    if (!data || data.length === 0) {\r\n      return generateFallbackData();\r\n    }\r\n\r\n    // Group data by date and event type\r\n    const dateMap = new Map();\r\n\r\n    data.forEach((item) => {\r\n      const date = new Date(item.year, item.month - 1, item.day);\r\n      const dateKey = date.toISOString().split(\"T\")[0];\r\n      const eventType = item.event === \"5\" ? \"Device Offline\" : \"Fall Alert\";\r\n\r\n      if (!dateMap.has(dateKey)) {\r\n        dateMap.set(dateKey, {\r\n          date,\r\n          timestamp: date.getTime(),\r\n          dateFormatted: formatXAxisDate(date, data),\r\n          tooltipDate: formatTooltipDate(date),\r\n          \"Fall Alert\": 0,\r\n          \"Device Offline\": 0,\r\n        });\r\n      }\r\n\r\n      const dateData = dateMap.get(dateKey);\r\n      dateData[eventType] += item.count || 0;\r\n    });\r\n\r\n    // Convert to array and sort by date\r\n    const sortedData = Array.from(dateMap.values()).sort(\r\n      (a, b) => a.timestamp - b.timestamp\r\n    );\r\n\r\n    // Extract dates and series data\r\n    const dates = sortedData.map((item) => item.dateFormatted);\r\n    const tooltipDates = sortedData.map((item) => item.tooltipDate);\r\n    const fallAlertData = sortedData.map((item) => item[\"Fall Alert\"]);\r\n    const deviceOfflineData = sortedData.map((item) => item[\"Device Offline\"]);\r\n\r\n    return { dates, tooltipDates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  // Format date for x-axis label\r\n  const formatXAxisDate = (date, data) => {\r\n    if (!data || data.length === 0) {\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    }\r\n\r\n    const dates = data.map(\r\n      (item) => new Date(item.year, item.month - 1, item.day)\r\n    );\r\n    const minDate = new Date(Math.min(...dates));\r\n    const maxDate = new Date(Math.max(...dates));\r\n\r\n    const diffTime = Math.abs(maxDate - minDate);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays <= 60) {\r\n      // Show month and day for short ranges (up to 2 months)\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    } else {\r\n      // Show month and year for longer ranges\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        year: \"2-digit\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Format date for tooltip (always shows full date)\r\n  const formatTooltipDate = (date) => {\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      weekday: \"short\",\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  // Generate fallback data if no data provided\r\n  const generateFallbackData = () => {\r\n    const dates = [];\r\n    const tooltipDates = [];\r\n    const fallAlertData = [];\r\n    const deviceOfflineData = [];\r\n\r\n    const today = new Date();\r\n    for (let i = 9; i >= 0; i--) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n\r\n      dates.push(\r\n        date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" })\r\n      );\r\n      tooltipDates.push(\r\n        date.toLocaleDateString(\"en-US\", {\r\n          weekday: \"short\",\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n        })\r\n      );\r\n      fallAlertData.push(Math.floor(0));\r\n      deviceOfflineData.push(Math.floor(0));\r\n    }\r\n\r\n    return { dates, tooltipDates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  const { dates, tooltipDates, fallAlertData, deviceOfflineData } =\r\n    processData();\r\n\r\n  // Smart label interval calculation\r\n  const getLabelInterval = (dataLength) => {\r\n    if (dataLength <= 10) return 0; // Show all labels\r\n    if (dataLength <= 20) return 1; // Show every other label\r\n    if (dataLength <= 40) return 2; // Show every 3rd label\r\n    if (dataLength <= 60) return 3; // Show every 4th label\r\n    return Math.floor(dataLength / 12); // Dynamic interval for large datasets\r\n  };\r\n\r\n  // Calculate totals for legend\r\n  const fallAlertTotal = fallAlertData.reduce((sum, value) => sum + value, 0);\r\n  const deviceOfflineTotal = deviceOfflineData.reduce(\r\n    (sum, value) => sum + value,\r\n    0\r\n  );\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      className: \"!shadow-none\",\r\n      axisPointer: {\r\n        type: \"line\",\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n          width: 1,\r\n        },\r\n      },\r\n      formatter: (params) => {\r\n        const index = params[0].dataIndex;\r\n        const date = tooltipDates[index];\r\n        const fallAlert = params.find((p) => p.seriesName === \"Fall Alert\");\r\n        const deviceOffline = params.find(\r\n          (p) => p.seriesName === \"Device Offline\"\r\n        );\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[180px]\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${date}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: #ef4444\"></div>\r\n                  <span class=\"text-text/80 text-sm\">Fall Alert</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  fallAlert?.value || 0\r\n                }</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: #f59e0b\"></div>\r\n                  <span class=\"text-text/80 text-sm\">Device Offline</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  deviceOffline?.value || 0\r\n                }</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 10,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n        fontWeight: \"normal\",\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Fall Alert\") {\r\n          return `Fall Alert: ${fallAlertTotal.toLocaleString()}`;\r\n        } else if (name === \"Device Offline\") {\r\n          return `Device Offline: ${deviceOfflineTotal.toLocaleString()}`;\r\n        }\r\n        return name;\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: dates.length > 15 ? \"80px\" : \"50px\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: dates,\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 11,\r\n        interval: getLabelInterval(dates.length),\r\n        rotate: dates.length > 15 ? 45 : 0,\r\n        margin: dates.length > 15 ? 15 : 8,\r\n        formatter: (value) => {\r\n          return value;\r\n        },\r\n      },\r\n      axisTick: {\r\n        alignWithLabel: true,\r\n        interval: getLabelInterval(dates.length),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Fall Alert\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false,\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#ef4444\", // Red color for Fall Alert\r\n        },\r\n        itemStyle: {\r\n          color: \"#ef4444\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(239, 68, 68, 0.3)\",\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(239, 68, 68, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: fallAlertData,\r\n      },\r\n      {\r\n        name: \"Device Offline\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false,\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#f59e0b\", // Amber warning color for Device Offline\r\n        },\r\n        itemStyle: {\r\n          color: \"#f59e0b\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(245, 158, 11, 0.3)\", // Amber with opacity\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(245, 158, 11, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: deviceOfflineData,\r\n      },\r\n    ],\r\n    dataZoom: [\r\n      {\r\n        type: \"inside\",\r\n        start: dates.length > 30 ? 100 - Math.floor(3000 / dates.length) : 0,\r\n        end: 100,\r\n      },\r\n      {\r\n        show: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function CleanBarGraph({ data = [], width = \"100%\", height = 350 }) {\r\n  const generateAgentData = () => {\r\n    const scores = data.map((agent) => agent.score);\r\n    const maxScore = Math.max(...scores);\r\n    const minScore = Math.min(...scores);\r\n\r\n    return data.map((agent) => ({\r\n      ...agent,\r\n      isHighest: agent.score === maxScore,\r\n      isLowest: agent.score === minScore,\r\n      itemStyle: {\r\n        color:\r\n          agent.score === maxScore\r\n            ? \"#10b981\"\r\n            : agent.score === minScore\r\n            ? \"#ef4444\"\r\n            : \"rgb(var(--ms-primary-color))\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const agentData = generateAgentData();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const { name, value, color } = params;\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${color}\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${name}</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm pr-1\">Performance Score: </span>\r\n                <span class=\"font-mono font-bold text-text text-sm\">${value}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      top: \"5%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      show: false,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      min: 0,\r\n      max: 100,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n        formatter: \"{value}%\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Performance Score\",\r\n        type: \"bar\",\r\n        barWidth: \"60%\",\r\n        itemStyle: {\r\n          borderRadius: [7, 7, 0, 0],\r\n          borderWidth: 0,\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          formatter: \"{c}%\",\r\n        },\r\n        emphasis: {\r\n          disabled: true,\r\n        },\r\n        data: agentData.map((agent) => ({\r\n          value: agent.score,\r\n          name: agent.name,\r\n          itemStyle: {\r\n            ...agent.itemStyle,\r\n            borderWidth: 0,\r\n          },\r\n          emphasis:\r\n            agent.isHighest || agent.isLowest\r\n              ? undefined\r\n              : {\r\n                  itemStyle: {\r\n                    opacity: 0.8,\r\n                  },\r\n                },\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function PieChartComponent({\r\n  data,\r\n  centerLabel,\r\n  width = \"100%\",\r\n  height = 400,\r\n}) {\r\n  const total = data.reduce((sum, item) => sum + item.value, 0);\r\n\r\n  // Find the maximum value to emphasize the largest segment\r\n  const maxValue = Math.max(...data.map((item) => item.value));\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const percent = ((params.value / total) * 100).toFixed(1);\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${\r\n                params.color\r\n              }\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${\r\n                params.name\r\n              }</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Count</span>\r\n                <span class=\"font-mono font-medium text-text\">${params.value.toLocaleString()}</span>\r\n              </div>\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Percent</span>\r\n                <span class=\"font-mono font-medium text-text\">${percent}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"37%\", \"77%\"],\r\n        roseType: \"area\",\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 10,\r\n          focus: \"self\",\r\n        },\r\n        itemStyle: {\r\n          borderWidth: 0,\r\n          borderColor: \"#fff\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          fontSize: 14,\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          formatter: ({ name, value }) => {\r\n            return `${name}\\n{value|${value.toLocaleString()}}`;\r\n          },\r\n          rich: {\r\n            value: {\r\n              fontSize: 24,\r\n              fontWeight: 600,\r\n              color: \"rgb(var(--ms-text-color)/0.7)\",\r\n              padding: [2, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n          length: 20,\r\n          length2: 10,\r\n          smooth: true,\r\n          lineStyle: {\r\n            width: 1,\r\n            type: \"solid\",\r\n          },\r\n        },\r\n        data: data.map((item) => ({\r\n          ...item,\r\n          // Make the largest segment bigger with emphasis\r\n          ...(item.value === maxValue && {\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 15,\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n              },\r\n            },\r\n            itemStyle: {\r\n              ...item.itemStyle,\r\n              shadowBlur: 8,\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.3)\",\r\n            },\r\n          }),\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\" style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n\r\n      {/* Center Label */}\r\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\r\n        <div className=\"text-[22px] font-bold text-text\">\r\n          {total.toLocaleString()}\r\n        </div>\r\n        <div className=\"text-xs text-muted-foreground mt-0\">\r\n          {centerLabel || \"Total\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\n// Helper function to calculate duration between times\r\nfunction calculateDurationBetweenTimes(startTime, endTime) {\r\n  const start = new Date(startTime);\r\n  const end = new Date(endTime);\r\n  const diffMs = end - start;\r\n\r\n  const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((diffMs % (1000 * 60)) / 1000);\r\n\r\n  return { hours, minutes, seconds, totalMinutes: diffMs / (1000 * 60) };\r\n}\r\n\r\n// Helper function to format SLA minutes\r\nfunction formatSLATime(slaMinutes) {\r\n  const hours = Math.floor(slaMinutes / 60);\r\n  const minutes = Math.floor(slaMinutes % 60);\r\n  const seconds = Math.floor((slaMinutes * 60) % 60);\r\n\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m ${seconds}s`;\r\n  } else if (minutes > 0) {\r\n    return `${minutes}m ${seconds}s`;\r\n  } else {\r\n    return `${seconds}s`;\r\n  }\r\n}\r\n\r\n// Format your data to match the chart structure\r\nconst formatChartData = (rawData) => {\r\n  return rawData.map((item) => {\r\n    const createdDate = new Date(item.created_at);\r\n    const closedDate = new Date(item.closed_at);\r\n\r\n    // Calculate response time duration\r\n    const duration = calculateDurationBetweenTimes(\r\n      item.created_at,\r\n      item.closed_at\r\n    );\r\n\r\n    // Get date in YYYY-MM-DD format\r\n    const day = createdDate.toISOString().split(\"T\")[0];\r\n\r\n    // Get time in HH:MM format\r\n    const time = createdDate.toTimeString().split(\" \")[0].substring(0, 5);\r\n\r\n    // Calculate decimal hour for positioning (0-24)\r\n    const hour = createdDate.getHours() + createdDate.getMinutes() / 60;\r\n\r\n    // Format SLA time\r\n    const slaTimeFormatted = formatSLATime(item.sla_minutes);\r\n\r\n    // Map event numbers to alert types if needed\r\n    const eventMap = {\r\n      \"2\": \"Fall Alert\",\r\n      \"5\": \"Device Offline Alert\",\r\n    };\r\n\r\n    return {\r\n      _id: item._id,\r\n      day: day,\r\n      time: time,\r\n      hour: hour,\r\n      responseTime: duration.totalMinutes,\r\n      responseTimeFormatted: `${duration.hours}h ${duration.minutes}m ${duration.seconds}s`,\r\n      slaTime: item.sla_minutes,\r\n      slaTimeFormatted: \"2m\",\r\n      alertId: item._id,\r\n      compliance: item.sla_status,\r\n      alertType: eventMap[item.event] || `Event ${item.event}`,\r\n      created_at: item.created_at,\r\n      closed_at: item.closed_at,\r\n      event: item.event,\r\n    };\r\n  });\r\n};\r\n\r\nexport function Scatter({ data = [], width = \"100%\", height = 400 }) {\r\n  // Generate sample data if no data provided\r\n  const generateSampleData = () => {\r\n    const days = [\r\n      \"2024-01-01\",\r\n      \"2024-01-02\",\r\n      \"2024-01-03\",\r\n      \"2024-01-04\",\r\n      \"2024-01-05\",\r\n    ];\r\n    const alertTypes = [\"Device Offline Alert\", \"Fall Alert\"];\r\n    const sampleData = [];\r\n\r\n    days.forEach((day) => {\r\n      // Generate 8-20 random alerts per day\r\n      const alertCount = Math.floor(Math.random() * 12) + 8;\r\n\r\n      for (let i = 0; i < alertCount; i++) {\r\n        const hour = Math.floor(Math.random() * 24); // 0-23 hours\r\n        const minute = Math.floor(Math.random() * 60); // 0-59 minutes\r\n        const responseTime = Math.floor(Math.random() * 25) + 5; // 5-30 minutes\r\n        const slaTime = 15; // Fixed SLA time of 15 minutes\r\n        const compliance = responseTime <= slaTime;\r\n        const alertType =\r\n          alertTypes[Math.floor(Math.random() * alertTypes.length)];\r\n\r\n        sampleData.push({\r\n          day: day,\r\n          time: `${hour.toString().padStart(2, \"0\")}:${minute\r\n            .toString()\r\n            .padStart(2, \"0\")}`,\r\n          hour: hour + minute / 60, // Decimal hour for positioning\r\n          responseTime: responseTime,\r\n          slaTime: slaTime,\r\n          alertId: `A${day.replace(/-/g, \"\")}${i + 1}`,\r\n          compliance: compliance,\r\n          alertType: alertType,\r\n        });\r\n      }\r\n    });\r\n\r\n    return sampleData;\r\n  };\r\n\r\n  // Format the incoming data or use sample data\r\n  const formattedData =\r\n    data.length > 0 ? formatChartData(data) : generateSampleData();\r\n  const chartData = formattedData;\r\n\r\n  // Calculate totals for legend\r\n  const totalAlerts = chartData.length;\r\n  const compliantAlerts = chartData.filter((item) => item.compliance).length;\r\n  const nonCompliantAlerts = chartData.filter(\r\n    (item) => !item.compliance\r\n  ).length;\r\n\r\n  // Process data for the chart - only two series: compliant and non-compliant\r\n  const compliantData = chartData.filter((item) => item.compliance);\r\n  const nonCompliantData = chartData.filter((item) => !item.compliance);\r\n\r\n  // Get unique days for yAxis (sorted)\r\n  const days = [...new Set(chartData.map((alert) => alert.day))].sort();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const {\r\n          name,\r\n          compliance,\r\n          responseTimeFormatted,\r\n          slaTimeFormatted,\r\n          time,\r\n          day,\r\n          alertType,\r\n          event,\r\n          created_at,\r\n          closed_at,\r\n        } = params.data;\r\n        const status = compliance ? \"Compliance\" : \"Not Compliance\";\r\n        const statusColor = compliance ? \"#10b981\" : \"#ef4444\";\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[250px] z-999\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${alertType}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Date</span>\r\n                <span class=\"font-mono font-medium text-text\">${day}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${time}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Response Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${responseTimeFormatted}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">SLA Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${slaTimeFormatted}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Status</span>\r\n                <span class=\"font-mono font-medium\" style=\"color: ${statusColor}\">${status}</span>\r\n              </div>\r\n             \r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 0,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Total Alerts\") {\r\n          return `Total Alerts: ${totalAlerts}`;\r\n        } else if (name === \"Compliance\") {\r\n          return `Compliance: ${compliantAlerts}`;\r\n        } else if (name === \"Not Compliance\") {\r\n          return `Not Compliance: ${nonCompliantAlerts}`;\r\n        }\r\n        return name;\r\n      },\r\n      rich: {\r\n        bold: {\r\n          fontWeight: \"bold\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontFamily: \"monospace\",\r\n          fontSize: 12,\r\n        },\r\n      },\r\n      data: [\r\n        {\r\n          name: \"Total Alerts\",\r\n          itemStyle: { color: \"rgb(var(--ms-primary-color))\" },\r\n        },\r\n        {\r\n          name: \"Compliance\",\r\n          itemStyle: { color: data?.length == 0 ? \"#ccc\" : \"#10b981\" },\r\n        },\r\n        {\r\n          name: \"Not Compliance\",\r\n          itemStyle: { color: data?.length == 0 ? \"#ccc\" : \"#ef4444\" },\r\n        },\r\n      ],\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"15%\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"value\",\r\n      nameLocation: \"middle\",\r\n      nameGap: 30,\r\n      min: 0,\r\n      max: 24,\r\n      axisLine: {\r\n        show: false,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.3)\",\r\n        },\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: true,\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        formatter: function (value) {\r\n          return `${Math.floor(value)}:00`;\r\n        },\r\n      },\r\n      splitLine: {\r\n        show: false,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"solid\",\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      nameLocation: \"middle\",\r\n      nameGap: 40,\r\n      data: days,\r\n      axisLine: {\r\n        show: false,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.3)\",\r\n        },\r\n      },\r\n\r\n      axisTick: {\r\n        show: true,\r\n      },\r\n      axisLabel: {\r\n        show: true,\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        formatter: function (value) {\r\n          const date = new Date(value);\r\n          return date.toLocaleDateString(\"en-US\", {\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n          });\r\n        },\r\n      },\r\n      splitLine: {\r\n        show: true,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n        },\r\n      },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        yAxisIndex: 0,\r\n        filterMode: \"filter\",\r\n        start: 50,\r\n        end: 100,\r\n        height: 20,\r\n        bottom: 40,\r\n        show: false, // Hide the controller as requested\r\n        handleStyle: {\r\n          color: \"rgb(var(--ms-primary-color))\",\r\n        },\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        yAxisIndex: 0,\r\n        filterMode: \"filter\",\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: \"Compliance\",\r\n        type: \"scatter\",\r\n        symbolSize: 10,\r\n        data: compliantData.map((alert) => ({\r\n          name: alert.alertId,\r\n          value: [alert.hour, alert.day],\r\n          responseTime: alert.responseTime,\r\n          responseTimeFormatted: alert.responseTimeFormatted,\r\n          slaTime: alert.slaTime,\r\n          slaTimeFormatted: alert.slaTimeFormatted,\r\n          compliance: alert.compliance,\r\n          day: alert.day,\r\n          time: alert.time,\r\n          alertType: alert.alertType,\r\n          event: alert.event,\r\n          created_at: alert.created_at,\r\n          closed_at: alert.closed_at,\r\n          itemStyle: {\r\n            color: data?.length == 0 ? \"#ccc\" : \"#10b981\",\r\n          },\r\n        })),\r\n        itemStyle: {\r\n          color: data?.length == 0 ? \"#ccc\" : \"#10b981\",\r\n        },\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 2,\r\n        },\r\n      },\r\n      {\r\n        name: \"Not Compliance\",\r\n        type: \"scatter\",\r\n        symbolSize: 10,\r\n        data: nonCompliantData.map((alert) => ({\r\n          name: alert.alertId,\r\n          value: [alert.hour, alert.day],\r\n          responseTime: alert.responseTime,\r\n          responseTimeFormatted: alert.responseTimeFormatted,\r\n          slaTime: alert.slaTime,\r\n          slaTimeFormatted: alert.slaTimeFormatted,\r\n          compliance: alert.compliance,\r\n          day: alert.day,\r\n          time: alert.time,\r\n          alertType: alert.alertType,\r\n          event: alert.event,\r\n          created_at: alert.created_at,\r\n          closed_at: alert.closed_at,\r\n          itemStyle: {\r\n            color: data?.length == 0 ? \"#ccc\" : \"#ef4444\",\r\n          },\r\n        })),\r\n        itemStyle: {\r\n          color: data?.length == 0 ? \"#ccc\" : \"#ef4444\",\r\n        },\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 2,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { QUERY_KEYS } from \"@/api/queryKeys\";\r\nimport {\r\n  getAgentPerformance,\r\n  getCountStatistics,\r\n  getSLAReport,\r\n  getTotalAlertCounts,\r\n  getTotalAlertTrends,\r\n} from \"@/api/Dashboard\";\r\nexport const useCountStatistics = (params = {}, options = {}) =>\r\n  useQuery({\r\n    queryKey: [QUERY_KEYS.COUNT_STATISTICS, params],\r\n    queryFn: () => getCountStatistics(params),\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 0,\r\n    onError: (err) => console.log(err),\r\n    onSuccess: (data) => console.log(data),\r\n    ...options,\r\n  });\r\nexport const useTotalAlertCount = (params = {}, options = {}) =>\r\n  useQuery({\r\n    queryKey: [QUERY_KEYS.TOTAL_ALERTS, params],\r\n    queryFn: () => getTotalAlertCounts(params),\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 0,\r\n    onError: (err) => console.log(err),\r\n    onSuccess: (data) => console.log(data),\r\n    ...options,\r\n  });\r\nexport const useAlertTrends = (params = {}, options = {}) =>\r\n  useQuery({\r\n    queryKey: [QUERY_KEYS.TOTAL_ALERTS_TREND, params],\r\n    queryFn: () => getTotalAlertTrends(params),\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 0,\r\n    onError: (err) => console.log(err),\r\n    onSuccess: (data) => console.log(data),\r\n    ...options,\r\n  });\r\nexport const useAgentPerformance = (params = {}, options = {}) =>\r\n  useQuery({\r\n    queryKey: [QUERY_KEYS.AGENT_PERFORMANCE, params],\r\n    queryFn: () => getAgentPerformance(params),\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 0,\r\n    onError: (err) => console.log(err),\r\n    onSuccess: (data) => console.log(data),\r\n    ...options,\r\n  });\r\nexport const useSLAReport = (params = {}, options = {}) =>\r\n  useQuery({\r\n    queryKey: [QUERY_KEYS.SLA_STATISTICS, params],\r\n    queryFn: () => getSLAReport(params),\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 0,\r\n    onError: (err) => console.log(err),\r\n    onSuccess: (data) => console.log(data),\r\n    ...options,\r\n  });\r\n","export const calculateAgentMetrics = (agents) => {\r\n  if (!agents || !Array.isArray(agents) || agents.length === 0) {\r\n    return {\r\n      totalAgents: 0,\r\n      averagePerformance: 0,\r\n      highestPerformance: 0,\r\n      lowestPerformance: 0,\r\n      highestAgent: null,\r\n      lowestAgent: null,\r\n    };\r\n  }\r\n\r\n  const totalAgents = agents.length;\r\n  const totalScore = agents.reduce((sum, agent) => sum + agent.score, 0);\r\n  const averagePerformance = Math.round(totalScore / totalAgents);\r\n\r\n  const highestAgent = agents.reduce((highest, agent) =>\r\n    agent.score > highest.score ? agent : highest\r\n  );\r\n\r\n  const lowestAgent = agents.reduce((lowest, agent) =>\r\n    agent.score < lowest.score ? agent : lowest\r\n  );\r\n\r\n  return {\r\n    totalAgents,\r\n    averagePerformance,\r\n    highestPerformance: highestAgent.score,\r\n    lowestPerformance: lowestAgent.score,\r\n    highestAgent,\r\n    lowestAgent,\r\n  };\r\n};\r\n","import BreadcrumbUI from \"@/MonitoringService/Components/common/breadcrumb\";\r\nimport CardUI from \"@/MonitoringService/Components/common/card\";\r\nimport { AreaLineChartComponent } from \"@/MonitoringService/Components/ui/area\";\r\nimport { CleanBarGraph } from \"@/MonitoringService/Components/ui/bar\";\r\nimport { Button } from \"@/MonitoringService/Components/ui/button\";\r\nimport { ButtonGroup } from \"@/MonitoringService/Components/ui/button-group\";\r\nimport { Calendar } from \"@/MonitoringService/Components/ui/calendar\";\r\nimport { PieChartComponent } from \"@/MonitoringService/Components/ui/pie3\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/MonitoringService/Components/ui/popover\";\r\nimport { Scatter } from \"@/MonitoringService/Components/ui/scatter\";\r\nimport {\r\n  useAgentPerformance,\r\n  useAlertTrends,\r\n  useCountStatistics,\r\n  useSLAReport,\r\n  useTotalAlertCount,\r\n} from \"@/MonitoringService/hooks/useAnalytics\";\r\nimport useMediaQuery from \"@/MonitoringService/hooks/useMediaQuery\";\r\nimport { calculateAgentMetrics } from \"@/MonitoringService/Utiles/agentMetrics\";\r\nimport { formatMilliseconds } from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\nimport { Cable, CalendarIcon } from \"lucide-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaRegClock } from \"react-icons/fa\";\r\nimport { FaRegChessQueen } from \"react-icons/fa6\";\r\nimport { LuCircleFadingArrowUp } from \"react-icons/lu\";\r\nimport { PiWarningCircleBold } from \"react-icons/pi\";\r\n\r\nexport default function Analytics() {\r\n  const [range, setRange] = React.useState({\r\n    from: null,\r\n    to: null,\r\n  });\r\n  const [alertCount, setAlertCount] = useState([]);\r\n  const [agentData, setAgentData] = useState([]);\r\n  const mapping = {\r\n    2: { name: \"Fall Alerts\", color: \"#ef4444\" },\r\n    5: { name: \"Device Offline\", color: \"#f59e0b\" },\r\n  };\r\n  //====> Count Statistics <====//\r\n  const {\r\n    data: countStatistics,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  } = useCountStatistics({\r\n    to_date: range.from || \"2000-01-01\",\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n\r\n  const uptime = countStatistics?.data?.device_uptime ?? 0;\r\n  const downtime = countStatistics?.data?.device_downtime ?? 0;\r\n  const total = uptime + downtime;\r\n  const uptimePercentage = total > 0 ? Math.round((uptime / total) * 100) : 0;\r\n\r\n  //====> Total Alert Count <====//\r\n  const {\r\n    data: totalAlertCount,\r\n    isLoading: isAlertLoading,\r\n    isError: isAlertError,\r\n    isSuccess: isAlertSuccess,\r\n    error: alertError,\r\n  } = useTotalAlertCount({\r\n    to_date: range.from || \"2000-01-01\",\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  useEffect(() => {\r\n    const chartData =\r\n      Array.isArray(totalAlertCount?.data) && totalAlertCount?.data?.length > 0\r\n        ? totalAlertCount?.data?.map((item) => ({\r\n            value: item?.count ?? 0,\r\n            name: mapping[item?._id]?.name || \"Unknown\",\r\n            itemStyle: { color: mapping[item?._id]?.color || \"#9ca3af\" },\r\n          }))\r\n        : [\r\n            {\r\n              value: 0,\r\n              name: \"No Data\",\r\n              itemStyle: { color: \"#9ca3af\" },\r\n            },\r\n          ];\r\n    setAlertCount(chartData);\r\n  }, [totalAlertCount, isAlertSuccess]);\r\n\r\n  //====> Alert Trends <====//\r\n  const {\r\n    data: alertTrends,\r\n    isLoading: isAlertTrendLoading,\r\n    isError: isAlertTrendError,\r\n    error: alertTrendError,\r\n  } = useAlertTrends({\r\n    to_date: range.from || \"2000-01-01\",\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  //====> Agent Performance <====//\r\n  const {\r\n    data: agentPerformance,\r\n    isLoading: isAgentLoading,\r\n    isError: isAgentError,\r\n    isSuccess: isAgentSuccess,\r\n    error: agentError,\r\n  } = useAgentPerformance({\r\n    to_date: range.from || \"2000-01-01\",\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  useEffect(() => {\r\n    const transformedData = agentPerformance?.data?.map((item) => {\r\n      const total =\r\n        (item.countLessThan2Min ?? 0) + (item.countGreaterThan2Min ?? 0);\r\n      const p = total > 0 ? ((item.countLessThan2Min ?? 0) / total) * 100 : 0; // Default to 0 if no data\r\n\r\n      return {\r\n        name: item.closed_by,\r\n        score: Math.round(p),\r\n      };\r\n    });\r\n    setAgentData(transformedData);\r\n  }, [agentPerformance, isAgentSuccess]);\r\n\r\n  //====> SLA Report <====//\r\n  const {\r\n    data: SLAReport,\r\n    isLoading: isSLALoading,\r\n    isError: isSLAError,\r\n    error: slaError,\r\n  } = useSLAReport({\r\n    to_date: range.from || \"2000-01-01\",\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  function calculateCompliancePercentage(data) {\r\n    if (!data || data.length === 0) return 0;\r\n\r\n    const compliantAlerts = data.filter((item) => item.sla_status).length;\r\n    const percentage = (compliantAlerts / data.length) * 100;\r\n\r\n    return Math.round(percentage * 100) / 100;\r\n  }\r\n  const isSmallScreen = useMediaQuery(\"(max-width: 1366px)\");\r\n  const metrics = calculateAgentMetrics(agentData);\r\n  return (\r\n    <div className=\"mb-6\">\r\n      {\" \"}\r\n      <div\r\n        id=\"customer_heading\"\r\n        className=\"flex justify-between sm:flex-row flex-col gap-4 items-center mb-6\"\r\n      >\r\n        <Navigation />\r\n        <div className=\"flex gap-2  items-center\">\r\n          <Popover>\r\n            <PopoverTrigger asChild>\r\n              <Button variant=\"tertiary\">\r\n                <CalendarIcon />\r\n                {range?.from && range?.to\r\n                  ? `${range.from} - ${range.to}`\r\n                  : \"All Time\"}\r\n              </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"overflow-hidden p-0\" align=\"end\">\r\n              <Calendar\r\n                className=\"w-full border-border\"\r\n                mode=\"range\"\r\n                selected={range}\r\n                onSelect={(selectedRange) => {\r\n                  console.log(selectedRange);\r\n\r\n                  if (!selectedRange?.from || !selectedRange?.to) {\r\n                    setRange({ from: null, to: null });\r\n                    return;\r\n                  }\r\n\r\n                  setRange({\r\n                    from: dayjs(selectedRange.from).format(\"YYYY-MM-DD\"),\r\n                    to: dayjs(selectedRange.to).format(\"YYYY-MM-DD\"),\r\n                  });\r\n                }}\r\n                captionLayout=\"dropdown\"\r\n                fixedWeeks\r\n                showOutsideDays\r\n              />\r\n            </PopoverContent>\r\n          </Popover>\r\n          <Button>Export</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        <div className=\" items-center justify-between grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4 lg:auto-rows-fr\">\r\n          <TailsCard\r\n            label=\"Total Alerts\"\r\n            value={totalAlertCount?.data?.reduce((a, b) => a + b.count, 0) || 0}\r\n            icon={<PiWarningCircleBold size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Avg. Response Time\"\r\n            value={formatMilliseconds(countStatistics?.data?.avg_res_time || 0)}\r\n            icon={<FaRegClock size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"SLA Compliance\"\r\n            value={\r\n              (SLAReport?.data &&\r\n                calculateCompliancePercentage(SLAReport?.data)) ||\r\n              0 + \"%\"\r\n            }\r\n            icon={<FaRegChessQueen size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Device Uptime\"\r\n            value={Math.round(uptimePercentage) + \"%\"}\r\n            icon={<LuCircleFadingArrowUp size={20} color=\"white\" />}\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2 lg:auto-rows-fr\">\r\n          <div id=\"Total Alert Overview Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Total Alert Overview</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4 !h-full flex items-center justify-center\">\r\n                <PieChartComponent\r\n                  data={alertCount}\r\n                  centerLabel=\" \"\r\n                  width=\"100%\"\r\n                  height={isSmallScreen ? 340 : 400}\r\n                />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Alert Trends Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Total Alert Overview</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <AreaLineChartComponent data={alertTrends?.data} />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Agent Performance Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Agent Performance</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <CleanBarGraph data={agentData} height={340} />\r\n                <div className=\"flex items-center gap-4 justify-center mt-4\">\r\n                  <SummaryView\r\n                    title=\"Total Agent\"\r\n                    value={metrics.totalAgents}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Avg. Performance\"\r\n                    value={metrics.averagePerformance + \"%\"}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Highest Performance\"\r\n                    value={metrics.highestPerformance + \"%\"}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Lowest Performance\"\r\n                    value={metrics.lowestPerformance + \"%\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"SLA Compliance Report Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">SLA Compliance Report</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <Scatter width=\"100%\" height={400} data={SLAReport?.data} />\r\n            </CardUI>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-start gap-2 w-full\">\r\n        <h1 className=\"text-text sm:text-xl text-lg\">Reporting & Analytics</h1>\r\n        <div className=\"opacity-95\">\r\n          <BreadcrumbUI />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TailsCard = ({ label = \"\", value = \"\", icon }) => {\r\n  return (\r\n    <div className=\"bg-card p-4 flex items-center justify-between gap-3 rounded-md w-full\">\r\n      <div>\r\n        <span className=\"text-sm\">{label}</span>\r\n        <h1 className=\"text-lg font-semibold\">{value}</h1>\r\n      </div>\r\n      <div className=\"p-2 bg-primary w-fit rounded-md text-lg\">{icon}</div>\r\n    </div>\r\n  );\r\n};\r\nconst SummaryView = ({ title, value }) => {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-2 \">\r\n        <div className=\"p-2 px-3 bg-primary rounded-lg text-white font-medium text-sm\">\r\n          {\" \"}\r\n          {value}\r\n        </div>\r\n        <div className=\"rounded-lg text-sm text-wrap\"> {title}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["AreaLineChartComponent","width","height","data","processData","generateFallbackData","dateMap","item","date","dateKey","eventType","formatXAxisDate","formatTooltipDate","dateData","sortedData","a","b","dates","tooltipDates","fallAlertData","deviceOfflineData","minDate","maxDate","diffTime","today","i","getLabelInterval","dataLength","fallAlertTotal","sum","value","deviceOfflineTotal","option","params","index","fallAlert","p","deviceOffline","name","jsx","ReactECharts","CleanBarGraph","agentData","scores","agent","maxScore","minScore","color","PieChartComponent","centerLabel","total","maxValue","percent","jsxs","calculateDurationBetweenTimes","startTime","endTime","start","diffMs","hours","minutes","seconds","formatSLATime","slaMinutes","formatChartData","rawData","createdDate","duration","day","time","hour","eventMap","Scatter","generateSampleData","days","alertTypes","sampleData","alertCount","minute","responseTime","slaTime","compliance","alertType","chartData","totalAlerts","compliantAlerts","nonCompliantAlerts","compliantData","nonCompliantData","alert","responseTimeFormatted","slaTimeFormatted","event","created_at","closed_at","useCountStatistics","options","useQuery","QUERY_KEYS","getCountStatistics","err","useTotalAlertCount","getTotalAlertCounts","useAlertTrends","getTotalAlertTrends","useAgentPerformance","getAgentPerformance","useSLAReport","getSLAReport","calculateAgentMetrics","agents","totalAgents","totalScore","averagePerformance","highestAgent","highest","lowestAgent","lowest","Analytics","range","setRange","React","setAlertCount","useState","setAgentData","mapping","countStatistics","isLoading","isError","error","dayjs","uptime","_a","downtime","_b","uptimePercentage","totalAlertCount","isAlertLoading","isAlertError","isAlertSuccess","alertError","useEffect","alertTrends","isAlertTrendLoading","isAlertTrendError","alertTrendError","agentPerformance","isAgentLoading","isAgentError","isAgentSuccess","agentError","transformedData","SLAReport","isSLALoading","isSLAError","slaError","calculateCompliancePercentage","percentage","isSmallScreen","useMediaQuery","metrics","Navigation","Popover","PopoverTrigger","Button","CalendarIcon","PopoverContent","Calendar","selectedRange","TailsCard","_c","PiWarningCircleBold","formatMilliseconds","_d","FaRegClock","FaRegChessQueen","LuCircleFadingArrowUp","CardUI","SummaryView","Fragment","BreadcrumbUI","label","icon","title"],"mappings":"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"}