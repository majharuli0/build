{"version":3,"file":"CreateAndEditModal-3zBN4fFB.js","sources":["../../src/Shared/input/CustomDatePicker.jsx","../../src/Shared/input/CustomTimePicker.jsx","../../src/Shared/input/CustomDateTimePicker.jsx","../../src/Shared/input/CustomMedicationStrengthPicker.jsx","../../src/Shared/input/DaySelector.jsx","../../src/Shared/input/MultiTimePicker.jsx","../../src/Shared/input/CustomPhoneNumberInput.jsx","../../src/Components/CreateAndEditModal/CreateAndEditModal.jsx"],"sourcesContent":["import React from \"react\";\nimport { DatePicker, ConfigProvider } from \"antd\";\n\nconst CustomDatePicker = ({ label, error, ...rest }) => {\n  return (\n    <div className=\"flex flex-col items-start w-full mt-3\">\n      <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n        {label}\n      </label>\n      <ConfigProvider\n        theme={{\n          token: {\n            colorPrimary: \"#8086AC\",\n            colorLink: \"#8086AC\",\n            colorLinkHover: \"#A0A4C1\",\n            colorLinkActive: \"#6A6E8E\",\n          },\n          components: {\n            DatePicker: {\n              cellActiveWithRangeBg: \"#8086AC\",\n              cellHoverWithRangeBg: \"#A0A4C1\",\n              timeColumnWidth: 56,\n              timeColumnHeight: 224,\n              timeLineHeight: 28,\n              buttonBg: \"#8086AC\",\n              buttonHoverBg: \"#A0A4C1\",\n              buttonActiveBg: \"#6A6E8E\",\n            },\n          },\n        }}\n      >\n        <DatePicker\n          style={{ width: \"100%\", height: \"50px\", borderRadius: \"10px\" }}\n          size=\"large\"\n          {...rest}\n        />\n      </ConfigProvider>\n      {error && <span style={{ color: \"red\" }}>{error.message}</span>}\n    </div>\n  );\n};\n\nexport default CustomDatePicker;\n","import React from \"react\";\nimport { TimePicker, ConfigProvider } from \"antd\";\n\nconst CustomTimePicker = ({ label, error, ...rest }) => {\n  return (\n    <div className=\"flex flex-col items-start w-full mt-3\">\n      <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n        {label}\n      </label>\n      <ConfigProvider\n        theme={{\n          token: {\n            colorPrimary: \"#8086AC\",\n            colorLink: \"#8086AC\",\n            colorLinkHover: \"#A0A4C1\",\n            colorLinkActive: \"#6A6E8E\",\n          },\n          components: {\n            DatePicker: {\n              cellActiveWithRangeBg: \"#8086AC\",\n              cellHoverWithRangeBg: \"#A0A4C1\",\n              timeColumnWidth: 56,\n              timeColumnHeight: 224,\n              timeLineHeight: 28,\n              buttonBg: \"#8086AC\",\n              buttonHoverBg: \"#A0A4C1\",\n              buttonActiveBg: \"#6A6E8E\",\n            },\n          },\n        }}\n      >\n        <TimePicker\n          style={{ width: \"100%\", height: \"50px\", borderRadius: \"10px\" }}\n          size=\"large\"\n          {...rest}\n        />\n      </ConfigProvider>\n      {error && <span style={{ color: \"red\" }}>{error.message}</span>}\n    </div>\n  );\n};\n\nexport default CustomTimePicker;\n","import React from \"react\";\nimport { DatePicker, ConfigProvider } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nconst CustomDateTimePicker = ({ label, error, value, onChange, ...rest }) => {\n  const handleChange = (date, dateString) => {\n    const formattedDate = date\n      ? dayjs(date).format(\"YYYY-MM-DD HH:mm\")\n      : dayjs().format(\"YYYY-MM-DD HH:mm\");\n    onChange(formattedDate);\n  };\n\n  return (\n    <div className=\"flex flex-col items-start w-full mt-3\">\n      <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n        {label}\n      </label>\n      <ConfigProvider\n        theme={{\n          token: {\n            colorPrimary: \"#8086AC\",\n            colorLink: \"#8086AC\",\n            colorLinkHover: \"#A0A4C1\",\n            colorLinkActive: \"#6A6E8E\",\n          },\n          components: {\n            DatePicker: {\n              cellActiveWithRangeBg: \"#8086AC\",\n              cellHoverWithRangeBg: \"#A0A4C1\",\n              timeColumnWidth: 56,\n              timeColumnHeight: 224,\n              timeLineHeight: 28,\n              buttonBg: \"#8086AC\",\n              buttonHoverBg: \"#A0A4C1\",\n              buttonActiveBg: \"#6A6E8E\",\n            },\n          },\n        }}\n      >\n        <DatePicker\n          style={{ width: \"100%\", height: \"50px\", borderRadius: \"10px\" }}\n          size=\"large\"\n          showTime\n          format=\"YYYY-MM-DD HH:mm A\"\n          onChange={handleChange}\n          {...rest}\n        />\n      </ConfigProvider>\n      {error && <span style={{ color: \"red\" }}>{error.message}</span>}\n    </div>\n  );\n};\n\nexport default CustomDateTimePicker;\n","import React from \"react\";\nimport { Select, ConfigProvider, Input } from \"antd\";\n\nconst CustomMedicationStrengthPicker = ({\n  label,\n  error,\n  options,\n  onChange,\n  onBlur,\n  value,\n  defaultValue,\n  disabled,\n  ...props\n}) => {\n  return (\n    <div className=\"flex items-center w-full\">\n      <div className=\"flex flex-col items-start w-full mt-3\">\n        <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n          {label}\n        </label>\n        <ConfigProvider\n          theme={{\n            token: {\n              colorPrimary: \"#8086AC\",\n            },\n          }}\n        >\n          <Select\n            size=\"large\"\n            style={{\n              width: \"100%\",\n              height: \"50px\",\n              borderRadius: \"10px !important\",\n            }}\n            onBlur={onBlur}\n            onChange={(selectedValue, option) => {\n              onChange(option);\n            }}\n            value={value || defaultValue}\n            status={error ? \"error\" : \"\"}\n            options={options}\n            disabled={disabled}\n            {...props}\n          />\n        </ConfigProvider>\n        {error && <p className=\"mt-1 text-sm text-red-600\">{error.message}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomMedicationStrengthPicker;\n","import React from \"react\";\n\nconst daysOfWeek = [\n  { value: \"sunday\", label: \"Sun\" },\n  { value: \"monday\", label: \"Mon\" },\n  { value: \"tuesday\", label: \"Tue\" },\n  { value: \"wednesday\", label: \"Wed\" },\n  { value: \"thursday\", label: \"Thu\" },\n  { value: \"friday\", label: \"Fri\" },\n  { value: \"saturday\", label: \"Sat\" },\n];\n\nfunction DaySelector({ label, value = [], onChange, error }) {\n  const handleDayChange = (day) => {\n    if (value.includes(day)) {\n      onChange(value.filter((d) => d !== day));\n    } else {\n      onChange([...value, day]);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-start w-full mt-3\">\n      <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n        {label}\n      </label>\n      <div className=\"w-full flex gap-3\">\n        {daysOfWeek.map((day) => (\n          <button\n            key={day.value}\n            type=\"button\"\n            onClick={() => handleDayChange(day.value)}\n            style={{\n              backgroundColor: value.includes(day.value) ? \"#1B2559\" : \"#fff\",\n              color: value.includes(day.value) ? \"#fff\" : \"#000\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n            }}\n            className=\"flex items-center justify-center w-full\"\n          >\n            {day.label}\n          </button>\n        ))}\n      </div>\n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n    </div>\n  );\n}\n\nexport default DaySelector;\n","import React, { useState } from \"react\";\nimport { TimePicker, Button, Input, Space } from \"antd\";\nimport dayjs from \"dayjs\";\n\nfunction MultiTimePicker({ label, value = [], onChange, error }) {\n  const [currentTime, setCurrentTime] = useState(null);\n  const [tabletCount, setTabletCount] = useState(\"\");\n\n  const handleAddTime = () => {\n    if (currentTime && tabletCount) {\n      const newEntry = {\n        time: dayjs(currentTime).format(\"hh:mm A\"),\n        tablet_count: parseInt(tabletCount, 10),\n      };\n      onChange([...value, newEntry]);\n      setCurrentTime(null);\n      setTabletCount(\"\");\n    }\n  };\n\n  const handleRemoveTime = (index) => {\n    const newValue = [...value];\n    newValue.splice(index, 1);\n    onChange(newValue);\n  };\n\n  return (\n    <div className=\"flex flex-col items-start w-full mt-3\">\n      <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n        {label}\n      </label>\n      <Space.Compact style={{ width: \"100%\" }}>\n        <TimePicker\n          use12Hours\n          value={currentTime}\n          onChange={(time) => setCurrentTime(time)}\n          format=\"hh:mm A\"\n          style={{ width: \"50%\" }}\n          size=\"large\"\n        />\n        <Input\n          style={{ width: \"50%\" }}\n          size=\"large\"\n          type=\"number\"\n          placeholder=\"Tablet Count (eg: 2)\"\n          value={tabletCount}\n          onChange={(e) => setTabletCount(e.target.value)}\n        />\n        <Button\n          onClick={handleAddTime}\n          disabled={!currentTime || !tabletCount}\n          size=\"large\"\n          style={{ width: \"15%\" }}\n        >\n          Add\n        </Button>\n      </Space.Compact>\n      <ul style={{ width: \"100%\", padding: 0, listStyle: \"none\" }}>\n        {value.map((entry, index) => (\n          <li\n            key={index}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"10px\",\n            }}\n          >\n            <span>\n              Time: {entry.time}, Tablets: {entry.tablet_count}\n            </span>\n            <Button\n              type=\"link\"\n              onClick={() => handleRemoveTime(index)}\n              style={{ marginLeft: \"10px\" }}\n            >\n              Remove\n            </Button>\n          </li>\n        ))}\n      </ul>\n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n    </div>\n  );\n}\n\nexport default MultiTimePicker;\n","import React, { useEffect } from \"react\";\nimport { Space, Select, Input } from \"antd\";\n\nconst CustomPhoneInput = ({\n  label,\n  error,\n  placeholder,\n  countryCodes,\n  selectedCode,\n  onCodeChange,\n  disabled = false,\n  ...field // This will receive `value`, `onChange`, `onBlur` from Controller\n}) => {\n  console.log(error);\n\n  useEffect(() => {\n    // Automatically set the first option as selected if no value is provided\n    if (!selectedCode && countryCodes.length > 0) {\n      onCodeChange(countryCodes[0].value);\n    }\n  }, [selectedCode, countryCodes, onCodeChange]);\n\n  return (\n    <div className=\"flex flex-col items-start w-full mt-3\">\n      {/* Label */}\n      <label className=\"mb-1 font-medium text-[13px] text-[#1B2559]\">\n        {label}\n      </label>\n      {/* Compact Input */}\n      <Space.Compact\n        style={{\n          width: \"100%\",\n        }}\n      >\n        {/* Country Code Dropdown */}\n        <Select\n          showSearch\n          value={selectedCode}\n          onChange={onCodeChange}\n          disabled={disabled}\n          options={countryCodes}\n          style={{\n            minWidth: \"160px\",\n            height: \"50px\",\n            borderRadius: \"10px !important\",\n          }}\n          className=\"!placeholder:text-[#A3AED0]\"\n        />\n\n        {/* Phone Number Input */}\n        <Input\n          type=\"number\"\n          placeholder={placeholder}\n          disabled={disabled}\n          style={{\n            height: \"50px\",\n            borderRadius: \"10px !important\",\n          }}\n          {...field}\n        />\n      </Space.Compact>\n\n      {/* Error Message */}\n      {(error?.type === \"required\" || error?.type === \"pattern\") && (\n        <span className=\"text-sm mt-1 text-red-500\">{error.message}</span>\n      )}\n    </div>\n  );\n};\n\nexport default CustomPhoneInput;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { DatePicker, TimePicker } from \"antd\";\nimport CustomModal from \"@/Shared/modal/CustomModal\";\nimport CustomInput from \"@/Shared/input/CustomInput\";\nimport CustomErrorToast from \"@/Shared/Tosat/CustomErrorToast\";\nimport toast from \"react-hot-toast\";\nimport CustomToast from \"@/Shared/Tosat/CustomToast\";\n\nimport CustomDatePicker from \"@/Shared/input/CustomDatePicker\";\nimport CustomTimePicker from \"@/Shared/input/CustomTimePicker\";\nimport CustomDateTimePicker from \"@/Shared/input/CustomDateTimePicker\";\nimport CustomSelector from \"@/Shared/input/CustomSelector\";\nimport CustomMedicationStrengthPicker from \"@/Shared/input/CustomMedicationStrengthPicker\";\nimport CustomTextArea from \"@/Shared/input/CustomTextArea\";\nimport CustomPlaceSelect from \"@/Shared/input/CustomPlaceSelect\";\nimport CustomMultiSelect from \"@/Shared/input/CustomMultiSelector\";\nimport DaySelector from \"@/Shared/input/DaySelector\";\nimport MultiTimePicker from \"@/Shared/input/MultiTimePicker\";\nimport { addMedication } from \"@/api/elderly\";\nimport CustomPhoneInput from \"@/Shared/input/CustomPhoneNumberInput\";\nimport { getAllCountry } from \"@/api/countries-v1\";\nexport default function CreateAndEditModal({\n  modalOpen,\n  setModalOpen,\n  type,\n  mode = \"create\",\n  elderlyId,\n  dataToEdit,\n  diseases = [],\n  allergies = [],\n  medications = [],\n  custom_condition = [],\n  elderlyLatLng,\n  onSubmitData,\n}) {\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    watch,\n    setValue,\n  } = useForm({\n    defaultValues: dataToEdit,\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n  });\n  const [disease, setDisease] = useState(diseases);\n  const [selectedCode, setSelectedCode] = useState(null);\n  const [countries, setCountries] = useState([{}]);\n\n  // Watch the select_elderly field\n  const selectedElderly = watch(\"select_elderly\");\n  const selectedContact = watch(\"contact_type\");\n  const selectedMedicationFrequency = watch(\"medication_frequency\");\n  // Reset form with dataToEdit when modal opens in edit mode\n  useEffect(() => {\n    if (modalOpen && mode === \"edit\" && dataToEdit) {\n      Object.keys(dataToEdit).forEach((key) => {\n        setValue(key, dataToEdit[key]);\n      });\n    }\n\n    getAllCountry()\n      .then((res) => {\n        const seen = new Set();\n        const customizedCountryLabel = res?.data\n          .map((country) => ({\n            label: `${country.country_name} (${country.country_code})`,\n            value: `${country.country_code}_${country.country_name}`,\n          }))\n          .filter((item) => {\n            if (seen.has(item.value)) {\n              return false;\n            }\n            seen.add(item.value);\n            return true;\n          });\n        setCountries(customizedCountryLabel);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [modalOpen, mode, dataToEdit, setValue]);\n\n  // handle submit\n  const onSubmit = (data) => {\n    console.log(data);\n\n    if (mode === \"edit\") {\n      // Handle edit logic here\n      if (type === \"healthConditions\") {\n        console.log(\"Editing data:\", data);\n      } else if (type === \"medication\") {\n        console.log(\"Editing data:\", data);\n      }\n    } else {\n      if (type === \"medication\") {\n        onSubmitData({\n          id: elderlyId,\n          data: [\n            {\n              name: data?.medication_name,\n              type: data?.medication_type?.label,\n              strength: Number(data?.medication_strength),\n              unit: data?.medication_unit?.label,\n              frequency: data?.medication_frequency?.label,\n              interval:\n                selectedMedicationFrequency.value === \"As Needed\"\n                  ? []\n                  : selectedMedicationFrequency.value === \"At Regular Interval\"\n                  ? [data?.medication_interval]\n                  : data?.medication_shedule_days,\n              does_chart: data?.medication_time,\n            },\n          ],\n        });\n      } else if (type === \"event\") {\n        onSubmitData(data);\n      } else if (type === \"contact\") {\n        onSubmitData({\n          contact_person: data?.contact_name,\n          contact_number: data?.phone_number,\n          contact_number_code: selectedCode,\n          relationship: data.relationship,\n          gender: data.gender.value,\n          coverage_area: Number(data.coverage_area),\n        });\n      }\n      // Handle create logic here\n      console.log(\"Editing data:\", data);\n      console.log(\"Creating data:\", data);\n    }\n    reset();\n    setModalOpen(false); // Close modal after submission\n  };\n  //handle multi select change\n  const handleMultiSelectChange = (selectedOptions) => {\n    console.log(\"Selected options:\", selectedOptions);\n  };\n\n  // render custom title by type and mode\n  const renderCustomTitle = () => {\n    if (type === \"event\") {\n      return mode === \"create\" ? \"Create Event\" : \"Edit Event\";\n    } else if (type === \"elderly\") {\n      return mode === \"create\" ? \"Create Elderly\" : \"Update Elderly Profile\";\n    } else if (type === \"medication\") {\n      return mode === \"create\" ? \"Create Medication\" : \"Edit Medication\";\n    } else if (type === \"health-condition\") {\n      return mode === \"create\"\n        ? \"Create Health Condition\"\n        : \"Update Health Condition\";\n    } else if (type === \"doctor-appointments\") {\n      return mode === \"create\"\n        ? \"Create Doctor Appointments\"\n        : \"Update Doctor Appointments\";\n    } else if (type === \"contact\") {\n      return mode === \"create\" ? \"Create Contact\" : \"Update Contact\";\n    } else if (type === \"healthConditions\") {\n      return mode === \"create\"\n        ? \"Create Health Conditions\"\n        : \"Update Health Conditions\";\n    }\n    return \"\";\n  };\n\n  // schemas for create and edit\n  const eventSchema = [\n    \"event_name\",\n    \"datetime\",\n    \"select_elderly\",\n    \"place\",\n    \"textarea\",\n  ];\n  const medicationSchema = [\n    \"medication_name\",\n    \"medication_type\",\n    \"medication_strength_unit\",\n    \"medication_time\",\n    // \"medication_shedule\",\n    \"medication_frequency\",\n    \"medication_interval\",\n    \"medication_shedule\",\n  ];\n  const elderlySchema = [\n    \"name\",\n    \"address\",\n    \"age\",\n    \"gender\",\n    \"height\",\n    \"contactPerson\",\n    \"diseases\",\n    \"allergies\",\n    \"medications\",\n  ];\n  const healthConditionSchema = [\"diseases\", \"allergies\", \"custom_condition\"];\n  const doctorAppointmentsSchema = [\n    \"doctor\",\n    \"place\",\n    \"date\",\n    \"time\",\n    \"textarea\",\n  ];\n  const contactSchema = [\n    \"contact_name\",\n    \"gender\",\n    \"relationship\",\n    \"coverage_area\",\n    \"phone_number\",\n  ];\n  const healthConditionsSchema = [\"diseases\", \"allergies\", \"custom_condition\"];\n  // render fields\n  const renderFields = () => {\n    if (type === \"event\") {\n      return eventSchema\n        .filter(\n          (fieldName) => !(fieldName === \"select_elderly\" && elderlyLatLng)\n        )\n        .map((fieldName) => renderCustomInput(fieldName));\n    } else if (type === \"medication\") {\n      return medicationSchema.map((fieldName) => renderCustomInput(fieldName));\n    } else if (type === \"elderly\") {\n      return elderlySchema.map((fieldName) => renderCustomInput(fieldName));\n    } else if (type === \"health-condition\") {\n      return healthConditionSchema.map((fieldName) =>\n        renderCustomInput(fieldName)\n      );\n    } else if (type === \"doctor-appointments\") {\n      return doctorAppointmentsSchema.map((fieldName) =>\n        renderCustomInput(fieldName)\n      );\n    } else if (type === \"contact\") {\n      return contactSchema.map((fieldName) => renderCustomInput(fieldName));\n    } else if (type === \"healthConditions\") {\n      return healthConditionsSchema.map((fieldName) =>\n        renderCustomInput(fieldName)\n      );\n    }\n    return null;\n  };\n  // render custom input\n  const renderCustomInput = (fieldName) => {\n    const fieldConfig = {\n      event_name: {\n        label: \"Event Name\",\n        type: \"text\",\n        placeholder: \"eg: Appointment with Doctor\",\n      },\n      phone_number: {\n        label: \"Phone Number\",\n        type: \"phone_number\",\n        placeholder: \"eg: +1 123-456-7890\",\n        options: countries,\n      },\n      contact_type: {\n        label: \"Contact Type\",\n        type: \"select\",\n        placeholder: \"Select contact type\",\n        options: [\n          { value: \"person\", label: \"Person\" },\n          { value: \"emergency\", label: \"Emergency Contact\" },\n          { value: \"other\", label: \"Other\" },\n        ],\n      },\n      coverage_area: {\n        label: \"Distance from User\",\n        type: \"number\",\n        placeholder: \"(e.g., 5 km)\",\n        suffix: \"KM\",\n      },\n      relationship: {\n        label: \"Relationship\",\n        type: \"text\",\n        placeholder: \"(e.g., Son, Neighbor)\",\n      },\n      contact_name: {\n        label: \"Contact Name\",\n        type: \"text\",\n        placeholder: \"Contact Name\",\n      },\n      doctor: {\n        label: \"Doctor Name\",\n        type: \"text\",\n        placeholder: \"eg: Dr. John Doe\",\n      },\n      medication_name: {\n        label: \"Medication Name\",\n        type: \"text\",\n        placeholder: \"Medication Name\",\n      },\n      medication_type: {\n        label: \"Medication Type\",\n        type: \"select\",\n        placeholder: \"Select medication type\",\n        options: [\n          { value: \"Capsule\", label: \"Capsule\" },\n          { value: \"Tablet\", label: \"Tablet\" },\n          { value: \"Liquid\", label: \"Liquid\" },\n          { value: \"Topical\", label: \"Topical\" },\n          { value: \"Topical\", label: \"Topical\" },\n          { value: \"Cream\", label: \"Cream\" },\n          { value: \"Device\", label: \"Device\" },\n          { value: \"Drops\", label: \"Drops\" },\n          { value: \"Foam\", label: \"Foam\" },\n          { value: \"Gel\", label: \"Gel\" },\n          { value: \"Inhaler\", label: \"Inhaler\" },\n          { value: \"Injection\", label: \"Injection\" },\n          { value: \"Lotion\", label: \"Lotion\" },\n          { value: \"Oiltment\", label: \"Oiltment\" },\n          { value: \"Patch\", label: \"Patch\" },\n        ],\n      },\n      medication_strength_unit: {\n        type: \"combined\",\n        fields: [\"medication_strength\", \"medication_unit\"],\n      },\n      medication_strength: {\n        label: \"Medication Strength\",\n        type: \"number\",\n        placeholder: \"Medication Strength\",\n      },\n      medication_unit: {\n        label: \"Unit\",\n        type: \"select\",\n        placeholder: \"Unit\",\n        options: [\n          {\n            value: \"mg\",\n            label: \"mg\",\n          },\n          {\n            value: \"ml\",\n            label: \"ml\",\n          },\n          {\n            value: \"mcg\",\n            label: \"mcg\",\n          },\n          {\n            value: \"g\",\n            label: \"g\",\n          },\n        ],\n      },\n      medication_shedule: {\n        label: \"Medication Schedule\",\n        type: \"day-selector\",\n        placeholder: \"Select days\",\n      },\n      medication_interval: {\n        label: \"Medication Interval\",\n        type: \"select\",\n        placeholder: \"Medication Interval\",\n        options: [\n          { value: \"Every Day\", label: \"Every Day\" },\n          { value: \"Every Other Day\", label: \"Every Other Day\" },\n          { value: \"3 Days\", label: \"3 Days\" },\n        ],\n      },\n      medication_time_and_unit: {\n        label: \"Medication Time\",\n        type: \"multi-time\",\n        placeholder: \"Select time\",\n      },\n      medication_time: {\n        label: \"Medication Time & Amount\",\n        type: \"multi-time\",\n        placeholder: \"Select time\",\n      },\n      medication_frequency: {\n        label: \"Medication Frequency\",\n        type: \"select\",\n        placeholder: \"Select frequency\",\n        options: [\n          { value: \"At Regular Intervals\", label: \"At Regular Intervals\" },\n          {\n            value: \"On Specific Days of the Week\",\n            label: \"On Specific Days of the Week\",\n          },\n          { value: \"As Needed\", label: \"As Needed\" },\n        ],\n      },\n      name: {\n        label: \"Elderly Name\",\n        type: \"text\",\n        placeholder: \"Elderly Name\",\n      },\n      age: {\n        label: \"Age\",\n        type: \"number\",\n        placeholder: \"Age\",\n      },\n      gender: {\n        label: \"Gender\",\n        type: \"select\",\n        placeholder: \"Select gender\",\n        options: [\n          { value: \"male\", label: \"Male\" },\n          { value: \"female\", label: \"Female\" },\n        ],\n      },\n      height: {\n        label: \"Height (cm)\",\n        type: \"number\",\n        placeholder: \"Height\",\n      },\n      contactPerson: {\n        label: \"Contact Person\",\n        type: \"text\",\n        placeholder: \"Contact Person\",\n      },\n      diseases: {\n        label: \"Diseases\",\n        type: \"multi-select\",\n        placeholder: \"Select diseases\",\n        options: disease?.map((disease) => ({\n          value: disease,\n          label: disease,\n        })),\n      },\n      allergies: {\n        label: \"Allergies\",\n        type: \"multi-select\",\n        placeholder: \"Select allergies\",\n        options: allergies?.map((allergy) => ({\n          value: allergy,\n          label: allergy,\n        })),\n      },\n      custom_condition: {\n        label: \"Custom Text\",\n        type: \"multi-select\",\n        placeholder: \"Select custom text\",\n        options: custom_condition?.map((condition) => ({\n          value: condition,\n          label: condition,\n        })),\n      },\n      medications: {\n        label: \"Medications\",\n        type: \"multi-select\",\n        placeholder: \"Select medications\",\n        options: medications?.map((medication) => ({\n          value: medication,\n          label: medication,\n        })),\n      },\n      disease_name: {\n        label: \"Disease Name\",\n        type: \"text\",\n        placeholder: \"Disease Name\",\n      },\n      date: {\n        label: \"Date\",\n        type: \"date\",\n        placeholder: \"Select date\",\n      },\n      time: {\n        label: \"Time\",\n        type: \"time\",\n        placeholder: \"Select time\",\n      },\n      datetime: {\n        label: \"Date and Time\",\n        type: \"datetime\",\n        placeholder: \"Select date and time\",\n      },\n      select_elderly: {\n        label: \"Select Elderly\",\n        type: \"select\",\n        placeholder: \"Select elderly\",\n        options: elderlies,\n      },\n      disease_type: {\n        label: \"Disease Type\",\n        type: \"select\",\n        placeholder: \"Select disease type\",\n        options: [\n          { value: \"chronic\", label: \"Chronic\" },\n          { value: \"acute\", label: \"Acute\" },\n          { value: \"infectious\", label: \"Infectious\" },\n        ],\n      },\n      textarea: {\n        label: \"Notes\",\n        type: \"textarea\",\n        placeholder: \"Notes\",\n      },\n      place: {\n        label: \"Locate A Place\",\n        type: \"place\",\n        placeholder: \"Locate a place\",\n      },\n      number: {\n        label: \"Contact Number\",\n        type: \"tel\",\n        placeholder: \"Contact Number\",\n      },\n    };\n\n    const config = fieldConfig[fieldName];\n    const isGenderDisabled = fieldName !== \"gender\";\n    const isMedicationIntervalDisabled =\n      (fieldName === \"medication_interval\" &&\n        selectedMedicationFrequency?.value ===\n          \"On Specific Days of the Week\") ||\n      (fieldName === \"medication_interval\" &&\n        selectedMedicationFrequency?.value === \"As Needed\") ||\n      (fieldName === \"medication_interval\" &&\n        !selectedMedicationFrequency?.value);\n    const isDaySelectorDisabled =\n      fieldName === \"medication_shedule\" &&\n      selectedMedicationFrequency?.value !== \"On Specific Days of the Week\";\n    console.log(isGenderDisabled, isMedicationIntervalDisabled);\n    if (config?.type === \"select\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          defaultValue={dataToEdit ? dataToEdit[fieldName] : \"\"}\n          rules={{\n            required: isMedicationIntervalDisabled\n              ? \"\"\n              : `Please select ${config?.label.toLowerCase()}`,\n          }}\n          render={({ field }) => (\n            <CustomSelector\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              options={config?.options}\n              value={field.value}\n              disabled={\n                (type !== \"medication\" && isGenderDisabled) ||\n                isMedicationIntervalDisabled\n              }\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n    if (config?.type === \"combined\") {\n      return (\n        <div className=\"flex gap-2\">\n          {config.fields.map((subField, index) => (\n            <div key={subField} className={index === 0 ? \"w-4/5\" : \"w-1/5\"}>\n              {renderCustomInput(subField)}\n            </div>\n          ))}\n        </div>\n      );\n    }\n    if (config?.type === \"medication-strength-picker\") {\n      return (\n        <div className=\"flex gap-4\">\n          <div className=\"w-full\">\n            <CustomInput\n              key={fieldName}\n              label={config?.label}\n              type={config?.type}\n              register={register(fieldName, {\n                required: {\n                  value: true,\n                  message: `Please enter ${config?.label.toLowerCase()}`,\n                },\n              })}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n            />\n          </div>\n          <div className=\"w-full\">\n            <Controller\n              key={fieldName}\n              name={fieldName}\n              control={control}\n              defaultValue={dataToEdit ? dataToEdit[fieldName] : \"\"}\n              rules={{\n                required: isGenderDisabled\n                  ? \"\"\n                  : `Please select ${config?.label.toLowerCase()}`,\n              }}\n              render={({ field }) => (\n                <CustomMedicationStrengthPicker\n                  label={config?.label}\n                  error={errors[fieldName]}\n                  placeholder={config?.placeholder}\n                  options={config?.options}\n                  value={field.value}\n                  disabled={isGenderDisabled}\n                  {...field}\n                />\n              )}\n            />\n          </div>\n        </div>\n      );\n    }\n    // multiple day selector\n    if (config?.type === \"multi-time\") {\n      return (\n        <Controller\n          name={fieldName}\n          control={control}\n          render={({ field }) => (\n            <MultiTimePicker\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n\n    if (config?.type === \"day-selector\") {\n      return (\n        <div\n          key={fieldName}\n          className={`${\n            selectedMedicationFrequency?.value ===\n            \"On Specific Days of the Week\"\n              ? \"block\"\n              : \" hidden\"\n          }`}\n        >\n          <Controller\n            name={`${fieldName}_days`}\n            control={control}\n            rules={{\n              required: isDaySelectorDisabled\n                ? \"\"\n                : \"Please select at least one day\",\n            }}\n            render={({ field }) => (\n              <DaySelector\n                label={config?.label}\n                error={errors[`${fieldName}_days`]}\n                placeholder={config?.placeholder}\n                value={field.value}\n                onChange={field.onChange}\n              />\n            )}\n          />\n        </div>\n      );\n    }\n    //select for multiple values\n    if (config?.type === \"multi-select\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          // defaultValue={dataToEdit ? dataToEdit[fieldName] : []}\n          // rules={{ required: `Please select ${config?.label.toLowerCase()}` }}\n          render={({ field }) => (\n            <CustomMultiSelect\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              options={config?.options}\n              value={field.value}\n              onChange={(e) => handleMultiSelectChange(e, field.onChange)}\n            />\n          )}\n        />\n      );\n    }\n    if (config?.type === \"datetime\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          rules={{ required: `Please select ${config.label.toLowerCase()}` }}\n          render={({ field }) => (\n            <CustomDateTimePicker\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n    if (config?.type === \"date\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          rules={{ required: `Please select ${config.label.toLowerCase()}` }}\n          render={({ field }) => (\n            <CustomDatePicker\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n\n    if (config?.type === \"time\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          rules={{ required: `Please select ${config.label.toLowerCase()}` }}\n          render={({ field }) => (\n            <CustomTimePicker\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n    // Add a new condition in renderCustomInput for textarea\n    if (config?.type === \"textarea\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          rules={{}}\n          render={({ field }) => (\n            <CustomTextArea\n              label={config?.label}\n              placeholder={config?.placeholder}\n              error={errors[fieldName]}\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n    if (config?.type === \"phone_number\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          rules={{\n            required: {\n              value: true,\n              message: `Please enter ${config?.label.toLowerCase()}`,\n            },\n            pattern: {\n              value: /^[0-9]{6,15}$/, // only digits, 6–15 chars\n              message: \"Phone number must be 6–15 digits\",\n            },\n          }}\n          render={({ field }) => (\n            <CustomPhoneInput\n              label=\"Phone Number\"\n              error={errors[fieldName]}\n              placeholder=\"Enter your phone number\"\n              countryCodes={config.options}\n              selectedCode={selectedCode}\n              onCodeChange={(value) => {\n                setSelectedCode(value.split(\"_\")[0]);\n              }}\n              disabled={false}\n              {...field} // registers value + onChange + onBlur\n            />\n          )}\n        />\n      );\n    }\n\n    if (config?.type === \"place\") {\n      return (\n        <Controller\n          key={fieldName}\n          name={fieldName}\n          control={control}\n          rules={{}}\n          render={({ field }) => (\n            <CustomPlaceSelect\n              label={config?.label}\n              error={errors[fieldName]}\n              placeholder={config?.placeholder}\n              // Remove the disabled property to ensure the field is always enabled\n              elderlyLocation={\n                selectedElderly\n                  ? { lat: selectedElderly.lat, lng: selectedElderly.lng }\n                  : elderlyLatLng\n              }\n              {...field}\n            />\n          )}\n        />\n      );\n    }\n    return (\n      <CustomInput\n        key={fieldName}\n        label={config?.label}\n        type={config?.type}\n        register={register(fieldName, {\n          required: {\n            value: true,\n            message: `Please enter ${config?.label.toLowerCase()}`,\n          },\n        })}\n        error={errors[fieldName]}\n        placeholder={config?.placeholder}\n      />\n    );\n  };\n\n  return (\n    <CustomModal\n      handleSubmit={handleSubmit(onSubmit)}\n      modalOPen={modalOpen}\n      setModalOpen={setModalOpen}\n      title={renderCustomTitle()}\n      buttonText={mode === \"create\" ? \"Create\" : \"Update\"}\n      onclose={() => {\n        reset();\n      }}\n    >\n      {renderFields()}\n    </CustomModal>\n  );\n}\n\nexport const elderlies = [\n  { value: \"elderly_1\", label: \"Elderly 1\", lat: -25.274398, lng: 133.775136 },\n  { value: \"elderly_2\", label: \"Elderly 2\", lat: -33.86882, lng: 151.209296 },\n  { value: \"elderly_3\", label: \"Elderly 3\", lat: -37.813628, lng: 144.963058 },\n];\n"],"names":["CustomDatePicker","label","error","rest","jsxs","jsx","ConfigProvider","DatePicker","CustomTimePicker","TimePicker","CustomDateTimePicker","value","onChange","handleChange","date","dateString","formattedDate","dayjs","CustomMedicationStrengthPicker","options","onBlur","defaultValue","disabled","props","Select","selectedValue","option","daysOfWeek","DaySelector","handleDayChange","day","d","MultiTimePicker","currentTime","setCurrentTime","useState","tabletCount","setTabletCount","handleAddTime","newEntry","handleRemoveTime","index","newValue","Space","time","Input","e","Button","entry","CustomPhoneInput","placeholder","countryCodes","selectedCode","onCodeChange","field","useEffect","CreateAndEditModal","modalOpen","setModalOpen","type","mode","elderlyId","dataToEdit","diseases","allergies","medications","custom_condition","elderlyLatLng","onSubmitData","control","register","handleSubmit","errors","reset","watch","setValue","useForm","disease","setDisease","setSelectedCode","countries","setCountries","selectedElderly","selectedMedicationFrequency","key","getAllCountry","res","seen","customizedCountryLabel","country","item","err","onSubmit","data","_a","_b","_c","handleMultiSelectChange","selectedOptions","renderCustomTitle","eventSchema","medicationSchema","elderlySchema","healthConditionSchema","doctorAppointmentsSchema","contactSchema","healthConditionsSchema","renderFields","fieldName","renderCustomInput","config","allergy","condition","medication","elderlies","isGenderDisabled","isMedicationIntervalDisabled","isDaySelectorDisabled","Controller","CustomSelector","subField","CustomInput","CustomMultiSelect","CustomTextArea","CustomPlaceSelect","CustomModal"],"mappings":"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"}