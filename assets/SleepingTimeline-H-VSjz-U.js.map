{"version":3,"file":"SleepingTimeline-H-VSjz-U.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Sleep/Components/SleepingTimeline.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport TimelineGraph from \"@/Components/GraphAndChart/TimelineGraph\";\r\nimport { Button } from \"antd\";\r\nimport { FileOutlined } from \"@ant-design/icons\";\r\nimport SummaryModal from \"@/Components/SummaryModal/SummaryModal\";\r\nimport { FaTimeline } from \"react-icons/fa6\";\r\nimport { getSleepSummary } from \"@/api/deviceReports\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\n\r\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\r\nimport { transformTime } from \"@/utils/helper\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nexport default function SleepingTimeline() {\r\n  const { sleepData, elderlyDetails } = useContext(CustomContext);\r\n\r\n  // const sleepData = ls.get(\"sleepData\");\r\n  const [events, setEvents] = useState([]);\r\n  // const elderlyDetails = ls.get(\"elderly_details\");\r\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\r\n\r\n  const summaryProps = {\r\n    title: \"Sleep Timeline Summary\",\r\n    pickerTypes: [\"day\", \"range\"],\r\n    chartType: \"multibar\",\r\n    dataType: \"duration\",\r\n    color: \"#FF725E\",\r\n    icon: <FaTimeline />,\r\n    apisProps: {\r\n      endpoint: getSleepSummary,\r\n      query: {\r\n        uids: elderlyDetails?.deviceId,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sleepData) return;\r\n    const aggregatedEvents = sleepData?.statistical_data?.reduce(\r\n      (acc, data) => {\r\n        const startTime = new Date(data.start_time);\r\n        const endTime = new Date(data.end_time);\r\n        const durationInMinutes = (endTime - startTime) / (1000 * 60); // Duration in minutes\r\n        const statusName = sleepEventsType[data.status];\r\n\r\n        if (!acc[statusName]) {\r\n          acc[statusName] = {\r\n            duration: 0,\r\n            color: sleepEventsColor[statusName],\r\n          };\r\n        }\r\n\r\n        acc[statusName].duration += durationInMinutes;\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n\r\n    const events = Object.entries(aggregatedEvents || {}).map(\r\n      ([name, { duration, color }]) => {\r\n        const hours = Math.floor(duration / 60);\r\n        const minutes = Math.floor(duration % 60);\r\n        return {\r\n          name,\r\n          duration: `${hours}hr ${minutes}m`, // Format duration\r\n          color,\r\n        };\r\n      }\r\n    );\r\n\r\n    // const alarmEventCounts = Object.entries(\r\n    //   sleepData?.alarm_events.reduce((acc, event) => {\r\n    //     acc[sleepEventsType[event.event_type]] =\r\n    //       (acc[sleepEventsType[event.event_type]] || 0) + 1;\r\n    //     return acc;\r\n    //   }, {})\r\n    // ).map(([name, count]) => ({\r\n    //   name,\r\n    //   duration: `${count}x`, // Count occurrences\r\n    //   color: sleepEventsColor[name],\r\n    // }));\r\n\r\n    setEvents([...events]);\r\n  }, [sleepData]);\r\n  return (\r\n    <>\r\n      <Template\r\n        title=\"Sleep Timeline\"\r\n        color=\"#FF725E\"\r\n        icon={<FaTimeline />}\r\n        isDataAnalysis={false}\r\n        headerClassName=\"!text-2xl\"\r\n        summaryProps={summaryProps}\r\n      >\r\n        <TimelineGraph\r\n          statisticalData={sleepData?.statistical_data}\r\n          // alarmEvents={sleepData?.alarm_events}\r\n          enterBedTime={transformTime(sleepData?.get_bed_idx)}\r\n          getupAfterTime={transformTime(sleepData?.leave_bed_idx)}\r\n          noDataText=\"No Data Detected for Today\"\r\n        />\r\n        <div className=\"flex flex-wrap gap-4 items-center justify-center\">\r\n          {events.map((item, i) => (\r\n            <TimelineItem\r\n              key={i}\r\n              time={item.duration}\r\n              ItemName={item.name}\r\n              color={item.color}\r\n            />\r\n          ))}\r\n          {sleepData && sleepData?.leave_bed_count && (\r\n            <TimelineItem\r\n              time={sleepData?.leave_bed_count + \"x\"}\r\n              ItemName={\"Leave bed after sleep\"}\r\n              color={\"#FF725E\"}\r\n            />\r\n          )}\r\n        </div>\r\n      </Template>\r\n      {/* <div\r\n        id=\"sleepingTimeline\"\r\n        className=\"w-full h-fit rounded-2xl overflow-hidden bg-white p-6 flex flex-col gap-6\"\r\n      >\r\n        <div className=\"flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold\">Sleep Timeline</h1>\r\n          {isSummaryBtn && (\r\n            <Button\r\n              onClick={() => {\r\n                openModal();\r\n                propsData(summaryProps);\r\n              }}\r\n              icon={<FileOutlined />}\r\n              size=\"large\"\r\n        \r\n            >\r\n              Summary\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className=\"w-full h-[300px]\">\r\n          <TimelineGraph\r\n            statisticalData={statisticalData}\r\n            alarmEvents={alarmEvents}\r\n            enterBedTime={\"2024-11-03 03:06:55\"}\r\n            getupAfterTime={\"2024-11-03 07:59:15\"}\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-wrap gap-4 items-center justify-center\">\r\n          {events.map((item, i) => (\r\n            <TimelineItem\r\n              key={i}\r\n              time={item.duration}\r\n              ItemName={item.name}\r\n              color={item.color}\r\n            />\r\n          ))}\r\n         \r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\nconst TimelineItem = ({ time, ItemName, color }) => {\r\n  return (\r\n    <div\r\n      className={`flex p-[4px] pr-4 items-center gap-2 rounded-xl  `}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <span className=\"text-[17px] p-2 py-1 font-bold bg-white rounded-[9px] text-primary\">\r\n        {time}\r\n      </span>\r\n      <span className=\"text-[15px] font-medium text-white leading-[1.2]\">\r\n        {ItemName}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const statisticalData = [\r\n  {\r\n    startTime: \"2024-11-03 03:06:55\",\r\n    endTime: \"2024-11-03 03:30:25\",\r\n    status: \"3\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 03:30:25\",\r\n    endTime: \"2024-11-03 03:35:22\",\r\n    status: \"2\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 03:35:22\",\r\n    endTime: \"2024-11-03 04:09:06\",\r\n    status: \"1\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 04:09:06\",\r\n    endTime: \"2024-11-03 04:39:51\",\r\n    status: \"0\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 04:39:51\",\r\n    endTime: \"2024-11-03 05:02:40\",\r\n    status: \"1\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 05:02:40\",\r\n    endTime: \"2024-11-03 05:12:35\",\r\n    status: \"0\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 05:12:35\",\r\n    endTime: \"2024-11-03 05:44:20\",\r\n    status: \"1\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 05:44:20\",\r\n    endTime: \"2024-11-03 05:54:15\",\r\n    status: \"0\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 05:54:15\",\r\n    endTime: \"2024-11-03 06:19:03\",\r\n    status: \"1\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 06:19:03\",\r\n    endTime: \"2024-11-03 06:29:58\",\r\n    status: \"0\",\r\n  },\r\n  {\r\n    startTime: \"2024-11-03 06:29:58\",\r\n    endTime: \"2024-11-03 07:59:15\",\r\n    status: \"1\",\r\n  },\r\n];\r\n\r\nexport const alarmEvents = [\r\n  {\r\n    ts: \"2024-11-03 03:35:22\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 03:39:21\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 03:43:18\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 03:45:17\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 03:47:16\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 05:50:17\",\r\n    eventName: \"High Breathing\",\r\n    eventType: 11,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 06:58:44\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 07:02:42\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 07:04:41\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 07:49:19\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n  {\r\n    ts: \"2024-11-03 07:58:15\",\r\n    eventName: \"Sleep Apnea\",\r\n    eventType: 13,\r\n  },\r\n];\r\n"],"names":["SleepingTimeline","sleepData","elderlyDetails","useContext","CustomContext","events","setEvents","useState","sleepEventsType","sleepEventsColor","SidebarContext","summaryProps","FaTimeline","getSleepSummary","useEffect","aggregatedEvents","_a","acc","data","startTime","durationInMinutes","statusName","name","duration","color","hours","minutes","jsx","Fragment","jsxs","Template","TimelineGraph","transformTime","item","i","TimelineItem","time","ItemName","statisticalData","alarmEvents"],"mappings":"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"}