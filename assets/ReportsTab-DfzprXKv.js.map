{"version":3,"file":"ReportsTab-DfzprXKv.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Reports/ReportsTab.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Collapse,\r\n  ConfigProvider,\r\n  Cascader,\r\n  Dropdown,\r\n} from \"antd\";\r\nimport { FaFileExport } from \"react-icons/fa\";\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\nconst { SHOW_CHILD } = Cascader;\r\nimport html2canvas from \"html2canvas\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"svg-crowbar\";\r\nimport DurationStatistic from \"../Sleep/Components/DurationStatistic\";\r\nimport DurationDistribution from \"../Sleep/Components/DurationDistribution\";\r\nimport EfficiencyStatistic from \"../Sleep/Components/EfficiencyStatistic\";\r\nimport DeepSleepPercentageDistribution from \"../Sleep/Components/DeepSleepPercentageDistribution\";\r\nimport DeepSleepPercentageStatistic from \"../Sleep/Components/DeepSleepPercentageStatistic\";\r\nimport EfficiencyDistribution from \"../Sleep/Components/EfficiencyDistribution\";\r\nimport ApneaIndexStatistic from \"../Sleep/Components/ApneaIndexStatistic\";\r\nimport NumberOfBedExitStatistic from \"../Sleep/Components/NumberOfBedExitStatistic\";\r\nimport DistributionOfBedExitTimes from \"../Sleep/Components/DistributionOfBedExitTimes\";\r\nimport TimeToFallAsleepStatistic from \"../Sleep/Components/TimeToFallAsleepStatistic\";\r\nimport DistributionOfTimeToFallAsleep from \"../Sleep/Components/DistributionOfTimeToFallAsleep\";\r\nimport DistributionOfDailyRoutine from \"../Sleep/Components/DistributionOfDailyRoutine\";\r\nimport RespiratoryRate from \"../Health/Components/RespiratoryRate\";\r\nimport HeartRate from \"../Health/Components/HeartRate\";\r\nimport HeartRateAnnomalyStatistic from \"../Health/Components/HeartRateAnnomalyStatistic\";\r\nimport HeartRateDistribution from \"../Health/Components/HeartRateDistribution\";\r\nimport BreathRateDistribution from \"../Health/Components/BreathRateDistribution\";\r\nimport dayjs from \"dayjs\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nexport default function ReportsTab() {\r\n  const [datePicker, setDatePicker] = useState([]);\r\n  dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\");\r\n  const [toDate, setToDate] = useState();\r\n  const [fromDate, setFromDate] = useState(\r\n    dayjs().subtract(31, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [selectedValues, setSelectedValues] = useState([]);\r\n  const collapseRef = useRef(null);\r\n  const context = useContext(CustomContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const handleDatePicker = (value) => {\r\n    setDatePicker(value);\r\n    setFromDate(value[0]);\r\n    setToDate(value[1]);\r\n  };\r\n  const exportAsImage = async () => {\r\n    if (collapseRef.current) {\r\n      setLoading(true); // Set loading state to true\r\n      try {\r\n        const canvas = await html2canvas(collapseRef.current);\r\n        const link = document.createElement(\"a\");\r\n        link.href = canvas.toDataURL(\"image/png\");\r\n        link.download = \"reports.png\";\r\n        link.click();\r\n      } catch (error) {\r\n        console.error(\"Error exporting as image:\", error);\r\n      } finally {\r\n        setLoading(false); // Set loading state to false\r\n      }\r\n    }\r\n  };\r\n  const exportAsSVG = async () => {\r\n    if (collapseRef.current) {\r\n      setLoading(true);\r\n      try {\r\n        const canvas = await html2canvas(collapseRef.current, {\r\n          scale: 2,\r\n          useCORS: true,\r\n        });\r\n\r\n        const imgData = canvas.toDataURL(\"image/png\");\r\n        const svgContent = `\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${canvas.width}\" height=\"${canvas.height}\">\r\n            <image href=\"${imgData}\" width=\"${canvas.width}\" height=\"${canvas.height}\" />\r\n          </svg>\r\n        `;\r\n\r\n        const svgBlob = new Blob([svgContent], {\r\n          type: \"image/svg+xml;charset=utf-8\",\r\n        });\r\n        const svgUrl = URL.createObjectURL(svgBlob);\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = svgUrl;\r\n        downloadLink.download = \"reports.svg\";\r\n        downloadLink.click();\r\n        URL.revokeObjectURL(svgUrl);\r\n      } catch (error) {\r\n        console.error(\"Error exporting as SVG:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const exportAsPDF = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const pdf = new jsPDF({\r\n        orientation: \"portrait\",\r\n        unit: \"pt\",\r\n        format: \"a4\",\r\n      });\r\n      const pageWidth = pdf.internal.pageSize.getWidth();\r\n      const pageHeight = pdf.internal.pageSize.getHeight();\r\n      const margin = 15;\r\n      const columns = 2;\r\n      let x = margin,\r\n        y = margin;\r\n      let rowHeight = 0,\r\n        chartsInRow = 0;\r\n\r\n      const charts = Array.from(document.querySelectorAll(\".chart\"));\r\n\r\n      for (let i = 0; i < charts.length; i++) {\r\n        const chartElem = charts[i];\r\n        const isFullWidth = chartElem.classList.contains(\"full-width-chart\");\r\n        const canvas = await html2canvas(chartElem, { scale: 2 });\r\n        const nativeWidth = canvas.width;\r\n        const nativeHeight = canvas.height;\r\n        const imgData = canvas.toDataURL(\"image/png\");\r\n\r\n        let chartWidth, chartHeight, colSpan;\r\n        if (isFullWidth) {\r\n          chartWidth = pageWidth - margin * 2;\r\n          chartHeight = (nativeHeight / nativeWidth) * chartWidth;\r\n          colSpan = 2;\r\n        } else {\r\n          chartWidth = (pageWidth - margin * (columns + 1)) / columns;\r\n          chartHeight = (nativeHeight / nativeWidth) * chartWidth;\r\n          colSpan = 1;\r\n        }\r\n\r\n        if (y + chartHeight + margin > pageHeight) {\r\n          pdf.addPage();\r\n          x = margin;\r\n          y = margin;\r\n          chartsInRow = 0;\r\n          rowHeight = 0;\r\n        }\r\n\r\n        pdf.addImage(\r\n          imgData,\r\n          \"JPEG\",\r\n          x,\r\n          y,\r\n          chartWidth,\r\n          chartHeight,\r\n          undefined,\r\n          \"MEDIUM\",\r\n          0\r\n        );\r\n\r\n        if (isFullWidth) {\r\n          y += chartHeight + margin;\r\n          x = margin;\r\n          chartsInRow = 0;\r\n          rowHeight = 0;\r\n        } else {\r\n          if (chartsInRow === 0) {\r\n            rowHeight = chartHeight;\r\n          }\r\n          chartsInRow++;\r\n          x += chartWidth + margin;\r\n\r\n          if (chartsInRow === columns) {\r\n            y += rowHeight + margin;\r\n            x = margin;\r\n            chartsInRow = 0;\r\n            rowHeight = 0;\r\n          }\r\n        }\r\n      }\r\n      pdf.save(\"export.pdf\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const options = [\r\n    {\r\n      value: \"sleep\",\r\n      label: \"Sleep\",\r\n      children: [\r\n        {\r\n          label: \"Sleep Duration Overview\",\r\n          value: \"sleepDurationStatistic\",\r\n        },\r\n        {\r\n          label: \"Sleep Duration Trends\",\r\n          value: \"sleepDurationDistribution\",\r\n        },\r\n        {\r\n          label: \"Sleep Quality Overview\",\r\n          value: \"efficiencyStatistic\",\r\n        },\r\n        {\r\n          label: \"Deep Sleep Proportion Trends\",\r\n          value: \"deepSleepPercentageDistribution\",\r\n        },\r\n        {\r\n          label: \"Deep Sleep Proportion Overview\",\r\n          value: \"deepSleepPercentageStatistic\",\r\n        },\r\n        {\r\n          label: \"Sleep Quality Trends\",\r\n          value: \"efficiencyDistribution\",\r\n        },\r\n        {\r\n          label: \"Sleep Disturbances Index Statistic\",\r\n          value: \"apneaIndexStatistic\",\r\n        },\r\n        // {\r\n        //   label: \"Apnea Index Distribution\",\r\n        //   value: \"apneaIndexDistribution\",\r\n        // },\r\n        {\r\n          label: \"Bed Exit Frequency Overview\",\r\n          value: \"numberOfBedExitStatistic\",\r\n        },\r\n        {\r\n          label: \"Bed Exit Times \",\r\n          value: \"distributionOfBedExitTimes\",\r\n        },\r\n        {\r\n          label: \"Sleep Latency Trends\",\r\n          value: \"distributionOfTimeToFallAsleep\",\r\n        },\r\n        {\r\n          label: \"Sleep Latency Overview\",\r\n          value: \"timeToFallAsleepStatistic\",\r\n        },\r\n        {\r\n          label: \"Daily Routine Trends\",\r\n          value: \"distributionOfDailyRoutine\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: \"health\",\r\n      label: \"Health\",\r\n      children: [\r\n        {\r\n          label: \"Breath Rate\",\r\n          value: \"respiratoryRate\",\r\n        },\r\n        {\r\n          label: \"Heart Rate\",\r\n          value: \"heartRate\",\r\n        },\r\n        {\r\n          label: \"Heart Rate Variation Overview\",\r\n          value: \"heartRateAnnomalyStatistic\",\r\n        },\r\n        {\r\n          label: \"Heart Rate Trends\",\r\n          value: \"heartRateDistribution\",\r\n        },\r\n        {\r\n          label: \"Breathing Rate Trends\",\r\n          value: \"breathRateDistribution\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handleCascaderChange = (value) => {\r\n    const flattenedValues = value.map((path) => path[path.length - 1]);\r\n    setSelectedValues(flattenedValues);\r\n  };\r\n\r\n  const isSelected = (value) => {\r\n    // Show all charts if no specific selections are made\r\n    if (selectedValues.length === 0) return true;\r\n    const result = selectedValues.includes(value);\r\n    console.log(`Checking if ${value} is selected:`, result); // Debugging line\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"reports\" className=\"flex flex-col gap-4 mt-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h1 className=\"text-[24px] font-bold\">Reports</h1>\r\n          <div className=\"flex gap-4 items-center\">\r\n            <ConfigProvider\r\n              theme={{\r\n                token: {\r\n                  fontFamily: \"Baloo2\",\r\n                  colorPrimary: \"#8086AC\",\r\n                  colorLinkActive: \"#8086AC\",\r\n                  colorLinkHover: \"#8086AC\",\r\n                  colorLink: \"#8086AC\",\r\n                },\r\n              }}\r\n            >\r\n              <RangePicker\r\n                showTime={false}\r\n                style={{ width: \"200px\", borderRadius: \"10px\" }}\r\n                size=\"large\"\r\n                placeholder={[\"Pick Data Range (Start)\", \"End\"]}\r\n                format=\"YYYY-MM-DD\"\r\n                onChange={(value, dateString) => {\r\n                  handleDatePicker(dateString);\r\n                }}\r\n              />\r\n              <Cascader\r\n                style={{\r\n                  width: \"300px\",\r\n                }}\r\n                options={options}\r\n                placeholder=\"Select Specific Analysis\"\r\n                multiple\r\n                maxTagCount=\"responsive\"\r\n                size=\"large\"\r\n                showCheckedStrategy={SHOW_CHILD}\r\n                onChange={handleCascaderChange}\r\n                defaultValue={selectedValues}\r\n              />\r\n            </ConfigProvider>\r\n            <Dropdown.Button\r\n              size=\"large\"\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                width: \"fit-content\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n              loading={loading}\r\n              menu={{\r\n                items: [\r\n                  { label: \"Export as SVG\", key: \"1\" },\r\n                  { label: \"Export as PDF\", key: \"2\" },\r\n                ],\r\n                onClick: (e) => {\r\n                  if (e.key === \"1\") {\r\n                    exportAsSVG(); // Export as SVG\r\n                  } else if (e.key === \"2\") {\r\n                    exportAsPDF(); // Export as PNG\r\n                  }\r\n                },\r\n                icon: <FaFileExport />,\r\n              }}\r\n              onClick={exportAsImage}\r\n            >\r\n              <FaFileExport />\r\n              Export Report as PNG\r\n            </Dropdown.Button>\r\n            {/* <Button\r\n              size=\"large\"\r\n              style={{ backgroundColor: \"#fff\", color: \"#252F67\" }}\r\n              icon={<FaFileExport />}\r\n              onClick={exportAsImage}\r\n            >\r\n              Export as PDF\r\n            </Button> */}\r\n          </div>\r\n        </div>\r\n\r\n        <CustomContext.Provider\r\n          value={{ ...context, chartFromDate: fromDate, chartToDate: toDate }}\r\n        >\r\n          <div id=\"reports\" ref={collapseRef}>\r\n            <Collapse defaultActiveKey={[\"0\"]} expandIconPosition=\"left\">\r\n              {groupGraphAndChart.map((group, index) => (\r\n                <Panel\r\n                  key={index}\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                  header={\r\n                    <div\r\n                      className=\"flex items-center justify-between\"\r\n                      style={{ border: \"none\", padding: 0 }}\r\n                    >\r\n                      <span>{group.groupName || \"Unnamed Group\"}</span>\r\n                      <div\r\n                        className=\"flex-grow mx-2\"\r\n                        style={{ borderBottom: \"none\" }}\r\n                      ></div>\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div className=\"gap-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\r\n                    {group.components.map(\r\n                      ({ id, component, fullWidth }, idx) =>\r\n                        isSelected(id) && (\r\n                          <div\r\n                            key={idx}\r\n                            className={\r\n                              fullWidth\r\n                                ? \"col-span-2 chart full-width-chart\"\r\n                                : \"\" + ` chart`\r\n                            }\r\n                          >\r\n                            {component}\r\n                          </div>\r\n                        )\r\n                    )}\r\n                  </div>\r\n                </Panel>\r\n              ))}\r\n            </Collapse>\r\n          </div>\r\n        </CustomContext.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst groupGraphAndChart = [\r\n  {\r\n    groupName: \"Sleep\",\r\n    components: [\r\n      {\r\n        id: \"sleepDurationStatistic\",\r\n        component: <DurationStatistic isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"sleepDurationDistribution\",\r\n        component: <DurationDistribution isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"efficiencyStatistic\",\r\n        component: <EfficiencyStatistic isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"deepSleepPercentageDistribution\",\r\n        component: <DeepSleepPercentageDistribution isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"deepSleepPercentageStatistic\",\r\n        component: <DeepSleepPercentageStatistic isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"efficiencyDistribution\",\r\n        component: <EfficiencyDistribution isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"apneaIndexStatistic\",\r\n        component: <ApneaIndexStatistic isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"numberOfBedExitStatistic\",\r\n        component: <NumberOfBedExitStatistic isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"distributionOfBedExitTimes\",\r\n        component: <DistributionOfBedExitTimes isSummaryBtn={false} />,\r\n        fullWidth: true, // This component should be full width\r\n      },\r\n      {\r\n        id: \"timeToFallAsleepStatistic\",\r\n        component: <TimeToFallAsleepStatistic isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"distributionOfTimeToFallAsleep\",\r\n        component: <DistributionOfTimeToFallAsleep isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"distributionOfDailyRoutine\",\r\n        component: <DistributionOfDailyRoutine isSummaryBtn={false} />,\r\n        fullWidth: true, // This component should be full width\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    groupName: \"Health\",\r\n    components: [\r\n      {\r\n        id: \"respiratoryRate\",\r\n        component: <RespiratoryRate isSummaryBtn={true} dataType=\"Month\" />,\r\n        fullWidth: true,\r\n      },\r\n      {\r\n        id: \"heartRate\",\r\n        component: <HeartRate isSummaryBtn={true} dataType=\"Month\" />,\r\n        fullWidth: true,\r\n      },\r\n      // {\r\n      //   id: \"heartRateAnnomalyStatistic\",\r\n      //   component: <HeartRateAnnomalyStatistic isSummaryBtn={false} />,\r\n      //   fullWidth: false,\r\n      // },\r\n      {\r\n        id: \"heartRateDistribution\",\r\n        component: <HeartRateDistribution isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n      {\r\n        id: \"breathRateDistribution\",\r\n        component: <BreathRateDistribution isSummaryBtn={false} />,\r\n        fullWidth: false,\r\n      },\r\n    ],\r\n  },\r\n];\r\n"],"names":["RangePicker","DatePicker","Panel","Collapse","SHOW_CHILD","Cascader","ReportsTab","datePicker","setDatePicker","useState","dayjs","toDate","setToDate","fromDate","setFromDate","selectedValues","setSelectedValues","collapseRef","useRef","context","useContext","CustomContext","loading","setLoading","handleDatePicker","value","exportAsImage","canvas","html2canvas","link","error","exportAsSVG","imgData","svgContent","svgBlob","svgUrl","downloadLink","exportAsPDF","pdf","jsPDF","pageWidth","pageHeight","margin","columns","x","y","rowHeight","chartsInRow","charts","i","chartElem","isFullWidth","nativeWidth","nativeHeight","chartWidth","chartHeight","colSpan","options","handleCascaderChange","flattenedValues","path","isSelected","result","jsxs","jsx","ConfigProvider","dateString","Dropdown","e","FaFileExport","group","index","id","component","fullWidth","idx","groupGraphAndChart","DurationStatistic","DurationDistribution","EfficiencyStatistic","DeepSleepPercentageDistribution","DeepSleepPercentageStatistic","EfficiencyDistribution","ApneaIndexStatistic","NumberOfBedExitStatistic","DistributionOfBedExitTimes","TimeToFallAsleepStatistic","DistributionOfTimeToFallAsleep","DistributionOfDailyRoutine","RespiratoryRate","HeartRate","HeartRateDistribution","BreathRateDistribution"],"mappings":"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"}