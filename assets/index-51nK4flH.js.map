{"version":3,"file":"index-51nK4flH.js","sources":["../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/roomAndDetails.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/index.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState, useRef } from \"react\";\r\nimport \"./style.css\";\r\nimport Room1 from \"@/Components/RoomMap/RoomMap3\";\r\nimport Room2 from \"@/Components/RoomMap/RoomMap4\";\r\n\r\nimport {\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertInfoViaEvent,\r\n  decodePosition,\r\n} from \"@/utils/helper\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { subscribeToMqtt, unsubscribeFromMqtt } from \"@/api/deviceReports\";\r\nimport useWebSocket from \"@/hook/useWebSoket\";\r\nexport default function RoomAndDetails({ data: roomData = {} }) {\r\n  const navigate = useNavigate();\r\n  const [position, setPosition] = useState(null);\r\n  const previousDeviceRef = useRef(null);\r\n  const heartBreathRateRef = useRef(false);\r\n  const [heartBreathRateActive, setHeartBreathRateActive] = useState(false);\r\n  const timeoutRef = useRef;\r\n  const getBackgroundColor = (type) => {\r\n    switch (type) {\r\n      case \"Info\":\r\n        return \"bg-blue-500\"; // Default to 'info'\r\n      case \"Critical\":\r\n        return \"bg-red-500\";\r\n      case \"Warning\":\r\n        return \"bg-yellow-500\";\r\n      default:\r\n        return \"bg-blue-500\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const deviceCode = roomData?.rooms?.device_no;\r\n    if (deviceCode) {\r\n      if (\r\n        previousDeviceRef.current &&\r\n        previousDeviceRef.current !== deviceCode\r\n      ) {\r\n        unsubscribeFromMqtt({\r\n          uid: previousDeviceRef.current,\r\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        })\r\n          .then(() => {})\r\n          .catch((err) => console.error(`Error unsubscribing: ${err}`));\r\n      }\r\n\r\n      // Subscribe to the new device\r\n      subscribeToMqtt({\r\n        uid: deviceCode,\r\n        messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        topics: {\r\n          pub: [deviceCode],\r\n        },\r\n      })\r\n        .then(() => {})\r\n        .catch((err) => console.error(`Error subscribing: ${err}`));\r\n\r\n      // Update the reference to the current device\r\n      previousDeviceRef.current = deviceCode;\r\n    }\r\n\r\n    // Cleanup function for unmount or page exit\r\n    return () => {\r\n      if (previousDeviceRef.current) {\r\n        unsubscribeFromMqtt({\r\n          uid: previousDeviceRef.current,\r\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        })\r\n          .then(() => {})\r\n          .catch((err) =>\r\n            console.error(`Error during cleanup unsubscribe: ${err}`)\r\n          );\r\n      }\r\n    };\r\n  }, [roomData]);\r\n\r\n  function handleDecode(code) {\r\n    const data = decodePosition(code);\r\n    const modifiedPeopleData = [...data];\r\n\r\n    if (\r\n      modifiedPeopleData[0]?.postureIndex === 4 &&\r\n      heartBreathRateRef.current\r\n    ) {\r\n      // Modify the first person (index 0) posture\r\n      modifiedPeopleData[0].postureIndex = 6;\r\n      modifiedPeopleData[0].posture = \"Resident on Bed\";\r\n      modifiedPeopleData[0].color = \"#252F67\";\r\n    }\r\n\r\n    setPosition(modifiedPeopleData);\r\n  }\r\n  function handleHeartBreathUpdate() {\r\n    setHeartBreathRateActive(true);\r\n    heartBreathRateRef.current = true;\r\n\r\n    clearTimeout(timeoutRef.current); // Clear any existing timeout\r\n    timeoutRef.current = setTimeout(() => {\r\n      setHeartBreathRateActive(false);\r\n      heartBreathRateRef.current = false;\r\n    }, 5000);\r\n  }\r\n  useWebSocket({\r\n    onMessage: (data) => {\r\n      const payload = JSON.parse(data?.message)?.payload;\r\n      if (\r\n        payload?.deviceCode === roomData?.rooms?.device_no &&\r\n        (payload?.position || payload?.heartbreath)\r\n      ) {\r\n        if (payload?.position) {\r\n          handleDecode(payload.position);\r\n        }\r\n        if (payload?.heartbreath) {\r\n          handleHeartBreathUpdate();\r\n        }\r\n      }\r\n    },\r\n    dependencies: [roomData],\r\n  });\r\n  return (\r\n    <div className=\"w-full flex flex-col gap-4 p-4 pr-0 h-full pt-0\">\r\n      <div\r\n        id=\"roomAlertHeader\"\r\n        className={`alert-header !h-[75px] flex justify-between items-center relative px-4 overflow-hidden rounded-lg ${getBackgroundColor(\r\n          getAlertInfoViaEvent(roomData)?.label\r\n        )}`}\r\n      >\r\n        <div className=\"loader\"></div>\r\n        <div className=\"text-container flex flex-col gap-0 h-full justify-center text-white\">\r\n          <p className=\"text-sm text-gray-100 m-0 font-medium\">\r\n            {roomData.room_name}\r\n          </p>\r\n          <h2 className=\"text-lg font-bold m-0 leading-none \">\r\n            {getAlertInfoViaEvent(roomData)?.title}\r\n          </h2>\r\n        </div>\r\n        <span\r\n          onClick={() => {\r\n            navigate(\r\n              `/supporter/elderlies/elderly-profile/${roomData?.elderly_id}`\r\n            );\r\n          }}\r\n          className=\"text-sm text-gray-100 cursor-pointer p-3 py-2 bg-white/0 rounded-lg hover:bg-white/10 transition-all duration-300\"\r\n        >\r\n          View Elderly\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div className=\"flex flex-col gap-0 border-b border-gray-200 pb-2 \">\r\n          <h2 className=\"text-lg font-bold m-0 leading-none\">\r\n            {roomData.elderly_name}\r\n          </h2>\r\n          <p className=\"text-sm text-gray-500 m-0\">{roomData.address}</p>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n\r\n      <div id=\"roomMapAndDetails\" className=\"flex gap-4 h-full overflow-hidden\">\r\n        <div className=\"map-container w-2/3 border overflow-hidden h-full\">\r\n          {roomData?.rooms?.mount_type === 1 &&\r\n            roomData?.rooms?.is_device_bind && (\r\n              <Room2 roomInfo={roomData?.rooms} position={position} />\r\n            )}\r\n          {roomData?.rooms?.mount_type === 2 &&\r\n            roomData?.rooms?.is_device_bind && (\r\n              <Room1 roomInfo={roomData?.rooms} position={position} />\r\n            )}\r\n          {!roomData?.rooms?.is_device_bind && (\r\n            <span className=\"w-full h-full flex items-center justify-center\">\r\n              <p> No Device Data Available</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"details-container w-1/3 \">\r\n          <div className=\"flex flex-col gap-0 p-3\">\r\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\r\n              {transformDateAndTime(roomData.created_at)}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">\r\n              Time of Incident\r\n            </p>\r\n          </div>\r\n          <div className=\"flex flex-col gap-0 p-3\">\r\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\r\n              <AutoUpdatingDuration date={roomData.created_at} />\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">Alert Life</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Segmented, Badge, Space, Spin, Empty } from \"antd\";\r\nimport RoomAndDetails from \"./roomAndDetails\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport { getAlertInfoViaEvent, getAlertsGroup } from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function RoomView() {\r\n  const [alertType, setAlertType] = useState(\"All\");\r\n  const [alertList, setAlertList] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  const [selectedAlert, setSelectedAlert] = useState(null);\r\n  const [alertTypeQuery, setAlertTypeQuery] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1); // Pagination page state\r\n  const listRef = useRef(null);\r\n  const getAlertListData = useCallback(() => {\r\n    setLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: false,\r\n      limit: 20, // Limit to 10 alerts per page\r\n      page,\r\n      ...alertTypeQuery,\r\n    })\r\n      .then((res) => {\r\n        setAlertList((prev) => [...prev, ...res.data]); // Append new data\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setLoading(false);\r\n      });\r\n  }, [alertTypeQuery, page]);\r\n\r\n  useEffect(() => {\r\n    getAlertListData();\r\n  }, [page, alertTypeQuery]);\r\n\r\n  useEffect(() => {\r\n    if (alertList.length > 0 && !activeItem) {\r\n      const firstAlert = alertList[0];\r\n      setActiveItem(firstAlert._id);\r\n      setSelectedAlert(firstAlert);\r\n    }\r\n  }, [alertList, activeItem]);\r\n\r\n  const onChange = (key) => {\r\n    setActiveItem(key);\r\n    const selected = alertList.find((alert) => alert._id === key);\r\n    setSelectedAlert(selected);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const { scrollTop, scrollHeight, clientHeight } = listRef.current;\r\n\r\n    // Check if user has scrolled to the bottom\r\n    if (scrollTop + clientHeight >= scrollHeight - 10 && !loading) {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const onSegmentChange = (value) => {\r\n    setAlertTypeQuery(getAlertsGroup(value));\r\n    setPage(1); // Reset to the first page\r\n    setAlertList([]); // Clear the existing list\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-center items-center h-[495px] overflow-hidden\">\r\n      <div className=\"w-[30%] flex flex-col gap-4 h-full\">\r\n        <Segmented\r\n          style={{ width: \"100%\" }}\r\n          block\r\n          options={segmentsForAlertView}\r\n          onChange={(value) => onSegmentChange(value)}\r\n        />\r\n        <div\r\n          ref={listRef}\r\n          className=\"w-full overflow-auto\"\r\n          style={{ height: \"440px\" }}\r\n          onScroll={handleScroll}\r\n        >\r\n          {alertList.map((alert) => (\r\n            <div\r\n              key={alert._id}\r\n              onClick={() => onChange(alert._id)}\r\n              className={`custom-tab-label flex justify-between items-center p-2.5 rounded-md cursor-pointer ${\r\n                activeItem === alert._id ? \"bg-gray-100\" : \"\"\r\n              }`}\r\n            >\r\n              <span className=\"text-black font-semibold\">\r\n                {alert.room_name}\r\n              </span>\r\n              <Space>\r\n                {getAlertInfoViaEvent(alert)?.label === \"Critical\" && (\r\n                  <Badge color=\"red\" />\r\n                )}\r\n                {getAlertInfoViaEvent(alert)?.label === \"Warning\" && (\r\n                  <Badge color=\"orange\" />\r\n                )}\r\n                {getAlertInfoViaEvent(alert)?.label === \"Info\" && (\r\n                  <Badge color=\"blue\" />\r\n                )}\r\n              </Space>\r\n            </div>\r\n          ))}\r\n          {loading && (\r\n            <div className=\"w-full flex justify-center py-4\">\r\n              <Spin />\r\n            </div>\r\n          )}\r\n          {!loading && alertList.length === 0 && (\r\n            <Empty description=\"No active alerts available\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-[70%] h-full\">\r\n        {selectedAlert ? (\r\n          <RoomAndDetails data={selectedAlert} />\r\n        ) : (\r\n          <Empty description=\"Select an alert to view details\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const segmentsForAlertView = [\r\n  { label: \"All\", value: \"All\" },\r\n  { label: \"Critical\", value: \"Critical\" },\r\n  { label: \"Warning\", value: \"Warning\" },\r\n  { label: \"Info\", value: \"Info\" },\r\n];\r\n"],"names":["RoomAndDetails","roomData","navigate","useNavigate","position","setPosition","useState","previousDeviceRef","useRef","heartBreathRateRef","heartBreathRateActive","setHeartBreathRateActive","timeoutRef","getBackgroundColor","type","useEffect","deviceCode","_a","unsubscribeFromMqtt","err","subscribeToMqtt","handleDecode","code","modifiedPeopleData","decodePosition","handleHeartBreathUpdate","useWebSocket","data","payload","_b","jsxs","getAlertInfoViaEvent","jsx","_c","_d","Room2","_e","_f","Room1","_g","transformDateAndTime","AutoUpdatingDuration","RoomView","alertList","setAlertList","activeItem","setActiveItem","selectedAlert","setSelectedAlert","alertTypeQuery","setAlertTypeQuery","loading","setLoading","page","setPage","listRef","getAlertListData","useCallback","getAlertList","dayjs","res","prev","firstAlert","onChange","key","selected","alert","handleScroll","scrollTop","scrollHeight","clientHeight","prevPage","onSegmentChange","value","getAlertsGroup","Segmented","segmentsForAlertView","Space","Badge","Spin","Empty"],"mappings":"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"}