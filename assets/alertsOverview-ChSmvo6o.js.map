{"version":3,"file":"alertsOverview-ChSmvo6o.js","sources":["../../src/Pages/Supportnursing/Dashboards/Components/3xLineChart/MultiLineChart.jsx","../../src/Components/WeeklyPicker/WeeklyPicker.jsx","../../src/Pages/Supportnursing/Utiles/utiles.jsx","../../src/Pages/Supportnursing/Dashboards/mock.js","../../src/Components/ActiveAlerts/ActiveAlertsCards.jsx","../../src/Pages/Supportnursing/Dashboards/Components/AlertsOverview/alertsOverview.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport { Empty } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function MultiLineChart({ data = [], fromDate, toDate }) {\r\n  // Function to generate week days between fromDate and toDate\r\n  const generateWeekDays = (fromDate, toDate) => {\r\n    const days = [];\r\n    let current = dayjs(fromDate);\r\n    while (current.isBefore(toDate) || current.isSame(toDate, \"day\")) {\r\n      days.push(current.format(\"YYYY-MM-DD\"));\r\n      current = current.add(1, \"day\");\r\n    }\r\n    return days;\r\n  };\r\n\r\n  // Map data into a structured format for the chart\r\n  const weekDays = generateWeekDays(fromDate, toDate);\r\n\r\n  const structuredData = weekDays.map((day) => {\r\n    const critical = data\r\n      .filter((item) => item.date === day && item.alarm_group === \"Critical\")\r\n      .reduce((sum, item) => sum + item.count, 0);\r\n\r\n    const warning = data\r\n      .filter((item) => item.date === day && item.alarm_group === \"Warning\")\r\n      .reduce((sum, item) => sum + item.count, 0);\r\n\r\n    const problem = data\r\n      .filter((item) => item.date === day && item.alarm_group === \"Info\")\r\n      .reduce((sum, item) => sum + item.count, 0);\r\n\r\n    return { day: dayjs(day).format(\"ddd\"), critical, warning, problem };\r\n  });\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"20%\",\r\n      top: \"10%\",\r\n      containLabel: true,\r\n    },\r\n    legend: {\r\n      show: true,\r\n      orient: \"horizontal\", // Align horizontally\r\n      bottom: \"10%\", // Position at the bottom\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: structuredData.map((item) => item.day),\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Critical\",\r\n        type: \"line\",\r\n        data: structuredData.map((item) => item.critical),\r\n        itemStyle: { color: \"#FF0000\" },\r\n        smooth: true,\r\n      },\r\n      {\r\n        name: \"Warning\",\r\n        type: \"line\",\r\n        data: structuredData.map((item) => item.warning),\r\n        itemStyle: { color: \"#FFA500\" },\r\n        smooth: true,\r\n      },\r\n      {\r\n        name: \"Problem\",\r\n        type: \"line\",\r\n        data: structuredData.map((item) => item.problem),\r\n        itemStyle: { color: \"#800080\" },\r\n        smooth: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (!data.length) {\r\n    return (\r\n      <div className=\"h-full flex items-center w-full justify-center\">\r\n        <Empty description=\"No data available to show\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ width: \"100% !important\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\r\n\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(weekOfYear); // Extend dayjs to use week of year\r\n\r\nconst WeeklyMonthlyPicker = ({ placeholder, style, handleChange, value }) => {\r\n  const [placeholderText, setPlaceholderText] = useState(\"This Week\");\r\n  // Function to format the selected week\r\n  const formatWeek = (value) => {\r\n    const start = dayjs(value).startOf(\"week\").format(\"YYYY-MM-DD\"); // Get start date of week\r\n    const end = dayjs(value).endOf(\"week\").format(\"YYYY-MM-DD\"); // Get end date of week\r\n    return {\r\n      week: dayjs(value).week(),\r\n      start,\r\n      end,\r\n    }; // e.g., { week: 42, start: \"2024-10-15\", end: \"2024-10-21\" }\r\n  };\r\n\r\n  // Function to display the formatted string in the DatePicker\r\n  const displayFormat = (value) => {\r\n    return `Week ${formatWeek(value).week}`; // Return week number for display\r\n  };\r\n  useEffect(() => {\r\n    if (value) {\r\n      const currentWeek = dayjs().week();\r\n      const selectedWeek = dayjs(value.start).week();\r\n\r\n      if (selectedWeek === currentWeek - 1) {\r\n        setPlaceholderText(\"Last Week\");\r\n      } else {\r\n        setPlaceholderText(`Week ${selectedWeek}`);\r\n      }\r\n    } else {\r\n      setPlaceholderText(\"This Week\");\r\n    }\r\n  }, [value]);\r\n  return (\r\n    <DatePicker\r\n      style={style}\r\n      placeholder={placeholderText}\r\n      size=\"large\"\r\n      format={displayFormat} // Use the display format function\r\n      picker={\"week\"}\r\n      onChange={(selectedDate) => {\r\n        if (selectedDate) {\r\n          const formatted = formatWeek(selectedDate);\r\n          handleChange(formatted);\r\n        } else {\r\n          handleChange(\"\");\r\n          setPlaceholderText(\"This Week\");\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeeklyMonthlyPicker;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport AlertName from \"@/Components/NameCol/AlertName\";\r\nimport { LuEye } from \"react-icons/lu\";\r\nimport { Table } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ActionManu from \"@/Components/ActionManu/ActionManu\";\r\nimport LargeTextViewerModal from \"@/Components/LargeTextViewerModal/LargeTextViewerModal\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\n\r\nimport {\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertType,\r\n  calculateDurationBetweenTimes,\r\n  getAlertInfoViaEvent,\r\n} from \"@/utils/helper\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\n\r\nexport default function useAlertTableColumns(type) {\r\n  const { rolesFormatter } = useContext(SidebarContext);\r\n  const navigate = useNavigate(); // Initialize the navigate function\r\n  const handleViewClick = (row) => {\r\n    window.scrollTo(0, 0);\r\n    navigate(\r\n      `/supporter/elderlies/elderly-profile/${row.elderly_id}?tab=overview`\r\n    );\r\n  };\r\n  const alertColsMapping = {\r\n    activeAlertsTableData: [\r\n      \"alertName\",\r\n      \"alertType\",\r\n      \"elderlyName\",\r\n      \"roomName\",\r\n      \"incidentTime\",\r\n      \"alertLife\",\r\n      \"address\",\r\n      \"viewElderly\",\r\n    ],\r\n    recentlyClosedAlertsTableData: [\r\n      \"alertName\",\r\n      \"alertType\",\r\n      \"elderlyName\",\r\n      \"roomName\",\r\n      \"incidentTime\",\r\n      \"alertLifetime\",\r\n      \"alertStatus\",\r\n      \"closedAt\",\r\n      \"closedBy\",\r\n      \"address\",\r\n      \"viewElderly\",\r\n    ],\r\n    eventsTableData: [\r\n      \"eventName\",\r\n      \"elderlyName\",\r\n      \"eventTime\",\r\n      // \"eventTimeline\",\r\n      \"place\",\r\n      // \"expandColumn\",\r\n      \"largeText\",\r\n      \"status\",\r\n      // \"disabilityType\",\r\n      \"action\",\r\n    ],\r\n  };\r\n  const AlertsTableColumns = {\r\n    alertName: {\r\n      title: \"Notification Name\",\r\n      render: (row) => <AlertName data={row} />,\r\n    },\r\n    alertType: {\r\n      title: \"Notification Type\",\r\n      render: (row) => <span>{getAlertInfoViaEvent(row)?.label}</span>,\r\n    },\r\n    elderlyName: {\r\n      title: \"User Name\",\r\n      dataIndex: \"elderly_name\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n    roomName: {\r\n      title: \"Room Name\",\r\n      dataIndex: \"room_name\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n\r\n    incidentTime: {\r\n      title: \"Observation Time\",\r\n      dataIndex: \"created_at\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\r\n      ),\r\n    },\r\n    alertLifetime: {\r\n      title: \"Notification Duration\",\r\n      render: (row) => (\r\n        <span className=\"text-nowrap\">\r\n          {calculateDurationBetweenTimes(row?.created_at, row?.closed_at)}\r\n        </span>\r\n      ),\r\n    },\r\n    alertLife: {\r\n      title: \"Notification Duration\",\r\n      dataIndex: \"created_at\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">\r\n          {/* {transformDateAndTimeToDuration(text)} */}\r\n          <AutoUpdatingDuration date={text} />\r\n        </span>\r\n      ),\r\n    },\r\n    alertStatus: {\r\n      title: \"Notification Status\",\r\n      dataIndex: \"status\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">\r\n          {text == 0 ? \"True Notification\" : \"False Notification\"}\r\n        </span>\r\n      ),\r\n    },\r\n    address: {\r\n      title: \"Address\",\r\n      width: \"230px\",\r\n      render: (row) => (\r\n        <span className=\"!w-[230px] text-nowrap\">{row.address}</span>\r\n      ),\r\n    },\r\n    //for recently closed alerts table\r\n    closedAt: {\r\n      title: \"Closed At\",\r\n      dataIndex: \"closed_at\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\r\n      ),\r\n    },\r\n    closedBy: {\r\n      title: \"Closed By\",\r\n      render: (row) => (\r\n        <span className=\"text-nowrap\">\r\n          {row.closed_by} ({rolesFormatter[row.closed_by_role]} )\r\n        </span>\r\n      ),\r\n    },\r\n    //for events table\r\n    eventName: {\r\n      title: \"Event Name\",\r\n      dataIndex: \"event_name\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n    eventTime: {\r\n      title: \"Event Time\",\r\n      dataIndex: \"date_time\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\r\n      ),\r\n    },\r\n    eventTimeline: {\r\n      title: \"Event Timeline\",\r\n      dataIndex: \"alertLifetime\",\r\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\r\n    },\r\n    disabilityType: {\r\n      title: \"Disability Type\",\r\n      dataIndex: \"disabilityType\",\r\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\r\n    },\r\n    place: {\r\n      title: \"Place\",\r\n      dataIndex: \"place\",\r\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\r\n    },\r\n    status: {\r\n      title: \"Status\",\r\n      dataIndex: \"event_status\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap capitalize\">\r\n          {text !== \"open\" ? text : \"Done\"}\r\n        </span>\r\n      ),\r\n    },\r\n    largeText: {\r\n      title: () => {\r\n        switch (type) {\r\n          case \"events\":\r\n            return \"Note\";\r\n          default:\r\n            return \"\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <LargeTextViewerModal data={row.note} title=\"Additional Info\" />\r\n      ),\r\n    },\r\n    expandColumn: Table.EXPAND_COLUMN,\r\n    viewElderly: {\r\n      // title: \"View Elderly\",\r\n      render: (row) => (\r\n        <span\r\n          onClick={() => handleViewClick(row)}\r\n          className=\"flex items-center transition-all duration-300 justify-center gap-2 text-sm font-medium text-text-primary hover:text-primary cursor-pointer p-2 rounded-md  text-center hover:bg-slate-100\"\r\n        >\r\n          View <LuEye />\r\n        </span>\r\n      ),\r\n    },\r\n    action: {\r\n      title: \"Action\",\r\n      render: (row) => <ActionManu row={row} />,\r\n    },\r\n  };\r\n  const [alertTableColumns, setAlertTableColumns] = useState(undefined);\r\n  useEffect(() => {\r\n    if (type == \"activeAlert\") {\r\n      const cols = alertColsMapping.activeAlertsTableData.map((col) => {\r\n        return AlertsTableColumns[col];\r\n      });\r\n      setAlertTableColumns(cols);\r\n    } else if (type == \"recentlyClosedAlert\") {\r\n      const cols = alertColsMapping.recentlyClosedAlertsTableData.map((col) => {\r\n        return AlertsTableColumns[col];\r\n      });\r\n      setAlertTableColumns(cols);\r\n    } else if (type == \"events\") {\r\n      const cols = alertColsMapping.eventsTableData.map((col) => {\r\n        return AlertsTableColumns[col];\r\n      });\r\n      setAlertTableColumns(cols);\r\n    } else {\r\n      setAlertTableColumns([]);\r\n    }\r\n  }, []);\r\n  return alertTableColumns;\r\n}\r\n\r\nexport { useAlertTableColumns };\r\n","export const generateRandomAlerts = (count) => {\r\n  const alertTypes = [\"Critical\", \"Info\", \"Warning\"];\r\n  const rooms = [\"Living Room\", \"Kitchen\", \"Bedroom\", \"Bathroom\"];\r\n  const names = [\r\n    \"John Doe\",\r\n    \"Jane Doe\",\r\n    \"Alice Smith\",\r\n    \"Bob Johnson\",\r\n    \"Emma Brown\",\r\n    \"Michael Wilson\",\r\n    \"Sarah Davis\",\r\n    \"David Miller\",\r\n    \"Lisa Garcia\",\r\n    \"James Rodriguez\",\r\n  ];\r\n  const alertNames = [\r\n    \"Fall Detected\",\r\n    \"Fire Detected\",\r\n    \"Inactivity Alert\",\r\n    \"Medication Reminder\",\r\n    \"Unusual Behavior\",\r\n    \"High Temperature\",\r\n    \"Low Temperature\",\r\n    \"Water Leak\",\r\n    \"Door Left Open\",\r\n    \"Window Broken\",\r\n  ];\r\n  const eventNames = [\r\n    \"Medication Taken\",\r\n    \"Medication Not Taken\",\r\n    \"Medication Reminder\",\r\n  ];\r\n  const disabilityTypes = [\"Wheelchair\", \"Crutches\", \"Cane\", \"None\"];\r\n  const allergies = [\"Yes\", \"No\"];\r\n  const diseases = [\"Yes\", \"No\"];\r\n  const medications = [\"Yes\", \"No\"];\r\n  const activeAlert = [\"1\", \"4\", \"2\", \"No\"];\r\n  const isAlert = [\"True\", \"False\"];\r\n  return Array.from({ length: count }, (_, index) => ({\r\n    _id: index + 1,\r\n    alertType: alertTypes[Math.floor(Math.random() * alertTypes.length)],\r\n    elderlyName: names[Math.floor(Math.random() * names.length)],\r\n    alertName: alertNames[Math.floor(Math.random() * alertNames.length)],\r\n    roomId: String(index + 1),\r\n    roomName: rooms[Math.floor(Math.random() * rooms.length)],\r\n    alertLifetime: `${Math.floor(Math.random() * 10)}m ${Math.floor(\r\n      Math.random() * 60\r\n    )}s`,\r\n    time: new Date().toLocaleString(),\r\n    alertDescription: `${\r\n      alertNames[Math.floor(Math.random() * alertNames.length)]\r\n    } in the ${rooms[Math.floor(Math.random() * rooms.length)]}`,\r\n    status: \"Active\",\r\n    isAlert: isAlert[Math.floor(Math.random() * isAlert.length)],\r\n    address: \"123 Main St, Anytown, USA\",\r\n    coordinates: {\r\n      latitude: 37.7749 + (Math.random() - 0.5) * 0.01,\r\n      longitude: -122.4194 + (Math.random() - 0.5) * 0.01,\r\n    },\r\n    //for close alert\r\n    closedAt: new Date().toLocaleString(),\r\n    closedBy: names[Math.floor(Math.random() * names.length)],\r\n    //for event\r\n    eventName: eventNames[Math.floor(Math.random() * eventNames.length)],\r\n    disabilityType:\r\n      disabilityTypes[Math.floor(Math.random() * disabilityTypes.length)],\r\n    additionalInfo: \"This is additional info for event\",\r\n    hospital: {\r\n      name: \"Hospital For Special Surgery\",\r\n      phone: \"1234567890\",\r\n      latitude: -33.8743612,\r\n      longitude: 151.2261153,\r\n    },\r\n    allergies: allergies[Math.floor(Math.random() * allergies.length)],\r\n    diseases: diseases[Math.floor(Math.random() * diseases.length)],\r\n    medications: medications[Math.floor(Math.random() * medications.length)],\r\n    activeAlert: activeAlert[Math.floor(Math.random() * activeAlert.length)],\r\n    alertComments: \"This is alert comments\",\r\n    alertLifespan: [\r\n      {\r\n        dateTime: \"24-01-2024 10:00 AM\",\r\n        description: \"At 10:00 AM, the alert was created\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:30 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on the incident in 10:30 (30mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:32 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Call Elderly” in 10:32 (2mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:34 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Call 911” in 10:34 (2mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:36 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Close Alert” in 10:36 (2mins later)\",\r\n      },\r\n    ],\r\n  }));\r\n};\r\nexport const alerts = generateRandomAlerts(14);\r\nexport const activeAlertsTableData = generateRandomAlerts(20);\r\nexport const recentlyClosedAlertsTableData = generateRandomAlerts(20);\r\nexport const eventsTableData = generateRandomAlerts(20);\r\nexport const elderlyListTableData = generateRandomAlerts(20);\r\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport AlertCloseModal from \"@/Components/ActiveAlerts/AlertCloseModal\";\r\nimport AlertBG from \"@/assets/AlertBGABS.svg\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  getAlertType,\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertInfoViaEvent,\r\n  getAlertsGroup,\r\n} from \"@/utils/helper\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ActiveAlertsCards({\r\n  refreshAlertList,\r\n  isElderlyVisible = false,\r\n}) {\r\n  const [openAlertCloseModal, setOpenAlertCloseModal] = useState(false);\r\n  const [selectedAlert, setSelectedAlert] = useState(null);\r\n  const [alertList, setAlertList] = useState([]);\r\n  const PRIORITY_GROUPS = [\"Critical\", \"Warning\"];\r\n  const navigate = useNavigate();\r\n\r\n  const getAlertListData = useCallback(async () => {\r\n    let allAlerts = [];\r\n    let remainingCount = 30;\r\n\r\n    for (const group of PRIORITY_GROUPS) {\r\n      if (remainingCount <= 0) break;\r\n\r\n      const groupParams = getAlertsGroup(group);\r\n      if (!groupParams) continue;\r\n\r\n      try {\r\n        const response = await getAlertList({\r\n          to_date: \"2024-11-30\",\r\n          from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n          is_resolved: false,\r\n          limit: remainingCount,\r\n          ...groupParams,\r\n        });\r\n\r\n        const fetchedAlerts = response.data || [];\r\n        allAlerts = [...allAlerts, ...fetchedAlerts];\r\n        remainingCount -= fetchedAlerts.length;\r\n\r\n        if (remainingCount <= 0) break;\r\n      } catch (err) {\r\n        console.error(`Error fetching ${group} alerts:`, err);\r\n      }\r\n    }\r\n\r\n    setAlertList(allAlerts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAlertListData();\r\n\r\n    const interval = setInterval(() => {\r\n      getAlertListData();\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [getAlertListData]);\r\n\r\n  const settings = {\r\n    dots: alertList.length >= 2,\r\n    infinite: alertList.length > 2,\r\n    speed: 500,\r\n    slidesToShow: alertList.length === 1 ? 1 : 2,\r\n    slidesToScroll: 1,\r\n    draggable: true,\r\n    arrows: false,\r\n    appendDots: (dots) => (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          borderRadius: \"10px\",\r\n          padding: \"2px\",\r\n        }}\r\n      >\r\n        <ul id=\"dots\" style={{ margin: \"0px\" }}>\r\n          {dots}\r\n        </ul>\r\n      </div>\r\n    ),\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: alertList.length === 1 ? 1 : 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 800,\r\n        settings: { slidesToShow: 1, slidesToScroll: 1 },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleViewClick = (row) => {\r\n    window.scrollTo(0, 0);\r\n    navigate(\r\n      `/supporter/elderlies/elderly-profile/${row.elderly_id}?tab=overview`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alertList.length > 0 && (\r\n        <div\r\n          id=\"ActiveAlertsCards\"\r\n          className=\"w-full mb-2 transition-all duration-300\"\r\n        >\r\n          <Slider {...settings} className=\"w-full transition-all duration-300\">\r\n            {alertList.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"px-2 overflow-hidden transition-all duration-300 relative w-full\"\r\n              >\r\n                <div\r\n                  id=\"alertItem\"\r\n                  className={`rounded-2xl overflow-hidden w-full ${\r\n                    getAlertInfoViaEvent(item)?.label === \"Critical\"\r\n                      ? \"bg-red-500\"\r\n                      : getAlertInfoViaEvent(item)?.label === \"Warning\"\r\n                      ? \"bg-yellow-500\"\r\n                      : \"bg-blue-500\"\r\n                  } p-4 w-full flex justify-between items-center`}\r\n                >\r\n                  <div id=\"leftSide\" className=\"z-50\">\r\n                    <div id=\"alertItemHeader\">\r\n                      <div\r\n                        id=\"alertItemTitleAndDescription\"\r\n                        className=\"flex flex-col gap-6\"\r\n                      >\r\n                        <div id=\"time\" className=\"flex gap-2\">\r\n                          {isElderlyVisible && (\r\n                            <span\r\n                              onClick={() => handleViewClick(item)}\r\n                              className=\"bg-white font-semibold p-1 px-2 pl-1 rounded-full text-text-primary flex items-center gap-2 cursor-pointer hover:opacity-90\"\r\n                            >\r\n                              <FaUserCircle\r\n                                size={22}\r\n                                style={{ opacity: \"0.8\" }}\r\n                              />\r\n                              {item?.elderly_name}\r\n                            </span>\r\n                          )}\r\n                          <span className=\"bg-white font-semibold p-1 px-2 rounded-full text-text-primary flex items-center gap-2\">\r\n                            <div\r\n                              id=\"dot\"\r\n                              className={`w-2 h-2 ${\r\n                                getAlertInfoViaEvent(item)?.label === \"Critical\"\r\n                                  ? \"bg-red-500\"\r\n                                  : getAlertInfoViaEvent(item)?.label ===\r\n                                    \"Warning\"\r\n                                  ? \"bg-yellow-500\"\r\n                                  : \"bg-blue-500\"\r\n                              } rounded-full animate-ping`}\r\n                            ></div>\r\n                            {transformDateAndTime(item.created_at)}\r\n                          </span>\r\n                          <span className=\"bg-white font-semibold p-1 px-2 rounded-full text-text-primary\">\r\n                            <AutoUpdatingDuration date={item.created_at} />\r\n                          </span>\r\n                        </div>\r\n                        <div id=\"alertItemTitleAndDescription\">\r\n                          <h1 className=\"text-xl font-bold text-white m-0\">\r\n                            {getAlertInfoViaEvent(item)?.title}\r\n                          </h1>\r\n                          <p className=\"text-white text-base m-0 leading-none\">\r\n                            {getAlertInfoViaEvent(item)?.message}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div id=\"rightSide\" className=\"z-50 w-fit\">\r\n                    <span\r\n                      onClick={() => {\r\n                        setSelectedAlert(item);\r\n                        setOpenAlertCloseModal(true);\r\n                      }}\r\n                      className=\"text-sm p-2 px-3 bg-white rounded-xl text-text-primary cursor-pointer hover:bg-white/90 transition-all duration-300 text-nowrap\"\r\n                    >\r\n                      Mark as Complete\r\n                    </span>\r\n                  </div>\r\n                  <img\r\n                    src={AlertBG}\r\n                    alt=\"\"\r\n                    className=\"absolute top-0 right-0\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        </div>\r\n      )}\r\n      <AlertCloseModal\r\n        openAlertCloseModal={openAlertCloseModal}\r\n        setOpenAlertCloseModal={setOpenAlertCloseModal}\r\n        selectedAlert={selectedAlert}\r\n        getAlertListDatas={() => {\r\n          getAlertListData();\r\n          refreshAlertList();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport WeeklyPicker from \"@/Components/WeeklyPicker/WeeklyPicker\";\r\nimport MultiLineChart from \"../../Components/3xLineChart/MultiLineChart\";\r\nimport { getAlertsOverviewGraph } from \"@/api/elderlySupport\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function AlertsOverview() {\r\n  const [fromDate, setFromDate] = useState(\r\n    dayjs().subtract(6, \"days\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\r\n  const [overviewData, setoverviewData] = useState([]);\r\n  const getAlersOverview = useCallback(() => {\r\n    getAlertsOverviewGraph({\r\n      from_date: toDate,\r\n      to_date: fromDate,\r\n    })\r\n      .then((res) => {\r\n        setoverviewData(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [toDate]);\r\n  useEffect(() => {\r\n    getAlersOverview();\r\n  }, [getAlersOverview]);\r\n\r\n  function handleWeeklyMonthly(e) {\r\n    if (e) {\r\n      setFromDate(e.start);\r\n      setToDate(e.end);\r\n    } else {\r\n      setFromDate(dayjs().subtract(6, \"days\").format(\"YYYY-MM-DD\"));\r\n      setToDate(dayjs().format(\"YYYY-MM-DD\"));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n        <h1 className=\"text-[24px] font-bold\">Overview</h1>\r\n        <div id=\"chartController\" className=\"flex gap-4\">\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                fontFamily: \"Baloo2\",\r\n                colorPrimary: \"#8086AC\",\r\n                colorLinkActive: \"#8086AC\",\r\n                colorLinkHover: \"#8086AC\",\r\n                colorLink: \"#8086AC\",\r\n              },\r\n            }}\r\n          >\r\n            <WeeklyPicker\r\n              style={{ height: \"fit-content\" }}\r\n              handleChange={(e) => handleWeeklyMonthly(e)}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full h-full\">\r\n        <MultiLineChart\r\n          data={overviewData}\r\n          fromDate={fromDate}\r\n          toDate={toDate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["MultiLineChart","data","fromDate","toDate","structuredData","days","current","dayjs","day","critical","item","sum","warning","problem","option","jsx","ReactEcharts","Empty","customParseFormat","weekOfYear","WeeklyMonthlyPicker","placeholder","style","handleChange","value","placeholderText","setPlaceholderText","useState","formatWeek","start","end","displayFormat","useEffect","currentWeek","selectedWeek","DatePicker","selectedDate","formatted","useAlertTableColumns","type","rolesFormatter","useContext","SidebarContext","navigate","useNavigate","handleViewClick","row","alertColsMapping","AlertsTableColumns","AlertName","_a","getAlertInfoViaEvent","text","transformDateAndTime","calculateDurationBetweenTimes","AutoUpdatingDuration","jsxs","LargeTextViewerModal","Table","LuEye","ActionManu","alertTableColumns","setAlertTableColumns","cols","col","generateRandomAlerts","count","alertTypes","rooms","names","alertNames","eventNames","disabilityTypes","allergies","diseases","medications","activeAlert","isAlert","_","index","ActiveAlertsCards","refreshAlertList","isElderlyVisible","openAlertCloseModal","setOpenAlertCloseModal","selectedAlert","setSelectedAlert","alertList","setAlertList","PRIORITY_GROUPS","getAlertListData","useCallback","allAlerts","remainingCount","group","groupParams","getAlertsGroup","fetchedAlerts","getAlertList","err","interval","settings","dots","Fragment","Slider","_b","FaUserCircle","_c","_d","_e","_f","AlertBG","AlertCloseModal","AlertsOverview","setFromDate","setToDate","overviewData","setoverviewData","getAlersOverview","getAlertsOverviewGraph","res","handleWeeklyMonthly","ConfigProvider","WeeklyPicker"],"mappings":"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"}