{"version":3,"file":"index-RH_7oLnu.js","sources":["../../src/Pages/Supportnursing/components/salesOverviewChart.jsx","../../src/Pages/Supportnursing/components/totalSalesChart.jsx","../../src/Pages/Supportnursing/components/barChart.jsx","../../src/Pages/Supportnursing/components/barChartByGender.jsx","../../src/Pages/Supportnursing/components/pieChart.jsx","../../src/Pages/Supportnursing/count-utiles.jsx","../../src/Pages/Supportnursing/components/totalAlertChart.jsx","../../src/Pages/Supportnursing/components/bubbleChart.jsx","../../src/Pages/Supportnursing/Dashboards/MonitoringStation.jsx","../../src/Pages/Supportnursing/utiles.jsx","../../src/Pages/Supportnursing/Dashboards/Installer.jsx","../../src/Pages/Supportnursing/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function SalesOverviewChart({ data = [] }) {\r\n  // Extract _id (dates) and total_orders\r\n  const datesArray = data.map((item) => item._id);\r\n  const totalOrdersArray = data.map((item) => item.total_orders);\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"10%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: datesArray,\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        data: totalOrdersArray,\r\n        type: \"line\",\r\n        symbol: \"circle\",\r\n        symbolSize: 10,\r\n        itemStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1, // Gradient from top (y=0) to bottom (y=1)\r\n            colorStops: [\r\n              { offset: 0, color: \"rgba(67, 121, 238, 0.5)\" }, // Top: Transparent\r\n              { offset: 1, color: \"rgba(255, 255, 255, 0) \" }, // Bottom: Blue with 50% opacity\r\n            ],\r\n          },\r\n        },\r\n\r\n        lineStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n      },\r\n    ],\r\n    graphic:\r\n      totalOrdersArray.length === 0\r\n        ? {\r\n            type: \"text\",\r\n            left: \"center\",\r\n            top: \"middle\",\r\n            style: {\r\n              text: \"No Data Available\",\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              fill: \"#999\", // color of the text\r\n            },\r\n          }\r\n        : null,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function TotalSalesChart({ data = [], chartFor = \"\" }) {\r\n  const totalValue = data.reduce((sum, item) => sum + item.total_orders, 0);\r\n  const [colorMapping, setColorMapping] = useState({});\r\n  const propertyNamesMapping = {\r\n    completed: \"Completed\",\r\n    pending: \"In Progress\",\r\n    cancelled: \"Cancelled\",\r\n    not_started: \"Not Started\",\r\n  };\r\n  useEffect(() => {\r\n    if (chartFor === \"totalSales\") {\r\n      setColorMapping({\r\n        completed: \"#4379EE\",\r\n        pending: \"#F1963A\",\r\n        cancelled: \"#D90000\",\r\n      });\r\n    } else if (chartFor === \"totalInstallations\") {\r\n      setColorMapping({\r\n        completed: \"#36b610\",\r\n        pending: \"#833af1\",\r\n        not_started: \"#5d5d5d\",\r\n      });\r\n    }\r\n  }, [chartFor]);\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"0%\",\r\n      top: \"0%\",\r\n      containLabel: true,\r\n    },\r\n    // color: Object.values(colorMapping),\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"40%\", \"70%\"],\r\n        avoidLabelOverlap: false,\r\n        itemStyle: {\r\n          borderRadius: 10,\r\n          borderColor: \"#fff\",\r\n          borderWidth: 2,\r\n        },\r\n        label: {\r\n          show: false,\r\n          position: \"center\",\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: false,\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n        },\r\n        data: data.map((item) => ({\r\n          value: item.total_orders,\r\n          name: propertyNamesMapping[item.property_name] || \"Unknown Status\",\r\n          itemStyle: {\r\n            color: colorMapping[item.property_name],\r\n          },\r\n        })),\r\n      },\r\n    ],\r\n    graphic: {\r\n      elements: [\r\n        {\r\n          type: \"text\",\r\n          id: \"center-total-text\",\r\n          left: \"center\",\r\n          top: \"53%\",\r\n          style: {\r\n            text: \"Total\",\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 16,\r\n          },\r\n        },\r\n        {\r\n          type: \"text\",\r\n          id: \"center-value-text\",\r\n          left: \"center\",\r\n          top: \"45%\",\r\n          style: {\r\n            text: totalValue,\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 22,\r\n            fontWeight: \"bold\",\r\n          },\r\n          // Position the value text slightly below the center\r\n          position: [0, 50], // Adjust the 20 value to control the vertical spacing\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"340px\", height: \"340px\" }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\n\r\nexport default function BarChart({ data = [], graphTitle }) {\r\n  const yAxisData = data.map(\r\n    (item) => item.property_name || item.elderly_name || \"Unknown\"\r\n  );\r\n  const seriesData = data.map((item) => item.total_orders || item.count);\r\n  const option = {\r\n    xAxis: {\r\n      max: \"dataMax\",\r\n    },\r\n    tooltip: {},\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"10%\",\r\n      top: \"5%\",\r\n      containLabel: true,\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      data: yAxisData,\r\n      inverse: true,\r\n      animationDuration: 300,\r\n      animationDurationUpdate: 300,\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"inside\",\r\n        yAxisIndex: 0,\r\n        start: 0,\r\n        end: 100,\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: graphTitle,\r\n        type: \"bar\",\r\n        // stack:'total',\r\n        data: seriesData,\r\n        itemStyle: {\r\n          color: \"#4379EE\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          valueAnimation: true,\r\n        },\r\n        barWidth: seriesData.length < 5 ? 30 : \"auto\",\r\n      },\r\n    ],\r\n    label: {\r\n      show: true,\r\n      // formatter: \"{c}\", // Format to show dollar sign before the value\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    graphic:\r\n      seriesData.length === 0\r\n        ? {\r\n            type: \"text\",\r\n            left: \"center\",\r\n            top: \"middle\",\r\n            style: {\r\n              text: \"No Data Available\",\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              fill: \"#999\", // color of the text\r\n            },\r\n          }\r\n        : null,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={option}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function BarChartByGender({ data = [], chartFor }) {\r\n  const [options, setOptions] = useState({});\r\n  useEffect(() => {\r\n    if (data.length === 0) {\r\n      setOptions({\r\n        graphic: {\r\n          type: \"text\",\r\n          left: \"center\",\r\n          top: \"middle\",\r\n          style: {\r\n            text: \"No Data Available\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            fill: \"#999\",\r\n          },\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Default X-Axis for Age Chart\r\n    const defaultAgeXAxis = [\r\n      \"20-29\",\r\n      \"30-39\",\r\n      \"40-49\",\r\n      \"50-59\",\r\n      \"60-69\",\r\n      \"70-79\",\r\n      \"80-89\",\r\n      \"90-99\",\r\n    ];\r\n\r\n    // Prepare X-Axis and Y-Axis Data\r\n    const xAxisData =\r\n      chartFor === \"age\" ? defaultAgeXAxis : data.map((item) => item._id);\r\n    const yAxisData = [\r\n      {\r\n        name: \"Male\",\r\n        type: \"bar\",\r\n        color: \"#357AF6\",\r\n        data: xAxisData.map((range) => {\r\n          const found = data.find((item) => item._id === range);\r\n          return found ? found.male_count : 0;\r\n        }),\r\n      },\r\n      {\r\n        name: \"Female\",\r\n        type: \"bar\",\r\n        color: \"#5CC8BE\",\r\n        data: xAxisData.map((range) => {\r\n          const found = data.find((item) => item._id === range);\r\n          return found ? found.female_count : 0;\r\n        }),\r\n      },\r\n    ];\r\n    const maxValue = Math.max(...yAxisData.flatMap((item) => item.data));\r\n\r\n    // Define chart options dynamically\r\n    const newOptions = {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: { type: \"shadow\" },\r\n      },\r\n      legend: {\r\n        show: true,\r\n        top: 0,\r\n        data: [\"Male\", \"Female\"],\r\n      },\r\n      grid: {\r\n        left: chartFor === \"age\" ? \"0%\" : \"5%\",\r\n        right: \"0%\",\r\n        bottom: \"10%\",\r\n        top: \"10%\",\r\n        containLabel: true,\r\n      },\r\n      series: yAxisData, // Series is the same for both chart types\r\n    };\r\n\r\n    if (chartFor === \"age\") {\r\n      newOptions.xAxis = {\r\n        type: \"category\",\r\n        data: xAxisData,\r\n      };\r\n      newOptions.yAxis = {\r\n        type: \"value\",\r\n        boundaryGap: [0, 0.01],\r\n        min: 0,\r\n        max: maxValue,\r\n        interval: 1,\r\n        axisLabel: {\r\n          formatter: (value) => {\r\n            // Display integer values only\r\n            return Math.floor(value);\r\n          },\r\n        },\r\n      };\r\n    } else if (chartFor === \"diseases\") {\r\n      newOptions.yAxis = {\r\n        type: \"category\",\r\n        data: xAxisData,\r\n      };\r\n      newOptions.xAxis = {\r\n        type: \"value\",\r\n        boundaryGap: [0, 0.01],\r\n        min: 0,\r\n        max: maxValue,\r\n        interval: 1,\r\n        axisLabel: {\r\n          formatter: (value) => {\r\n            // Display integer values only\r\n            return Math.floor(value);\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    setOptions(newOptions);\r\n  }, [data.length]);\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={options}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport \"echarts/lib/chart/lines\";\r\nimport \"echarts/lib/chart/bar\";\r\nimport grid from \"antd/es/grid\";\r\n\r\nexport default function PieChart({ data = [], chartFor }) {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let datForChart = data?.map((item) => {\r\n      if (chartFor === \"device\") {\r\n        const colorMap = {\r\n          completed: \"#08A1F7\", // Changed to hex code for green\r\n          pending: \"#922BF2\", // Changed to hex code for gray\r\n          not_started: \"#FF3B11\",\r\n        };\r\n\r\n        const colors = data.map((item) => colorMap[item._id]);\r\n\r\n        const newOptions = {\r\n          ...options,\r\n          color: colors,\r\n        };\r\n\r\n        setOptions(newOptions);\r\n        const nameMap = {\r\n          not_started: \"Not Started\",\r\n          completed: \"Completed\",\r\n          pending: \"Pending\",\r\n        };\r\n        return {\r\n          value: item.count,\r\n          name: nameMap[item._id] || item._id,\r\n        };\r\n      } else {\r\n        return {\r\n          value: item.male_count + item.female_count,\r\n          name:\r\n            item._id === \"male\"\r\n              ? \"Male\"\r\n              : item._id === \"fe-male\"\r\n              ? \"Female\"\r\n              : null,\r\n        };\r\n      }\r\n    });\r\n    setChartData(datForChart);\r\n  }, [data]);\r\n\r\n  const [options, setOptions] = useState({\r\n    title: {},\r\n    tooltip: {\r\n      trigger: \"item\",\r\n    },\r\n\r\n    legend: { show: false },\r\n    labelLine: {\r\n      show: false,\r\n    },\r\n    color: [\"#4379EE\", \"#5CC8BE\", \"#243642\", \"#BC7C7C\"],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newOptions = { ...options };\r\n    if (chartFor == \"gender\") {\r\n      newOptions.series = [\r\n        {\r\n          type: \"pie\",\r\n          radius: \"50%\",\r\n          data: chartData,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n        },\r\n      ];\r\n    } else if (chartFor == \"device\") {\r\n      newOptions.series = [\r\n        {\r\n          type: \"pie\",\r\n          radius: \"50%\",\r\n          data: chartData,\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n        },\r\n      ];\r\n    }\r\n    setOptions(newOptions);\r\n  }, [chartFor, chartData]);\r\n\r\n  return (\r\n    <ReactEcharts\r\n      notMerge={true}\r\n      option={options}\r\n      style={{ width: \"340px\", height: \"340px\" }}\r\n    />\r\n  );\r\n}\r\n","import { FiUser } from \"react-icons/fi\";\r\nimport { MdOutlineRealEstateAgent } from \"react-icons/md\";\r\nimport { MdOutlineSupportAgent } from \"react-icons/md\";\r\nimport { RiPhoneFindLine } from \"react-icons/ri\";\r\nimport { MdOutlineAddHome } from \"react-icons/md\";\r\nimport { IoLogoAppleAr } from \"react-icons/io5\";\r\nimport { MdOutlineElderly } from \"react-icons/md\";\r\nimport { PiBuildingOffice } from \"react-icons/pi\";\r\nimport { BiDevices } from \"react-icons/bi\";\r\n\r\nexport const CountMapping = [\r\n  {\r\n    role: \"monitoring_station\",\r\n    label: \"Monitoring Station\",\r\n    color: \"#EA5A92\",\r\n    icon: RiPhoneFindLine,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"supports_agent\",\r\n    label: \"Support Agent\",\r\n    color: \"#17C3A5\",\r\n    icon: MdOutlineSupportAgent,\r\n    rolesAllowed: [\"supports_agent\", \"monitoring_station\"],\r\n  },\r\n  {\r\n    role: \"nursing_home\",\r\n    label: \"Nursing Home\",\r\n    color: \"#5096F6\",\r\n    icon: MdOutlineAddHome,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"distributor\",\r\n    label: \"Distributor\",\r\n    color: \"#FA8035\",\r\n    icon: IoLogoAppleAr,\r\n    rolesAllowed: [],\r\n  },\r\n  {\r\n    role: \"sales_agent\",\r\n    label: \"Sales Agent\",\r\n    color: \"#D188E1\",\r\n    icon: MdOutlineRealEstateAgent,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"end_user\",\r\n    label: \"End User\",\r\n    color: \"#7DBBE2\",\r\n    icon: FiUser,\r\n    rolesAllowed: [\"sales_agent\", \"distributor\", \"office\"],\r\n  },\r\n  {\r\n    role: \"installer\",\r\n    label: \"Installer\",\r\n    color: \"#7695FF\",\r\n    icon: FiUser,\r\n    rolesAllowed: [\"monitoring_station\", \"office\", \"sales_agent\"],\r\n  },\r\n  {\r\n    role: \"elderly\",\r\n    label: \"Elderly\",\r\n    color: \"#FF885B\",\r\n    icon: MdOutlineElderly,\r\n    rolesAllowed: [\"monitoring_station\"],\r\n  },\r\n  {\r\n    role: \"office\",\r\n    label: \"Office\",\r\n    color: \"#FF885B\",\r\n    icon: PiBuildingOffice,\r\n    rolesAllowed: [\"\"],\r\n  },\r\n  {\r\n    role: \"device\",\r\n    label: \"Device\",\r\n    color: \"#FF885B\",\r\n    icon: BiDevices,\r\n    rolesAllowed: [],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nexport default function TotalAlertChart({ data = [] }) {\r\n  // Calculate counts for each type\r\n  const problemCount = data\r\n    .filter((item) => item.type === 1)\r\n    .reduce((acc, curr) => acc + curr.count, 0);\r\n  const warningCount = data\r\n    .filter((item) => item.type === 2)\r\n    .reduce((acc, curr) => acc + curr.count, 0);\r\n  const criticalCount = data\r\n    .filter((item) => item.type === 3)\r\n    .reduce((acc, curr) => acc + curr.count, 0);\r\n\r\n  // Prepare data for the pie chart\r\n  const pieData = [\r\n    { value: problemCount, name: \"Info\" },\r\n    { value: warningCount, name: \"Warning\" },\r\n    { value: criticalCount, name: \"Critical\" },\r\n  ];\r\n\r\n  // Calculate the total value\r\n  const totalValue = pieData.reduce((sum, item) => sum + item.value, 0);\r\n\r\n  // ECharts option configuration\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n    },\r\n    color: [\"#4379EE\", \"#F1963A\", \"#D90000\"],\r\n    series: [\r\n      {\r\n        name: \"Activity\",\r\n        type: \"pie\",\r\n        radius: [\"40%\", \"70%\"],\r\n        avoidLabelOverlap: false,\r\n        itemStyle: {\r\n          borderRadius: 10,\r\n          borderColor: \"#fff\",\r\n          borderWidth: 2,\r\n        },\r\n        label: {\r\n          show: false,\r\n          formatter: \"{b}: {c} ({d}%)\",\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: false,\r\n            fontSize: 18,\r\n            fontWeight: \"bold\",\r\n          },\r\n        },\r\n        data: data.length !== 0 ? pieData : null,\r\n      },\r\n    ],\r\n    graphic: {\r\n      elements: [\r\n        {\r\n          type: \"text\",\r\n          left: \"center\",\r\n          top: \"53%\",\r\n          style: {\r\n            text: \"Total\",\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 16,\r\n          },\r\n        },\r\n        {\r\n          type: \"text\",\r\n          left: \"center\",\r\n          top: \"45%\",\r\n          style: {\r\n            text: totalValue.toString(),\r\n            textAlign: \"center\",\r\n            fill: \"#333\",\r\n            fontSize: 22,\r\n            fontWeight: \"bold\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts option={option} style={{ width: \"340px\", height: \"340px\" }} />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nconst BubbleChart = ({ data = [] }) => {\r\n  const hasData = data.length > 0;\r\n\r\n  const option = {\r\n    title: {},\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      textStyle: {\r\n        color: \"#333\", // Text color\r\n        fontSize: 16,\r\n        fontFamily: \"Arial, sans-serif\",\r\n      },\r\n      formatter: function (params) {\r\n        return `\r\n            <div style=\"padding: 5px; text-align: left;\">\r\n              <div><strong>Activity:</strong> ${params.data[0]}</div>\r\n              <div><strong>Count:</strong> ${params.data[1]}</div>\r\n            </div>\r\n          `;\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"2%\",\r\n      right: \"0%\",\r\n      bottom: \"30%\",\r\n      top: \"12%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      axisLabel: {\r\n        show: false, // Hide x-axis labels\r\n      },\r\n      axisLine: {\r\n        show: false, // Hide x-axis line\r\n      },\r\n      axisTick: {\r\n        show: false, // Hide x-axis ticks\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      name: \"Count\",\r\n      nameLocation: \"center\",\r\n      nameGap: 40,\r\n      scale: true, // Enables dynamic scaling for the y-axis\r\n      splitLine: {\r\n        show: false, // Optional: Hide grid lines for a cleaner look\r\n      },\r\n    },\r\n    dataZoom: hasData\r\n      ? [\r\n          {\r\n            type: \"inside\", // Enables scrolling and zooming\r\n            start: 0,\r\n            end: 100,\r\n          },\r\n          {\r\n            type: \"slider\",\r\n            start: 0,\r\n            end: 100,\r\n          },\r\n        ]\r\n      : [], // No zoom bar if there's no data\r\n    series: hasData\r\n      ? [\r\n          {\r\n            type: \"scatter\",\r\n            symbolSize: function (value) {\r\n              // Dynamic bubble size with an upper limit for large datasets\r\n              return Math.min(Math.sqrt(value[1]) * 5, 40);\r\n            },\r\n            data: data.map((item) => [item.property_name, item.count]),\r\n            label: {\r\n              show: false, // Turn off bubble labels for large datasets\r\n            },\r\n            itemStyle: {\r\n              color: \"rgba(67, 121, 238, 0.8)\", // Semi-transparent shade\r\n            },\r\n          },\r\n        ]\r\n      : [],\r\n  };\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"w-full h-full flex items-center justify-center\">\r\n        {\" \"}\r\n        <span className=\"text-[#999999] font-semibold text-xl\">\r\n          {\" \"}\r\n          No Data Available\r\n        </span>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ReactECharts\r\n      option={option}\r\n      style={{ height: \"370px\", width: \"100%\" }}\r\n      opts={{ renderer: \"canvas\" }} // Ensures canvas-based rendering for responsiveness\r\n    />\r\n  );\r\n};\r\n\r\nexport default BubbleChart;\r\n","import React from \"react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport BarChartByGender from \"../components/barChartByGender\";\r\nimport PieChart from \"../components/pieChart\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport TotalAlertChart from \"../components/totalAlertChart\";\r\nimport BarChart from \"../components/barChart\";\r\nimport {\r\n  getChartByGender,\r\n  getChartByAge,\r\n  getDiseasesCountByGender,\r\n} from \"@/api/Dashboard\";\r\nimport BubbleChart from \"../components/bubbleChart\";\r\nexport default function MonitoringStation({\r\n  count,\r\n  chartByAge = [],\r\n  chartByGender = [],\r\n  diseasesCountByGender = [],\r\n  alertsCountByName = [],\r\n  alertsCountByElderly = [],\r\n}) {\r\n  // const [chartByGender, setChartByGender] = useState([]);\r\n  // const [chartByAge, setChartByAge] = useState([]);\r\n  // const [diseasesCountByGender, setDiseasesCountByGender] = useState([]);\r\n  // //Chart by gender (male and female)\r\n  // const ChartByGender = useCallback(() => {\r\n  //   getChartByGender()\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setChartByGender(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  // //chart by age with range\r\n  // const ChartByAge = useCallback(() => {\r\n  //   getChartByAge()\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setChartByAge(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  // //Diseses count by gender\r\n  // const DiseasesCountByGender = useCallback(() => {\r\n  //   getDiseasesCountByGender()\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       setDiseasesCountByGender(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   ChartByGender();\r\n  //   ChartByAge();\r\n  //   DiseasesCountByGender();\r\n  // }, []);\r\n  console.log(chartByAge);\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col gap-6 pt-6\">\r\n      <div className=\"flex gap-6 lg:flex-row flex-col h-fit\">\r\n        <div className=\"rounded-2xl lg:w-[75%] w-full flex flex-col gap-6 h-full\">\r\n          <div id=\"Reports\" className=\"w-full rounded-2xl flex flex-col gap-6\">\r\n            <div\r\n              id=\"Cards\"\r\n              className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3\"\r\n            >\r\n              {count?.map((item, key) => {\r\n                let IconName = item.icon;\r\n                return (\r\n                  <div\r\n                    key={key}\r\n                    id=\"Card\"\r\n                    style={{ backgroundColor: item?.color }}\r\n                    className=\"cursor-pointer group flex w-full items-center p-4 py-6 text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n                  >\r\n                    <div\r\n                      id=\"circle\"\r\n                      className=\"w-[100px] h-[100px] bg-white/20 absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out\"\r\n                    ></div>\r\n                    <div\r\n                      id=\"circle\"\r\n                      className=\"w-[100px] h-[100px] bg-white/10 absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out\"\r\n                    ></div>\r\n                    <div className=\"bg-opacity-10 h-fit rounded-[8px] p-2 bg-black/20\">\r\n                      {IconName && <IconName color=\"#fff\" size={20} />}\r\n                    </div>\r\n                    <div className=\"flex flex-col items-start\">\r\n                      <h1 className=\"text-[26px] font-semibold leading-none\">\r\n                        {item.count || 0}\r\n                      </h1>\r\n                      <span className=\"text-[14px] font-medium text-white/70 leading-none\">\r\n                        {item.label}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {[1, 2, 3].map((item, key) => (\r\n              <div\r\n                key={key}\r\n                id=\"Card\"\r\n                className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#0F60FF] text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n              >\r\n                <div\r\n                  id=\"circle\"\r\n                  className=\"w-[100px] h-[100px] bg-white/20 absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out\"\r\n                ></div>\r\n                <div\r\n                  id=\"circle\"\r\n                  className=\"w-[100px] h-[100px] bg-white/10 absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out\"\r\n                ></div>\r\n                <div className=\"bg-opacity-10 h-fit rounded-[8px] p-2 bg-black/20\">\r\n                  <FiUser color=\"#fff\" size={20} />\r\n                </div>\r\n                <div className=\"flex flex-col items-start\">\r\n                  <h1 className=\"text-[26px] font-semibold leading-none\">\r\n                    1.6k\r\n                  </h1>\r\n                  <span className=\"text-[14px] font-medium text-white/70 leading-none\">\r\n                    Customers\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))} */}\r\n            </div>\r\n          </div>\r\n          <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\">\r\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n              <h1 className=\"text-[24px] font-bold\">Ages</h1>\r\n            </div>\r\n            <BarChartByGender\r\n              // data={\r\n              //   chartByAge.length > 0\r\n              //     ? chartByAge\r\n              //     : [\r\n              //         {\r\n              //           _id: \"20-29\",\r\n              //           male_count: 4,\r\n              //           female_count: 0,\r\n              //         },\r\n              //         {\r\n              //           _id: \"70-79\",\r\n              //           male_count: 0,\r\n              //           female_count: 2,\r\n              //         },\r\n              //         {\r\n              //           _id: \"90-99\",\r\n              //           male_count: 1,\r\n              //           female_count: 1,\r\n              //         },\r\n              //       ]\r\n              // }\r\n              data={chartByGender}\r\n              chartFor=\"age\"\r\n            />\r\n          </div>\r\n          <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\">\r\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n              <h1 className=\"text-[24px] font-bold\">Diseases</h1>\r\n            </div>\r\n            <BarChartByGender\r\n              // data={\r\n              //   diseasesCountByGender.length > 0\r\n              //     ? diseasesCountByGender\r\n              //     : [\r\n              //         {\r\n              //           _id: \"Diabetes5\",\r\n              //           male_count: 0,\r\n              //           female_count: 1,\r\n              //         },\r\n              //         {\r\n              //           _id: \"Hypertension5\",\r\n              //           male_count: 0,\r\n              //           female_count: 1,\r\n              //         },\r\n              //       ]\r\n              // }\r\n              data={diseasesCountByGender}\r\n              chartFor=\"diseases\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rounded-2xl lg:w-[35%] w-full flex flex-col gap-6 h-full\">\r\n          <div className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\">\r\n            <div>\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Gender</h1>\r\n              </div>\r\n              <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                <PieChart\r\n                  // data={\r\n                  //   chartByGender.length > 0\r\n                  //     ? chartByGender\r\n                  //     : [\r\n                  //         {\r\n                  //           _id: \"fe-male\",\r\n                  //           male_count: 0,\r\n                  //           female_count: 3,\r\n                  //         },\r\n                  //         {\r\n                  //           _id: \"male\",\r\n                  //           male_count: 5,\r\n                  //           female_count: 0,\r\n                  //         },\r\n                  //       ]\r\n                  // }\r\n                  data={chartByAge}\r\n                  chartFor=\"gender\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Total</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {chartByAge.reduce(\r\n                    (acc, item) => acc + item.male_count + item.female_count,\r\n                    0\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Male</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {chartByAge.map((item) =>\r\n                    item._id === \"male\" ? item.male_count || 0 : 0\r\n                  )}\r\n                  {chartByAge.length === 0 && <>0</>}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#5CC8BE] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Female</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {\" \"}\r\n                  {chartByAge.map((item) =>\r\n                    item._id === \"female\" ? item.male_count || 0 : 0\r\n                  )}\r\n                  {chartByAge.length === 0 && <>0</>}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\">\r\n            <div>\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Activity</h1>\r\n                <div id=\"chartController\" className=\"flex gap-4\"></div>\r\n              </div>\r\n              <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                <TotalAlertChart data={alertsCountByName} />\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Info</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {alertsCountByName\r\n                    .filter((item) => item.type === 1)\r\n                    .reduce((acc, curr) => acc + curr.count, 0)}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#F1963A] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Warning</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {alertsCountByName\r\n                    .filter((item) => item.type === 2)\r\n                    .reduce((acc, curr) => acc + curr.count, 0)}\r\n                </span>\r\n              </div>\r\n              <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <div className=\"w-[12px] h-[12px] bg-[#D90000] rounded-full\"></div>\r\n                  <span className=\"text-lg font-medium\">Critical</span>\r\n                </div>\r\n                <span className=\"text-lg font-semibold\">\r\n                  {alertsCountByName\r\n                    .filter((item) => item.type === 3)\r\n                    .reduce((acc, curr) => acc + curr.count, 0)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full flex gap-6 xl:flex-row flex-col h-[500px] justify-between\">\r\n        <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\">\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">Most Alerts</h1>\r\n          </div>\r\n          <BarChart data={alertsCountByElderly} />\r\n        </div>\r\n        <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\">\r\n          <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">Activity Count</h1>\r\n          </div>\r\n          <BubbleChart data={alertsCountByName} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Tag } from \"antd\";\r\nimport ReportActionModal from \"@/Components/ReportActionModal/ReportActionModal\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { ConfigProvider, Select } from \"antd\";\r\nimport { updateInstallationStatus } from \"@/api/ordersManage\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nfunction StatusDropdown({ row }) {\r\n  const sharedMethod = useContext(SidebarContext);\r\n  const [status, setStatus] = useState(row?.installation_status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    setStatus(value);\r\n    sethandleLoading(true);\r\n    updateInstallationStatus(row?._id, {\r\n      installation_status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        sharedMethod.getInstallationList.getCompletedandToBeInstalled();\r\n        sharedMethod.getInstallationList.getDeviceSalesCounts();\r\n        if (res) {\r\n          setStatus(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setStatus(row?.installation_status);\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.installation_status);\r\n  }, [row?.installation_status]);\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status === \"completed\"\r\n            ? \"bg-[#1EB564]\"\r\n            : status === \"pending\"\r\n            ? \"bg-yellow-500\"\r\n            : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      {/* Status select dropdown */}\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: \"completed\", label: <span>Complete</span> },\r\n            { value: \"pending\", label: <span>Pending</span> },\r\n            { value: \"not_started\", label: <span>Not Started</span> },\r\n          ]}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\nconst dealDetailCol = [\r\n  {\r\n    title: \"Office Identifier\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.office_name}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Agent Name (ID Number)\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.agent_name} ({row.agent_unique_id})\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Date of Sales\",\r\n    render: (row) => {\r\n      const formattedDate = new Date(row.created_at).toLocaleDateString(\r\n        \"en-CA\"\r\n      );\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {formattedDate}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  // {\r\n  //   title: \"Approval Date\",\r\n  //   render: (row) => (\r\n  //     <button>\r\n  //       <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n  //         {row.approvalDate}\r\n  //       </span>\r\n  //     </button>\r\n  //   ),\r\n  // },\r\n  {\r\n    title: \"Product Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\r\n              indx < 2 && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter((item, indx, self) => {\r\n              const isUniqueSeenyorKit =\r\n                item.type === \"Seenyor Kit\" &&\r\n                self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\r\n              return (\r\n                !/^AI Sensor/.test(item.type) &&\r\n                (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\r\n              );\r\n            })\r\n            .map((item, indx) => {\r\n              const color =\r\n                item.type === \"Seenyor Kit\"\r\n                  ? \"blue\"\r\n                  : item.type === \"Installation\"\r\n                  ? \"orange\"\r\n                  : \"default\";\r\n              return (\r\n                <Tag key={indx} color={color}>\r\n                  {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\r\n                </Tag>\r\n              );\r\n            })}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Product Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n          $\r\n          {row.products\r\n            .filter((item) =>\r\n              [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              )\r\n            )\r\n            .reduce((total, item) => total + item.price, 0)\r\n            .toFixed(2)}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter(\r\n              (item) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                )\r\n            )\r\n            .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\r\n          0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products\r\n              .filter(\r\n                (item) =>\r\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                    item.type\r\n                  )\r\n              )\r\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.products\r\n            .map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n            .filter(Boolean).length === 0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products.map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Total Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          ${row.total.toFixed(2)}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.address?.line1},{\" \"}\r\n          {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\r\n          {row.address?.city}, {row.address?.state},{\" \"}\r\n          {row.address ? row.address.postal_code : \" \"}, {row.address?.country}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    dataIndex: \"payment_status\",\r\n    key: \"payment_status\",\r\n    filters: [\r\n      { text: \"Pending\", value: \"pending\" },\r\n      { text: \"Cancelled\", value: \"cancelled\" },\r\n      { text: \"Completed\", value: \"completed\" },\r\n    ],\r\n    filterMultiple: true,\r\n    onFilter: (value, record) => record.payment_status.includes(value),\r\n    render: (status, record) => {\r\n      let color = \"\";\r\n\r\n      switch (status) {\r\n        case \"pending\":\r\n          color = \"orange\";\r\n          break;\r\n        case \"cancelled\":\r\n          color = \"red\";\r\n          break;\r\n        case \"completed\":\r\n          color = \"green\";\r\n          break;\r\n        default:\r\n          color = \"black\";\r\n      }\r\n\r\n      return (\r\n        <span\r\n          style={{\r\n            backgroundColor: color,\r\n            color: \"white\",\r\n            padding: \"4px 8px\",\r\n            borderRadius: \"4px\",\r\n            fontWeight: 500,\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {status}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst installation = [\r\n  {\r\n    title: \"Installation Status\",\r\n    render: (row) => <StatusDropdown row={row} />,\r\n  },\r\n  {\r\n    title: \"Report\",\r\n    render: (row) => (\r\n      <div className=\"flex justify-center\">\r\n        <ReportActionModal report={row} />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Product Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\r\n              indx < 2 && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter((item, indx, self) => {\r\n              const isUniqueSeenyorKit =\r\n                item.type === \"Seenyor Kit\" &&\r\n                self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\r\n              return (\r\n                !/^AI Sensor/.test(item.type) &&\r\n                (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\r\n              );\r\n            })\r\n            .map((item, indx) => {\r\n              const color =\r\n                item.type === \"Seenyor Kit\"\r\n                  ? \"blue\"\r\n                  : item.type === \"Installation\"\r\n                  ? \"orange\"\r\n                  : \"default\";\r\n              return (\r\n                <Tag key={indx} color={color}>\r\n                  {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\r\n                </Tag>\r\n              );\r\n            })}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Product Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n          $\r\n          {row.products\r\n            .filter((item) =>\r\n              [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              )\r\n            )\r\n            .reduce((total, item) => total + item.price, 0)\r\n            .toFixed(2)}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Name\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\r\n          {/* {row.products.map(\r\n            (item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) && <span key={indx}>{item.type}</span>\r\n          )} */}\r\n          {row.products\r\n            .filter(\r\n              (item) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                )\r\n            )\r\n            .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\r\n          0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products\r\n              .filter(\r\n                (item) =>\r\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                    item.type\r\n                  )\r\n              )\r\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Addon Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.products\r\n            .map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n            .filter(Boolean).length === 0 ? (\r\n            <span>--</span>\r\n          ) : (\r\n            row.products.map((item, indx) =>\r\n              ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                item.type\r\n              ) ? (\r\n                <span key={indx}>${item.price.toFixed(2)}</span>\r\n              ) : null\r\n            )\r\n          )}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Total Price\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          ${row.total}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Date of Sales\",\r\n    render: (row) => {\r\n      const formattedDate = new Date(row.created_at).toLocaleDateString(\r\n        \"en-CA\"\r\n      );\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {formattedDate}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n          {row.address?.line1},{\" \"}\r\n          {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\r\n          {row.address?.city}, {row.address?.state},{\" \"}\r\n          {row.address ? row.address.postal_code : \" \"}, {row.address?.country}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Payment Status\",\r\n    dataIndex: \"payment_status\",\r\n    key: \"payment_status\",\r\n    filters: [\r\n      { text: \"Completed\", value: \"completed\" },\r\n      { text: \"Pending\", value: \"pending\" },\r\n      { text: \"Cancelled\", value: \"cancelled\" },\r\n    ],\r\n    filterMultiple: true,\r\n    onFilter: (value, record) => record.payment_status.includes(value),\r\n    render: (status) => {\r\n      let color = \"\";\r\n\r\n      switch (status) {\r\n        case \"completed\":\r\n          color = \"green\";\r\n          break;\r\n        case \"pending\":\r\n          color = \"orange\";\r\n          break;\r\n        case \"cancelled\":\r\n          color = \"red\";\r\n          break;\r\n        default:\r\n          color = \"black\";\r\n      }\r\n\r\n      return (\r\n        <span\r\n          style={{\r\n            backgroundColor: color,\r\n            color: \"white\",\r\n            padding: \"4px 8px\",\r\n            borderRadius: \"4px\",\r\n            fontWeight: 500,\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {status}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\n// Export both arrays\r\nexport { dealDetailCol, installation };\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport PieChart from \"../components/pieChart\";\r\nimport MapLocat from \"../components/map\";\r\nimport { ConfigProvider, Table } from \"antd\";\r\nimport { installation } from \"../utiles\";\r\nimport { getInstallationList } from \"../../../api/ordersManage\";\r\nimport { getDeviceSalesCount } from \"@/api/Dashboard\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { useRefContext } from \"@/Context/RefContext\";\r\n\r\nexport default function InstallerDashboard() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, SetPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [installationList, setInstallationList] = useState([]);\r\n  const [completedInstallationList, setCompletedInstallationList] = useState(\r\n    []\r\n  );\r\n  const [deviceSalesCount, setDeviceSalesCount] = useState([]);\r\n  function getList(query) {\r\n    // setLoading(true);\r\n    setLoading(true);\r\n    getInstallationList(query)\r\n      .then((res) => {\r\n        setInstallationList(res.data);\r\n        setTotal(res.total);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getDeviceSalesCounts = useCallback(() => {\r\n    getDeviceSalesCount()\r\n      .then((res) => {\r\n        setDeviceSalesCount(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [page]);\r\n  const getCompletedandToBeInstalled = useCallback(() => {\r\n    getList({ installation_status: \"completed\", ne: true, page: page });\r\n  }, [page]);\r\n  useEffect(() => {\r\n    getCompletedandToBeInstalled();\r\n  }, [getCompletedandToBeInstalled]);\r\n  useEffect(() => {\r\n    getDeviceSalesCounts();\r\n  }, [getDeviceSalesCounts]);\r\n  const { registerRef } = useRefContext();\r\n\r\n  const stepsRef = {\r\n    step1: useRef(null),\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(stepsRef).forEach((key) => {\r\n      if (stepsRef[key].current) {\r\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\r\n      }\r\n    });\r\n  }, [registerRef]);\r\n  return (\r\n    <div className=\"flex flex-col gap-6 pt-6\">\r\n      <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\r\n        {/* <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[500px]\">\r\n          <MapLocat />\r\n        </div> */}\r\n        <div\r\n          id=\"NewInstallation\"\r\n          className=\"p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-full\"\r\n        >\r\n          <div\r\n            id=\"ChartHeader\"\r\n            className=\"w-full flex justify-between mb-8\"\r\n            ref={stepsRef.step1}\r\n          >\r\n            <h1 className=\"text-[24px] font-bold\">To Be Installed</h1>\r\n            <div id=\"chartController\" className=\"flex gap-4\"></div>\r\n          </div>\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                fontFamily: \"Baloo2\",\r\n                colorPrimary: \"#8086AC\",\r\n                colorLinkActive: \"#8086AC\",\r\n                colorLinkHover: \"#8086AC\",\r\n                colorLink: \"#8086AC\",\r\n              },\r\n            }}\r\n          >\r\n            <SidebarContext.Provider\r\n              value={{\r\n                getInstallationList: {\r\n                  getCompletedandToBeInstalled,\r\n                  getDeviceSalesCounts,\r\n                },\r\n                total: total,\r\n                page,\r\n                SetPage,\r\n              }}\r\n            >\r\n              <CustomTable\r\n                loading={loading}\r\n                scroll={{ x: 750 }}\r\n                columns={installation}\r\n                tableData={installationList}\r\n              />\r\n            </SidebarContext.Provider>\r\n          </ConfigProvider>\r\n        </div>\r\n        <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full\">\r\n          <div>\r\n            <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n              <h1 className=\"text-[24px] font-bold\">Device Installed</h1>\r\n            </div>\r\n            <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n              <PieChart data={deviceSalesCount} chartFor=\"device\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n            {[\"completed\", \"pending\", \"not_started\"].map((status, index) => {\r\n              const item = deviceSalesCount.find(\r\n                (item) => item._id === status\r\n              ) || { _id: status, count: 0 };\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  id=\"InfoItem\"\r\n                  className=\"w-full flex justify-between\"\r\n                >\r\n                  <div className=\"flex gap-2 items-center\">\r\n                    <div\r\n                      className={`w-[12px] h-[12px] ${\r\n                        item._id === \"completed\"\r\n                          ? \"bg-[#08A1F7]\"\r\n                          : item._id === \"pending\"\r\n                          ? \"bg-[#922BF2]\"\r\n                          : \"bg-[#FF3B11]\"\r\n                      } rounded-full`}\r\n                    ></div>\r\n                    <span className=\"text-lg font-medium capitalize\">\r\n                      {item._id === \"completed\"\r\n                        ? \"Completed\"\r\n                        : item._id === \"pending\"\r\n                        ? \"Pending\"\r\n                        : \"Not Started\"}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"text-lg font-semibold\">{item.count}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div\r\n        id=\"TotalInstallation\"\r\n        className=\" p-[25px] rounded-2xl  bg-white w-full h-full \"\r\n      >\r\n        <div id=\"ChartHeader\" className=\"w-full flex justify-between mb-8\">\r\n          <h1 className=\"text-[24px] font-bold\">Total Installation</h1>\r\n          <div id=\"chartController\" className=\"flex gap-4\"></div>\r\n        </div>\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              fontFamily: \"Baloo2\",\r\n              colorPrimary: \"#8086AC\",\r\n              colorLinkActive: \"#8086AC\",\r\n              colorLinkHover: \"#8086AC\",\r\n              colorLink: \"#8086AC\",\r\n            },\r\n          }}\r\n        >\r\n          <SidebarContext.Provider\r\n            value={{\r\n              getInstallationList: {\r\n                getCompletedandToBeInstalled,\r\n                getDeviceSalesCounts,\r\n              },\r\n              total: total,\r\n              page,\r\n              SetPage,\r\n            }}\r\n          >\r\n            <CustomTable\r\n              loading={loading}\r\n              scroll={{ x: 750 }}\r\n              columns={installation}\r\n              tableData={completedInstallationList}\r\n            />\r\n          </SidebarContext.Provider>\r\n        </ConfigProvider>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport { DatePicker, Select, ConfigProvider, Tour } from \"antd\";\r\nimport ls from \"store2\";\r\nimport \"./style.css\";\r\nimport SalesOverviewChart from \"./components/salesOverviewChart\";\r\nimport TotalSalesChart from \"./components/totalSalesChart\";\r\nimport BarChart from \"./components/barChart\";\r\nimport BarChartByGender from \"./components/barChartByGender\";\r\nimport PieChart from \"./components/pieChart\";\r\nimport {\r\n  getUsersCount,\r\n  getSalesData,\r\n  getSalesOverview,\r\n  getDealDetails,\r\n  getChartByAge,\r\n} from \"@/api/Dashboard\";\r\nimport { getAllCity } from \"@/api/ordersManage\";\r\nimport { getUser } from \"@/api/Users\";\r\nconst { RangePicker } = DatePicker;\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { CountMapping } from \"./count-utiles\";\r\nimport MonitoringStation from \"./Dashboards/MonitoringStation\";\r\nimport InstallerDashboard from \"./Dashboards/Installer\";\r\nimport WeeklyMonthlyPicker from \"@/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker\";\r\nimport {\r\n  getChartByGender,\r\n  getDiseasesCountByGender,\r\n  getAlertsCountByElderly,\r\n  getAlertsCountByName,\r\n} from \"@/api/Dashboard\";\r\nimport { getAlertInfoViaEvent } from \"@/utils/helper\";\r\nimport BubbleChart from \"./components/bubbleChart\";\r\nimport { RefProvider } from \"@/Context/RefContext\";\r\nimport { useRefContext } from \"@/Context/RefContext\";\r\n\r\nconst onOk = (value) => {\r\n  console.log(\"onOk: \", value);\r\n};\r\nconst onChange = (value) => {\r\n  console.log(`selected ${value}`);\r\n};\r\nconst onSearch = (value) => {\r\n  console.log(\"search:\", value);\r\n};\r\nconst AdminDashboardComponent = () => {\r\n  // const { role } = useContext(SidebarContext);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"Overview\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [query, setQuery] = useState({\r\n    current: \"1\",\r\n    size: \"10\",\r\n  });\r\n  const { registerRef } = useRefContext();\r\n\r\n  const [page, setPage] = useState({ page: 1, limit: 10 });\r\n  const [dealLoading, setDealLoading] = useState(false);\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n  const [role, setRole] = useState(ls.get(\"role\"));\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  //Date Controll\r\n  const [fromDate, setFromDate] = useState(null);\r\n  const [toDate, setToDate] = useState(null);\r\n\r\n  //Sales Overview\r\n  const [SOOrderStatus, setSOOrderStatus] = useState(null);\r\n  const [SOAgentId, setSOAgentId] = useState(\"all\");\r\n  //Sales By Agent\r\n  const [SBAOrderStatus, setSBAOrderStatus] = useState(null);\r\n  const [SBAOrderLocation, setSBAOrderLocation] = useState(null);\r\n  //Sales By Location\r\n  const [SBLOrderStatus, setSBLOrderStatus] = useState(null);\r\n  const [SBLAgentId, setSBLAgentId] = useState(null);\r\n  //Sales By PaymentStatus\r\n  const [SBPAgentId, setSBPAgentId] = useState(null);\r\n  //Sales by installation status\r\n  const [SBIAgentId, setSBIAgentId] = useState(null);\r\n  //Deal Details\r\n  const [DDOrderStatus, setDDOrderStatus] = useState(null);\r\n  const [DDAgentId, setDDAgentId] = useState(null);\r\n  // Dashboard Data\r\n  const [office, setOffice] = useState([]);\r\n  const [salesAgent, setSalesAgent] = useState([]);\r\n  const [officeId, setOfficeId] = useState(null);\r\n  const [count, setCount] = useState([]);\r\n  const [salesOverview, setSalesOverview] = useState([]);\r\n  const [salesByAgent, setSalesByAgent] = useState([]);\r\n  const [salesByLocation, setSalesByLocation] = useState([]);\r\n  const [salesByPaymentStatus, setSalesByPaymentStatus] = useState([]);\r\n  const [salesByInstallationStatus, setSalesByInstallationStatus] = useState(\r\n    []\r\n  );\r\n  const [dealDetails, setDealDetails] = useState([]);\r\n  const [officeQuery, setOfficeQuery] = useState({});\r\n  const [agentQuery, setAgentQuery] = useState({});\r\n  const [chartByGender, setChartByGender] = useState([]);\r\n  const [chartByAge, setChartByAge] = useState([]);\r\n  const [diseasesCountByGender, setDiseasesCountByGender] = useState([]);\r\n  const [alertsCountByElderly, setAlertsCountByElderly] = useState([]);\r\n  const [alertsCountByName, setAlertsCountByName] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  //Report Download\r\n  const downloadReport = async () => {\r\n    try {\r\n      if (!dealDetails.data || dealDetails.data.length === 0) {\r\n        throw new Error(\"No data available to download\");\r\n      }\r\n\r\n      const formattedData = dealDetails.data.map((item, index) => {\r\n        console.log(\"DealDetails ===============>\", dealDetails.data);\r\n\r\n        const saleDate = new Date(item.created_at);\r\n        return {\r\n          \"No.\": index + 1,\r\n          \"Office Name\": item.office_name,\r\n          \"Agent ID\": item.agent_unique_id,\r\n          \"Agent Name\": item.agent_name,\r\n          // \"Order Number\": item.order_no,\r\n          \"Sale Date\": saleDate.toLocaleDateString(\"en-CA\"),\r\n          \"Sale Time\": saleDate.toLocaleTimeString(\"en-GB\", {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n\r\n          Products: item.products\r\n            .map((product, idx) => `${idx + 1}. ${product.name}`)\r\n            .join(\"\"),\r\n          \"Extra Product\": item.products\r\n            .map((item, indx) => {\r\n              if (\r\n                item.type !== \"Seenyor Kit\" &&\r\n                item.type !== \"Installation\" &&\r\n                item.type !== \"AI Monitoring\"\r\n              ) {\r\n                return item.type;\r\n              }\r\n            })\r\n            .join(\"\"),\r\n          \"Current Sale Status\": item.saleStatus,\r\n          \"City Location\": item.address?.city || \"N/A\",\r\n        };\r\n      });\r\n\r\n      const worksheet = XLSX.utils.json_to_sheet(formattedData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Sales Report\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const blob = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n\r\n      const fileName = `Sales_Report_${\r\n        new Date().toISOString().split(\"T\")[0]\r\n      }.xlsx`;\r\n      saveAs(blob, fileName);\r\n    } catch (error) {\r\n      console.error(\"Error downloading the sales report:\", error);\r\n      // Here you might want to show an error message to the user\r\n      // For example: message.error(\"Failed to download report. Please try again.\");\r\n    }\r\n  };\r\n  //Chart by gender (male and female)\r\n  const ChartByGender = useCallback(() => {\r\n    getChartByGender()\r\n      .then((res) => {\r\n        setChartByGender(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //chart by age with range\r\n  const ChartByAge = useCallback(() => {\r\n    getChartByAge()\r\n      .then((res) => {\r\n        setChartByAge(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //Diseses count by gender\r\n  const DiseasesCountByGender = useCallback(() => {\r\n    getDiseasesCountByGender()\r\n      .then((res) => {\r\n        setDiseasesCountByGender(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const AlertCountByElderly = useCallback(() => {\r\n    getAlertsCountByElderly()\r\n      .then((res) => {\r\n        setAlertsCountByElderly(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const AlertCountByName = useCallback(() => {\r\n    getAlertsCountByName()\r\n      .then((res) => {\r\n        const filteredData = res.data.map((item) => {\r\n          return {\r\n            property_name: getAlertInfoViaEvent(item)?.title,\r\n            count: item.count,\r\n            type: getAlertInfoViaEvent(item)?.status,\r\n          };\r\n        });\r\n        console.log(filteredData);\r\n\r\n        setAlertsCountByName(filteredData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  //Distributor Reports\r\n  function AllCounts() {\r\n    getUsersCount()\r\n      .then((res) => {\r\n        // Map over CountMapping to ensure every role is represented\r\n        const mergedData = CountMapping.map((config) => {\r\n          // Find if there's data from the API matching the current role\r\n          const apiItem = res.data?.find((item) => item.role === config.role);\r\n\r\n          // If found, use the API count; otherwise, set count to 0\r\n          return {\r\n            ...config,\r\n            count: apiItem ? apiItem.count : 0, // Default to 0 if not found in the API response\r\n          };\r\n        });\r\n\r\n        // Optional: filter based on rolesAllowed for the current user\r\n        const filteredData = mergedData.filter((item) =>\r\n          item.rolesAllowed.includes(user.role)\r\n        );\r\n\r\n        // Set the final filtered data to state\r\n        setCount(filteredData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const SalesOverview = useCallback(\r\n    (agentId, orderStatus) => {\r\n      getSalesOverview({\r\n        office_id: officeQuery.office_id,\r\n        agent_id: agentId,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          console.log(\"sales Overview\", res);\r\n\r\n          setSalesOverview(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SOAgentId, SOOrderStatus, officeQuery.office_id, toDate]\r\n  );\r\n\r\n  const SalesByAgent = useCallback(\r\n    (city, orderStatus) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"agent_name\",\r\n        city: city,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          setSalesByAgent(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBAOrderLocation, SBAOrderStatus, officeQuery.office_id, toDate]\r\n  );\r\n  const SalesByLocation = useCallback(\r\n    (agentId, orderStatus) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"location\",\r\n        payment_status: orderStatus,\r\n        agent_id: agentId,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          setSalesByLocation(res.data);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBLAgentId, SBLOrderStatus, officeQuery.office_id, toDate]\r\n  );\r\n\r\n  const SalesByPaymentStatus = useCallback(\r\n    (agentId) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"payment_status\",\r\n        agent_id: agentId,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          setSalesByPaymentStatus(res.data);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBPAgentId, officeQuery.office_id, toDate]\r\n  );\r\n  const SalesByInstallationStatus = useCallback(\r\n    (agentId) => {\r\n      getSalesData({\r\n        ...officeQuery,\r\n        total_sales_by: \"installation_status\",\r\n        agent_id: agentId,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          setSalesByInstallationStatus(res.data);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [SBIAgentId, officeQuery.office_id, toDate]\r\n  );\r\n  const DealDetails = useCallback(\r\n    (agentId, orderStatus) => {\r\n      setDealLoading(true);\r\n      getDealDetails({\r\n        ...page,\r\n        ...officeQuery,\r\n        agent_id: agentId,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n\r\n          setDealDetails(res);\r\n          setDealLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [DDOrderStatus, DDAgentId, officeQuery.office_id, toDate, page]\r\n  );\r\n\r\n  //All Graph Controller Handle Functions\r\n  useEffect(() => {\r\n    SalesOverview(\r\n      SOAgentId === \"all\" ? null : SOAgentId,\r\n      SOOrderStatus === \"all\" ? null : SOOrderStatus\r\n    );\r\n  }, [SalesOverview]);\r\n  useEffect(() => {\r\n    SalesByAgent(\r\n      SBAOrderLocation === \"all\" ? null : SBAOrderLocation,\r\n      SBAOrderStatus === \"all\" ? null : SBAOrderStatus\r\n    );\r\n  }, [SalesByAgent]);\r\n  useEffect(() => {\r\n    SalesByLocation(\r\n      SBLAgentId === \"all\" ? null : SBLAgentId,\r\n      SBLOrderStatus === \"all\" ? null : SBLOrderStatus\r\n    );\r\n  }, [SalesByLocation]);\r\n  useEffect(() => {\r\n    SalesByPaymentStatus(SBPAgentId === \"all\" ? null : SBPAgentId);\r\n  }, [SalesByPaymentStatus]);\r\n  useEffect(() => {\r\n    SalesByInstallationStatus(SBIAgentId === \"all\" ? null : SBIAgentId);\r\n  }, [SalesByInstallationStatus]);\r\n  useEffect(() => {\r\n    DealDetails(\r\n      DDAgentId === \"all\" ? null : DDAgentId,\r\n      DDOrderStatus === \"all\" ? null : DDOrderStatus\r\n    );\r\n  }, [DealDetails]);\r\n\r\n  useEffect(() => {\r\n    if (!officeId) return;\r\n    if (officeId === \"all\") {\r\n      if (officeQuery.office_id) {\r\n        const newQuery = { ...officeQuery };\r\n        delete newQuery.office_id;\r\n        setOfficeQuery(newQuery);\r\n      }\r\n    } else {\r\n      setOfficeQuery((prevQuery) => ({\r\n        ...prevQuery,\r\n        office_id: officeId,\r\n      }));\r\n      // Reset other states if needed\r\n      setSBPAgentId(\"all\");\r\n      setSBIAgentId(\"all\");\r\n      setSBLAgentId(\"all\");\r\n      setSOAgentId(\"all\");\r\n    }\r\n  }, [officeId]);\r\n\r\n  //Weekly, Monthly and  Date Picker Handler\r\n  function handleWeeklyMonthly(e) {\r\n    console.log(e);\r\n    setFromDate(e.start);\r\n    setToDate(e.end);\r\n  }\r\n  function handleDatePicker(e) {\r\n    setFromDate(e[0]);\r\n    setToDate(e[1]);\r\n  }\r\n\r\n  function getAllOffice() {\r\n    getUser({ role: \"office\" })\r\n      .then((res) => {\r\n        setOffice(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function getAllAgent() {\r\n    console.log(\"called agent get list!\", agentQuery);\r\n\r\n    getUser({ ...officeQuery, role: \"sales_agent\" })\r\n      .then((res) => {\r\n        setSalesAgent(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function getAllCities() {\r\n    getAllCity({ ...officeQuery })\r\n      .then((res) => {\r\n        setCity(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const stepsRef = {\r\n    officeDropdown: useRef(null),\r\n    datePicker: useRef(null),\r\n    usersCount: useRef(null),\r\n    totalSales: useRef(null),\r\n    totalInstallations: useRef(null),\r\n    salesOverview: useRef(null),\r\n    salesByAgent: useRef(null),\r\n    salesByLocation: useRef(null),\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(stepsRef).forEach((key) => {\r\n      if (stepsRef[key].current) {\r\n        registerRef(\"tour_step_\" + key, stepsRef[key]);\r\n      }\r\n    });\r\n  }, [registerRef]);\r\n\r\n  useEffect(() => {\r\n    AllCounts();\r\n    getAllOffice();\r\n\r\n    if (user.role === \"nursing_home\" || user.role === \"monitoring_station\") {\r\n      ChartByGender();\r\n      ChartByAge();\r\n      DiseasesCountByGender();\r\n      AlertCountByElderly();\r\n      AlertCountByName();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllAgent();\r\n    getAllCities();\r\n  }, [officeQuery]);\r\n  return (\r\n    <div className=\"\">\r\n      {/* Tamplete for w-1/3 w-2/3 */}\r\n      {/* <div className=\"w-full flex  gap-6 lg:flex-row flex-col\">\r\n            <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[65%] w-full  h-[445px]\"></div>\r\n            <div className=\" p-[25px] rounded-2xl  bg-white lg:w-[35%] w-full  h-[445px]\"></div>\r\n          </div> */}\r\n      {/* Tamplete for w-1/2 w-1/2 */}\r\n      {/* <div className=\"w-full flex gap-6 xl:flex-row flex-col\">\r\n            <div className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"></div>\r\n            <div className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"></div>\r\n          </div> */}\r\n\r\n      {/* This code for Distributor , Sales Agent , Office Dashboard */}\r\n      {(user.role == \"distributor\" ||\r\n        user.role == \"office\" ||\r\n        user.role == \"sales_agent\") && (\r\n        <div className=\"pt-[29px] flex flex-col w-full gap-6 pb-10\">\r\n          <div\r\n            id=\"Distributor_Dash_Top\"\r\n            className=\"flex justify-between w-full mb-5 flex-wrap gap-5\"\r\n          >\r\n            <ConfigProvider\r\n              theme={{\r\n                token: {\r\n                  fontFamily: \"Baloo2\",\r\n                  colorPrimary: \"#8086AC\",\r\n                  colorLinkActive: \"#8086AC\",\r\n                  colorLinkHover: \"#8086AC\",\r\n                  colorLink: \"#8086AC\",\r\n                },\r\n              }}\r\n            >\r\n              {user.role == \"office\" ? (\r\n                <div className=\"p-2 px-4 rounded-lg text-[36px] font-bold  text-primary\">\r\n                  {user.office}\r\n                </div>\r\n              ) : user.role == \"sales_agent\" ? null : (\r\n                <div ref={stepsRef.officeDropdown}>\r\n                  <Select\r\n                    showSearch\r\n                    optionFilterProp=\"label\"\r\n                    onChange={(e) => setOfficeId(e.value)}\r\n                    onSearch={onSearch}\r\n                    defaultValue={\"all\"}\r\n                    size=\"large\"\r\n                    className=\"custom-select\"\r\n                    labelInValue={true}\r\n                    options={[\r\n                      {\r\n                        value: \"all\",\r\n                        label: (\r\n                          <>\r\n                            All Offices{\" \"}\r\n                            <span className=\"highlighted-number\">\r\n                              {office.length}\r\n                            </span>\r\n                          </>\r\n                        ), // Number of options included here\r\n                      },\r\n                      ...office.map((office) => ({\r\n                        value: office._id,\r\n                        label: office.name,\r\n                      })),\r\n                    ]}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div\r\n                id=\"DatePickers\"\r\n                className=\"flex gap-4 items-center\"\r\n                ref={stepsRef.datePicker}\r\n              >\r\n                <WeeklyMonthlyPicker\r\n                  placeholder={\"Weekly/Monthly\"}\r\n                  style={{ width: \"140px\", borderRadius: \"10px\" }}\r\n                  handleChnage={handleWeeklyMonthly}\r\n                />\r\n                <RangePicker\r\n                  showTime={false}\r\n                  style={{ width: \"200px\", borderRadius: \"10px\" }}\r\n                  size=\"large\"\r\n                  placeholder={[\"Pick Data Range (Start)\", \"End\"]}\r\n                  format=\"YYYY-MM-DD\"\r\n                  onChange={(value, dateString) => {\r\n                    handleDatePicker(dateString);\r\n                  }}\r\n                  onOk={onOk}\r\n                />\r\n                {/* <CustomButton\r\n                  disabled={dealDetails?.data?.length <= 0}\r\n                  onClick={downloadReport}\r\n                  type=\"text\"\r\n                >\r\n                  Download\r\n                </CustomButton> */}\r\n              </div>\r\n            </ConfigProvider>\r\n          </div>\r\n\r\n          <div\r\n            id=\"Reports\"\r\n            className=\"w-full rounded-2xl bg-transparent flex flex-col gap-6\"\r\n            ref={stepsRef.usersCount}\r\n          >\r\n            <div\r\n              id=\"Cards\"\r\n              className=\"grid gap-5 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5\"\r\n            >\r\n              {count?.map((item, key) => {\r\n                let IconName = item.icon;\r\n                return (\r\n                  <div\r\n                    key={key}\r\n                    id=\"Card\"\r\n                    className=\"cursor-pointer group flex w-full items-center p-4 py-6 bg-[#fff] text-white gap-3 rounded-[12px] relative overflow-hidden\"\r\n                  >\r\n                    <div\r\n                      id=\"circle\"\r\n                      style={{ backgroundColor: item.color, opacity: \"0.9\" }}\r\n                      className={`w-[100px] h-[100px] absolute -right-11 -top-14 rounded-full group-hover:-right-5 group-hover:-top-[75px] transition-all duration-200 ease-in-out`}\r\n                    ></div>\r\n                    <div\r\n                      id=\"circle\"\r\n                      style={{ backgroundColor: item.color, opacity: \"0.2\" }}\r\n                      className={`w-[100px] h-[100px] absolute -right-3 -top-[70px] rounded-full group-hover:-right-[50px] group-hover:-top-[45px] transition-all duration-200 ease-in-out`}\r\n                    ></div>\r\n                    <div\r\n                      style={{ backgroundColor: `${item.color}15` }}\r\n                      className=\"h-fit rounded-[8px] p-2\"\r\n                    >\r\n                      {IconName && (\r\n                        <IconName style={{ color: item?.color }} size={20} />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex flex-col items-start\">\r\n                      <h1 className=\"text-[26px] font-semibold leading-none text-text-primary\">\r\n                        {item.count}\r\n                      </h1>\r\n                      <span className=\"text-[14px] font-medium text-text-primary/70 leading-none\">\r\n                        {item.label}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"SalesOverview&Total\" className=\"w-full flex  gap-6 flex-col\">\r\n            <div className=\"w-full flex gap-6\">\r\n              <div\r\n                className=\" p-[25px] rounded-2xl  bg-white lg:w-[50%] w-full  h-[445px]\"\r\n                ref={stepsRef.totalSales}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Total Sales</h1>\r\n                  <div id=\"chartController\" className=\"flex gap-4\">\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <ConfigProvider\r\n                        theme={{\r\n                          token: {\r\n                            fontFamily: \"Baloo2\",\r\n                            colorPrimary: \"#8086AC\",\r\n                            colorLinkActive: \"#8086AC\",\r\n                            colorLinkHover: \"#8086AC\",\r\n                            colorLink: \"#8086AC\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          optionFilterProp=\"label\"\r\n                          onChange={(e) => setSBPAgentId(e.value)}\r\n                          onSearch={onSearch}\r\n                          defaultValue={\"all\"}\r\n                          size=\"large\"\r\n                          style={{ maxWidth: 150, zIndex: \"400\" }}\r\n                          labelInValue={true}\r\n                          options={[\r\n                            {\r\n                              value: \"all\",\r\n                              label: \"All Agents\",\r\n                            },\r\n                            ...salesAgent.map((agent) => ({\r\n                              value: agent._id,\r\n                              label: agent.name + \" \" + agent.last_name,\r\n                            })),\r\n                          ]}\r\n                        />\r\n                      </ConfigProvider>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                  <TotalSalesChart\r\n                    data={salesByPaymentStatus}\r\n                    chartFor=\"totalSales\"\r\n                  />\r\n                </div>\r\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n                  {[\"completed\", \"pending\", \"cancelled\"].map((statusName) => {\r\n                    const status = salesByPaymentStatus.find(\r\n                      (item) => item.property_name === statusName\r\n                    ) || { property_name: statusName, total_orders: 0 };\r\n\r\n                    let bgColor;\r\n                    let label;\r\n\r\n                    switch (status.property_name) {\r\n                      case \"completed\":\r\n                        bgColor = \"#4379EE\";\r\n                        label = \"Completed\";\r\n                        break;\r\n                      case \"pending\":\r\n                        bgColor = \"#F1963A\";\r\n                        label = \"Pending\";\r\n                        break;\r\n                      case \"cancelled\":\r\n                        bgColor = \"#D90000\";\r\n                        label = \"Cancelled\";\r\n                        break;\r\n                      default:\r\n                        bgColor = \"#000000\"; // Default color if needed\r\n                        label = \"Unknown\";\r\n                    }\r\n\r\n                    return (\r\n                      <div\r\n                        key={status.property_name}\r\n                        id=\"InfoItem\"\r\n                        className=\"w-full flex justify-between\"\r\n                      >\r\n                        <div className=\"flex gap-2 items-center\">\r\n                          <div\r\n                            className={`w-[12px] h-[12px] rounded-full`}\r\n                            style={{ backgroundColor: bgColor }}\r\n                          ></div>\r\n                          <span className=\"text-lg font-medium\">{label}</span>\r\n                        </div>\r\n                        <span className=\"text-lg font-semibold\">\r\n                          {status.total_orders}\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\" p-[25px] rounded-2xl  bg-white lg:w-[50%] w-full  h-[445px]\"\r\n                ref={stepsRef.totalInstallations}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Total Installations</h1>\r\n                  <div id=\"chartController\" className=\"flex gap-4\">\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <ConfigProvider\r\n                        theme={{\r\n                          token: {\r\n                            fontFamily: \"Baloo2\",\r\n                            colorPrimary: \"#8086AC\",\r\n                            colorLinkActive: \"#8086AC\",\r\n                            colorLinkHover: \"#8086AC\",\r\n                            colorLink: \"#8086AC\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          optionFilterProp=\"label\"\r\n                          onChange={(e) => setSBIAgentId(e.value)}\r\n                          onSearch={onSearch}\r\n                          defaultValue={\"all\"}\r\n                          size=\"large\"\r\n                          style={{ maxWidth: 150, zIndex: \"400\" }}\r\n                          labelInValue={true}\r\n                          options={[\r\n                            {\r\n                              value: \"all\",\r\n                              label: \"All Agents\",\r\n                            },\r\n                            ...salesAgent.map((agent) => ({\r\n                              value: agent._id,\r\n                              label: agent.name + \" \" + agent.last_name,\r\n                            })),\r\n                          ]}\r\n                        />\r\n                      </ConfigProvider>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                  <TotalSalesChart\r\n                    data={salesByInstallationStatus}\r\n                    chartFor=\"totalInstallations\"\r\n                  />\r\n                </div>\r\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n                  {[\"completed\", \"pending\", \"not_started\"].map((statusName) => {\r\n                    const status = salesByInstallationStatus.find(\r\n                      (item) => item.property_name === statusName\r\n                    ) || { property_name: statusName, total_orders: 0 };\r\n\r\n                    let bgColor;\r\n                    let label;\r\n\r\n                    switch (status.property_name) {\r\n                      case \"completed\":\r\n                        bgColor = \"#36b610\";\r\n                        label = \"Completed\";\r\n                        break;\r\n                      case \"pending\":\r\n                        bgColor = \"#833af1\";\r\n                        label = \"In Progress\";\r\n                        break;\r\n                      case \"not_started\":\r\n                        bgColor = \"#5d5d5d\";\r\n                        label = \"Not Started\";\r\n                        break;\r\n                      default:\r\n                        bgColor = \"#000000\"; // Default color if needed\r\n                        label = \"Unknown\";\r\n                    }\r\n\r\n                    return (\r\n                      <div\r\n                        key={status.property_name}\r\n                        id=\"InfoItem\"\r\n                        className=\"w-full flex justify-between\"\r\n                      >\r\n                        <div className=\"flex gap-2 items-center\">\r\n                          <div\r\n                            className={`w-[12px] h-[12px] rounded-full`}\r\n                            style={{ backgroundColor: bgColor }}\r\n                          ></div>\r\n                          <span className=\"text-lg font-medium\">{label}</span>\r\n                        </div>\r\n                        <span className=\"text-lg font-semibold\">\r\n                          {status.total_orders}\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\" p-[25px] rounded-2xl  bg-white lg:w-[100%] w-full  h-[445px]\"\r\n              ref={stepsRef.salesOverview}\r\n            >\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Sales Overview</h1>\r\n\r\n                <div id=\"chartController\" className=\"flex gap-4\">\r\n                  <ConfigProvider\r\n                    theme={{\r\n                      token: {\r\n                        fontFamily: \"Baloo2\",\r\n                        colorPrimary: \"#8086AC\",\r\n                        colorLinkActive: \"#8086AC\",\r\n                        colorLinkHover: \"#8086AC\",\r\n                        colorLink: \"#8086AC\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Select\r\n                      optionFilterProp=\"label\"\r\n                      onChange={(e) => setSOOrderStatus(e.value)}\r\n                      defaultValue={\"all\"}\r\n                      size=\"large\"\r\n                      labelInValue={true}\r\n                      options={[\r\n                        {\r\n                          value: \"all\",\r\n                          label: \"All Sales\",\r\n                        },\r\n                        {\r\n                          value: \"completed\",\r\n                          label: \"Completed\",\r\n                        },\r\n                        {\r\n                          value: \"pending\",\r\n                          label: \"Pending\",\r\n                        },\r\n                        {\r\n                          value: \"cancelled\",\r\n                          label: \"Cancelled\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <Select\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSOAgentId(e.value)}\r\n                        onSearch={onSearch}\r\n                        value={SOAgentId}\r\n                        defaultValue={\"all\"}\r\n                        size=\"large\"\r\n                        style={{ maxWidth: 150, zIndex: \"400\" }}\r\n                        labelInValue={true}\r\n                        options={[\r\n                          {\r\n                            value: \"all\",\r\n                            label: \"All Agents\",\r\n                          },\r\n                          ...salesAgent.map((agent) => ({\r\n                            value: agent._id,\r\n                            label: agent.name + \" \" + agent.last_name,\r\n                          })),\r\n                        ]}\r\n                      />\r\n                    ) : null}\r\n                  </ConfigProvider>\r\n                </div>\r\n              </div>\r\n              <SalesOverviewChart data={salesOverview} />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            id=\"SalesByLucation&Agents\"\r\n            className=\"w-full flex gap-6 xl:flex-row flex-col\"\r\n          >\r\n            {user.role == \"sales_agent\" ? null : (\r\n              <div\r\n                className=\" p-[25px] rounded-2xl  bg-white w-full h-[445px]\"\r\n                ref={stepsRef.salesByAgent}\r\n              >\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\"> Sales by Agent</h1>\r\n\r\n                  <div id=\"chartController\" className=\"flex gap-4\">\r\n                    <ConfigProvider\r\n                      theme={{\r\n                        token: {\r\n                          fontFamily: \"Baloo2\",\r\n                          colorPrimary: \"#8086AC\",\r\n                          colorLinkActive: \"#8086AC\",\r\n                          colorLinkHover: \"#8086AC\",\r\n                          colorLink: \"#8086AC\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Select\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSBAOrderStatus(e.value)}\r\n                        defaultValue=\"all\"\r\n                        size=\"large\"\r\n                        labelInValue={true}\r\n                        options={[\r\n                          {\r\n                            value: \"all\",\r\n                            label: \"All Sales\",\r\n                          },\r\n                          {\r\n                            value: \"completed\",\r\n                            label: \"Completed\",\r\n                          },\r\n                          {\r\n                            value: \"pending\",\r\n                            label: \"Pending\",\r\n                          },\r\n                          {\r\n                            value: \"cancelled\",\r\n                            label: \"Cancelled\",\r\n                          },\r\n                        ]}\r\n                      />\r\n\r\n                      <Select\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSBAOrderLocation(e.value)}\r\n                        onSearch={onSearch}\r\n                        defaultValue={\"all\"}\r\n                        size=\"large\"\r\n                        //   className=\"custom-select\"\r\n                        labelInValue={true}\r\n                        options={[\r\n                          { value: \"all\", label: \"All Locations\" },\r\n                          ...city.map((item) => ({\r\n                            value: item.city_name,\r\n                            label: item.city_name,\r\n                          })),\r\n                        ]}\r\n                      />\r\n                    </ConfigProvider>\r\n                  </div>\r\n                </div>\r\n                <BarChart data={salesByAgent} graphTitle=\"Sales by Agent\" />\r\n              </div>\r\n            )}\r\n\r\n            <div\r\n              className=\"p-[25px] rounded-2xl  bg-white w-full h-[445px]\"\r\n              ref={stepsRef.salesByLocation}\r\n            >\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Sales by Location</h1>\r\n                <div id=\"chartController\" className=\"flex gap-4\">\r\n                  <ConfigProvider\r\n                    theme={{\r\n                      token: {\r\n                        fontFamily: \"Baloo2\",\r\n                        colorPrimary: \"#8086AC\",\r\n                        colorLinkActive: \"#8086AC\",\r\n                        colorLinkHover: \"#8086AC\",\r\n                        colorLink: \"#8086AC\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Select\r\n                      optionFilterProp=\"label\"\r\n                      onChange={(e) => setSBLOrderStatus(e.value)}\r\n                      defaultValue={\"all\"}\r\n                      size=\"large\"\r\n                      //   className=\"custom-select\"\r\n                      labelInValue={true}\r\n                      options={[\r\n                        {\r\n                          value: \"all\",\r\n                          label: \"All Sales\",\r\n                        },\r\n                        {\r\n                          value: \"completed\",\r\n                          label: \"Completed\",\r\n                        },\r\n                        {\r\n                          value: \"pending\",\r\n                          label: \"Pending\",\r\n                        },\r\n                        {\r\n                          value: \"cancelled\",\r\n                          label: \"Cancelled\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                    {mainRole !== \"sales_agent\" ? (\r\n                      <Select\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        onChange={(e) => setSBLAgentId(e.value)}\r\n                        onSearch={onSearch}\r\n                        defaultValue={\"all\"}\r\n                        size=\"large\"\r\n                        labelInValue={true}\r\n                        options={[\r\n                          {\r\n                            value: \"all\",\r\n                            label: \"All Agents\",\r\n                          },\r\n                          ...salesAgent.map((agent) => ({\r\n                            value: agent._id,\r\n                            label: agent.name + \" \" + agent.last_name,\r\n                          })),\r\n                        ]}\r\n                      />\r\n                    ) : null}\r\n                  </ConfigProvider>\r\n                </div>\r\n              </div>\r\n              <BarChart data={salesByLocation} graphTitle=\"Sales by Location\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* This code For Monitoring Station dashboard  */}\r\n      {user.role == \"monitoring_station\" ? (\r\n        <MonitoringStation\r\n          count={count}\r\n          chartByAge={chartByAge}\r\n          chartByGender={chartByGender}\r\n          diseasesCountByGender={diseasesCountByGender}\r\n          alertsCountByName={alertsCountByName}\r\n          alertsCountByElderly={alertsCountByElderly}\r\n        />\r\n      ) : null}\r\n\r\n      {/* This Code for Installer Dashboard */}\r\n      {role == \"installer\" ? <InstallerDashboard /> : null}\r\n\r\n      {/* This Code for Installer Dashboard */}\r\n      {user.role == \"nursing_home\" ? (\r\n        <div className=\"w-full flex flex-col gap-6 pt-6\">\r\n          <div className=\"w-full flex gap-6 xl:flex-row flex-col h-fit justify-between\">\r\n            <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\">\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Most Alerts</h1>\r\n              </div>\r\n              <BarChart data={alertsCountByElderly} />\r\n            </div>\r\n            <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px]\">\r\n              <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                <h1 className=\"text-[24px] font-bold\">Activity Count</h1>\r\n              </div>\r\n              {/* <BarChart data={alertsCountByName} /> */}\r\n              <BubbleChart data={alertsCountByName} />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-6 lg:flex-row flex-col h-fit\">\r\n            <div className=\"rounded-2xl lg:w-[75%] w-full flex flex-col gap-6 h-full\">\r\n              <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\">\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Ages</h1>\r\n                </div>\r\n                <BarChartByGender chartFor=\"age\" data={chartByGender} />\r\n              </div>\r\n              <div className=\"p-[25px] rounded-2xl bg-white w-full h-[445px] flex-grow\">\r\n                <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                  <h1 className=\"text-[24px] font-bold\">Diseases</h1>\r\n                </div>\r\n                <BarChartByGender\r\n                  chartFor=\"diseases\"\r\n                  data={diseasesCountByGender}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rounded-2xl lg:w-[35%] w-full flex flex-col gap-6 h-full\">\r\n              <div className=\"p-[25px] rounded-2xl bg-white w-full flex flex-col h-[496px] justify-between\">\r\n                <div>\r\n                  <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n                    <h1 className=\"text-[24px] font-bold\">Gender</h1>\r\n                  </div>\r\n                  <div className=\"h-[260px] my-0 mx-auto flex items-center justify-center\">\r\n                    <PieChart data={chartByAge} chartFor=\"gender\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div id=\"ChartInfo\" className=\"w-full flex flex-col gap-2\">\r\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                    <div className=\"flex gap-2 items-center\">\r\n                      <div className=\"w-[12px] h-[12px] bg-text-primary rounded-full\"></div>\r\n                      <span className=\"text-lg font-medium\">Total</span>\r\n                    </div>\r\n                    <span className=\"text-lg font-semibold\">\r\n                      {chartByAge.reduce(\r\n                        (acc, item) =>\r\n                          acc + item.male_count + item.female_count,\r\n                        0\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                    <div className=\"flex gap-2 items-center\">\r\n                      <div className=\"w-[12px] h-[12px] bg-[#4379EE] rounded-full\"></div>\r\n                      <span className=\"text-lg font-medium\">Male</span>\r\n                    </div>\r\n                    <span className=\"text-lg font-semibold\">\r\n                      {chartByAge.map((item) =>\r\n                        item._id === \"male\" ? item.male_count || 0 : 0\r\n                      )}\r\n                      {chartByAge.length === 0 && <>0</>}\r\n                    </span>\r\n                  </div>\r\n                  <div id=\"InfoItem\" className=\"w-full flex justify-between\">\r\n                    <div className=\"flex gap-2 items-center\">\r\n                      <div className=\"w-[12px] h-[12px] bg-[#5CC8BE] rounded-full\"></div>\r\n                      <span className=\"text-lg font-medium\">Female</span>\r\n                    </div>\r\n                    <span className=\"text-lg font-semibold\">\r\n                      {\" \"}\r\n                      {chartByAge.map((item) =>\r\n                        item._id === \"female\" ? item.male_count || 0 : 0\r\n                      )}\r\n                      {chartByAge.length === 0 && <>0</>}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminDashboard = () => {\r\n  const [refsReady, setRefsReady] = useState({});\r\n  const [tourOpen, setTourOpen] = useState(false);\r\n  const [tourSteps, setTourSteps] = useState({});\r\n  const [allRefs, setAllRefs] = useState({});\r\n  const [seenTours, setSeenTours] = useState(() => {\r\n    const saved = ls.get(\"seenToursDash\");\r\n    return saved ? saved : {};\r\n  });\r\n  const userRole = ls.get(\"user\")?.role;\r\n  const user = ls.get(\"user\");\r\n  const handleRefsUpdate = useCallback((refs) => {\r\n    setAllRefs((prevRefs) => {\r\n      if (prevRefs !== refs) {\r\n        // Compare references\r\n        return refs;\r\n      }\r\n      return prevRefs; // No update if refs is the same\r\n    });\r\n    // console.log(refs);\r\n\r\n    // const readyTabs = {};\r\n    // Object.keys(refs).forEach((key) => {\r\n    //   if (key.startsWith(\"tour_\") && refs[key].current) {\r\n    //     const tab = key.split(\"_\")[1];\r\n    //     readyTabs[tab] = true;\r\n    //   }\r\n    // });\r\n\r\n    // setRefsReady((prev) => {\r\n    //   const newReadyTabs = { ...prev, ...readyTabs };\r\n    //   if (JSON.stringify(newReadyTabs) !== JSON.stringify(prev)) {\r\n    //     return newReadyTabs; // Only update if content changes\r\n    //   }\r\n    //   return prev;\r\n    // });\r\n  }, []);\r\n  const buttonStyles = {\r\n    fontSize: \"14px\",\r\n    padding: \"14px 18px\",\r\n    borderRadius: \"8px\",\r\n    // color: \"white\",\r\n  };\r\n  const buttonStyles2 = {\r\n    fontSize: \"14px\",\r\n    padding: \"14px 18px\",\r\n    borderRadius: \"8px\",\r\n  };\r\n  // const stepsRef = {\r\n  //   officeDropdown: useRef(null),\r\n  //   datePicker: useRef(null),\r\n  //   usersCount: useRef(null),\r\n  //   totalSales: useRef(null),\r\n  //   totalInstallations: useRef(null),\r\n  //   salesOverview: useRef(null),\r\n  //   salesByAgent: useRef(null),\r\n  //   salesByLocation: useRef(null),\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const tourStepsByTab = {\r\n      distributor: [\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Welcome, {user?.name}!</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Displays key metrics such as Indoor Duration, Walking Steps, Skill\r\n              Time, Walking Speed, and Room Entry/Exit Count.\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Let's Start\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n        },\r\n        {\r\n          title: (\r\n            <h1 className=\"text-xl text-primary\"> Daily Activity Summary</h1>\r\n          ),\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Displays key metrics such as Indoor Duration, Walking Steps, Skill\r\n              Time, Walking Speed, and Room Entry/Exit Count.\r\n            </p>\r\n          ),\r\n          // target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Start Tour\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Office Dropdown</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Use the office dropdown to select a specific office or view data\r\n              for all offices at once.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_officeDropdown?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            variant: \"solid\",\r\n            size: \"middle\",\r\n            className: \"tour_step_btn\",\r\n\r\n            color: \"default\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Date Range Filter</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Apply a custom date range filter to narrow down the data to a\r\n              specific period for more focused analysis.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_datePicker?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> User Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Quickly check the number of key users: Nursing Stations, Sales\r\n              Agents, Monitoring Stations and End Users.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_usersCount?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Sales</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              View the total number of sales made, with a breakdown of their\r\n              statuses (Completed, Pending, and Cancelled).\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalSales?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Total Installations</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Monitor installation statuses, including Completed, In Progress,\r\n              and Not Started, to track installation progress.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_totalInstallations?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales Overview</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Visualize sales trends over time with the Sales Overview graph,\r\n              helping you identify patterns and performance.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesOverview?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Agent</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              See the total sales made by each agent, allowing you to track\r\n              individual performance and contributions.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByAgent?.current,\r\n          nextButtonProps: {\r\n            children: \"Next\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n        {\r\n          title: <h1 className=\"text-xl text-primary\"> Sales by Location</h1>,\r\n          description: (\r\n            <p className=\"text-base tracking-tight text-primary/80\">\r\n              Review sales performance across different locations, helping you\r\n              identify high-performing or underperforming areas.\r\n            </p>\r\n          ),\r\n          target: () => allRefs.tour_step_salesByLocation?.current,\r\n          nextButtonProps: {\r\n            children: \"Finish\",\r\n            style: buttonStyles,\r\n            size: \"middle\",\r\n            color: \"default\",\r\n            variant: \"solid\",\r\n            className: \"tour_step_btn\",\r\n          },\r\n          prevButtonProps: {\r\n            style: buttonStyles2,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    setTourSteps(tourStepsByTab[userRole] || []);\r\n    // setTimeout(() => {\r\n    //   if (tourSteps.length > 0 && !seenTours[userRole]) setTourOpen(true);\r\n    // }, 2000);\r\n  }, [allRefs]);\r\n  const getActiveTabSteps = () => {\r\n    if (tourSteps.length > 0) {\r\n      return tourSteps;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n  function handleTourFinish() {\r\n    setTourOpen(false);\r\n    const updatedSeenTours = { ...seenTours, [userRole]: true };\r\n    setSeenTours(updatedSeenTours);\r\n    ls.set(\"seenToursDash\", updatedSeenTours);\r\n  }\r\n  return (\r\n    <>\r\n      <RefProvider onRefsUpdate={handleRefsUpdate}>\r\n        <AdminDashboardComponent />\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              fontFamily: \"Baloo2\",\r\n              colorPrimary: \"#252F67\",\r\n              colorLinkActive: \"#252F67\",\r\n              colorLinkHover: \"#252F67\",\r\n              colorLink: \"#252F67\",\r\n              primaryColor: \"#252F67\",\r\n            },\r\n          }}\r\n        >\r\n          <Tour\r\n            open={tourOpen}\r\n            onFinish={handleTourFinish}\r\n            steps={getActiveTabSteps()}\r\n            onClose={handleTourFinish}\r\n          />\r\n        </ConfigProvider>\r\n      </RefProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AdminDashboard;\r\n"],"names":["SalesOverviewChart","data","datesArray","item","totalOrdersArray","option","jsx","ReactEcharts","TotalSalesChart","chartFor","totalValue","sum","colorMapping","setColorMapping","useState","propertyNamesMapping","useEffect","BarChart","graphTitle","yAxisData","seriesData","BarChartByGender","options","setOptions","xAxisData","range","found","maxValue","newOptions","value","PieChart","chartData","setChartData","datForChart","colorMap","colors","nameMap","CountMapping","RiPhoneFindLine","MdOutlineSupportAgent","MdOutlineAddHome","IoLogoAppleAr","MdOutlineRealEstateAgent","FiUser","MdOutlineElderly","PiBuildingOffice","BiDevices","TotalAlertChart","problemCount","acc","curr","warningCount","criticalCount","pieData","BubbleChart","hasData","params","jsxs","ReactECharts","MonitoringStation","count","chartByAge","chartByGender","diseasesCountByGender","alertsCountByName","alertsCountByElderly","key","IconName","Fragment","StatusDropdown","row","sharedMethod","useContext","SidebarContext","status","setStatus","handleLoading","sethandleLoading","handleChange","updateInstallationStatus","res","err","ConfigProvider","Select","installation","ReportActionModal","indx","self","isUniqueSeenyorKit","i","color","Tag","total","formattedDate","_a","_b","_c","_d","_e","_f","record","InstallerDashboard","loading","setLoading","page","SetPage","setTotal","installationList","setInstallationList","deviceSalesCount","setDeviceSalesCount","getList","query","getInstallationList","getDeviceSalesCounts","useCallback","getDeviceSalesCount","getCompletedandToBeInstalled","registerRef","useRefContext","stepsRef","useRef","CustomTable","index","RangePicker","DatePicker","onOk","onSearch","AdminDashboardComponent","setPage","dealLoading","setDealLoading","user","SetUser","ls","role","setRole","mainRole","setMainRole","fromDate","setFromDate","toDate","setToDate","SOOrderStatus","setSOOrderStatus","SOAgentId","setSOAgentId","SBAOrderStatus","setSBAOrderStatus","SBAOrderLocation","setSBAOrderLocation","SBLOrderStatus","setSBLOrderStatus","SBLAgentId","setSBLAgentId","SBPAgentId","setSBPAgentId","SBIAgentId","setSBIAgentId","DDOrderStatus","setDDOrderStatus","DDAgentId","setDDAgentId","office","setOffice","salesAgent","setSalesAgent","officeId","setOfficeId","setCount","salesOverview","setSalesOverview","salesByAgent","setSalesByAgent","salesByLocation","setSalesByLocation","salesByPaymentStatus","setSalesByPaymentStatus","salesByInstallationStatus","setSalesByInstallationStatus","dealDetails","setDealDetails","officeQuery","setOfficeQuery","agentQuery","setAgentQuery","setChartByGender","setChartByAge","setDiseasesCountByGender","setAlertsCountByElderly","setAlertsCountByName","city","setCity","ChartByGender","getChartByGender","ChartByAge","getChartByAge","DiseasesCountByGender","getDiseasesCountByGender","AlertCountByElderly","getAlertsCountByElderly","AlertCountByName","getAlertsCountByName","filteredData","getAlertInfoViaEvent","AllCounts","getUsersCount","config","apiItem","SalesOverview","agentId","orderStatus","getSalesOverview","SalesByAgent","getSalesData","SalesByLocation","SalesByPaymentStatus","SalesByInstallationStatus","DealDetails","getDealDetails","newQuery","prevQuery","handleWeeklyMonthly","e","handleDatePicker","getAllOffice","getUser","getAllAgent","getAllCities","getAllCity","WeeklyMonthlyPicker","dateString","agent","statusName","bgColor","label","AdminDashboard","tourOpen","setTourOpen","tourSteps","setTourSteps","allRefs","setAllRefs","seenTours","setSeenTours","saved","userRole","handleRefsUpdate","refs","prevRefs","buttonStyles","buttonStyles2","tourStepsByTab","getActiveTabSteps","handleTourFinish","updatedSeenTours","RefProvider","Tour"],"mappings":"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"}