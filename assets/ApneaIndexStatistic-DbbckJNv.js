import{r as t,d as c,fv as g,j as p}from"./index-y3ivVodB.js";import"./mockData-DnyFJQLN.js";import h from"./barChart-Ot-pd3pH.js";import{T as A}from"./Template-DH6r_Crg.js";import{g as C}from"./utiles-Bh1Iqrjg.js";import{C as T}from"./UseCustomContext-JwuopvLc.js";import"./index-avEVsDoY.js";import"./helper-CgipsUzm.js";import"./WeeklyMonthlyPicker-TSTuaeMT.js";import"./index-6MKYyd1u.js";import"./index-Cd7czaLl.js";import"./index-BKcp7L8t.js";import"./index-58LAmjUb.js";import"./index-C1BwfOV_.js";function z(){const{title:d,color:r,icon:f,dataAnalysis:u,summaryProps:x}=C("Apnea Index"),D=t.useContext(T),{chartToDate:o="",chartFromDate:n="",elderlyDetails:a}=D||{},[s,l]=t.useState(c().subtract(1,"day").format("YYYY-MM-DD")),[i,S]=t.useState(c().subtract(31,"day").format("YYYY-MM-DD")),[Y,I]=t.useState([]),m=t.useCallback(()=>{g({uids:a==null?void 0:a.deviceId,to_date:i,from_date:s}).then(e=>{I(e.data),console.log(e.data)}).catch(e=>{console.log(e)})},[s,a]);return t.useEffect(()=>{m()},[m]),t.useEffect(()=>{o&&n&&(l(o),S(n))},[o]),p.jsx(A,{title:d,color:r,icon:f,dataAnalysis:u,summaryProps:x,children:p.jsx(h,{data:Y,color:r,dataType:"number",fromDate:i,toDate:s})})}export{z as default};
