{"version":3,"file":"Analytics-CaW4sasx.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../src/MonitoringService/Components/PDFTemplate/AnalyticsReportPdf.jsx","../../src/MonitoringService/Components/ui/area.tsx","../../src/MonitoringService/Components/ui/bar.tsx","../../src/MonitoringService/Components/ui/pie3.tsx","../../src/MonitoringService/Components/ui/scatter.tsx","../../src/MonitoringService/hooks/useAnalytics.js","../../src/MonitoringService/Utiles/agentMetrics.js","../../src/MonitoringService/Pages/Analytics/Analytics.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","import React from \"react\";\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  PDFDownloadLink,\r\n} from \"@react-pdf/renderer\";\r\nimport dayjs from \"dayjs\";\r\nimport { Button } from \"../ui/button\";\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    padding: 30,\r\n    fontSize: 10,\r\n    fontFamily: \"Helvetica\",\r\n    color: \"#111\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  companyName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  reportTitle: {\r\n    fontSize: 13,\r\n    marginTop: 4,\r\n    textDecoration: \"underline\",\r\n  },\r\n  dateRange: {\r\n    fontSize: 10,\r\n    marginTop: 4,\r\n    color: \"#555\",\r\n  },\r\n  section: {\r\n    marginTop: 15,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 6,\r\n    borderBottom: \"1 solid #ccc\",\r\n    paddingBottom: 3,\r\n  },\r\n  infoBoxContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: 10,\r\n  },\r\n  infoBox: {\r\n    width: \"49.9%\",\r\n    backgroundColor: \"#f0f0f0\",\r\n    padding: 8,\r\n    marginBottom: 2,\r\n    fontWeight: 600,\r\n    fontSize: \"11px\",\r\n  },\r\n  table: {\r\n    display: \"table\",\r\n    width: \"100%\",\r\n    border: \"1 solid #ddd\",\r\n    borderRadius: 3,\r\n    marginTop: 5,\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n  },\r\n  tableCol: {\r\n    width: \"25%\",\r\n    borderRight: \"0.5 solid #ddd\",\r\n    padding: 4,\r\n  },\r\n  tableColHeader: {\r\n    width: \"25%\",\r\n    borderRight: \"0.5 solid #ddd\",\r\n    backgroundColor: \"#f0f0f0\",\r\n    padding: 4,\r\n  },\r\n  tableCellHeader: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 10,\r\n  },\r\n  tableCell: {\r\n    fontSize: 9,\r\n  },\r\n  noData: {\r\n    fontSize: 9,\r\n    fontStyle: \"italic\",\r\n    color: \"#777\",\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nconst summaryData = {\r\n  companyName: \"Yo Yo Monitoring ST.\",\r\n  startDate: \"Oct 01, 2025\",\r\n  endDate: \"Oct 21, 2025\",\r\n  totalAlerts: 0,\r\n  avgResponseTime: \"0s\",\r\n  slaCompliance: \"0%\",\r\n  deviceUptime: \"0%\",\r\n};\r\nconst generateSampleData = () => {\r\n  const days = Array.from({ length: 30 }, (_, i) =>\r\n    dayjs()\r\n      .subtract(29 - i, \"day\")\r\n      .format(\"YYYY-MM-DD\")\r\n  );\r\n  const alertTypes = [\"Device Offline Alert\", \"Fall Alert\"];\r\n  const sampleData = [];\r\n\r\n  days.forEach((day) => {\r\n    const alertCount = Math.floor(Math.random() * 12) + 8;\r\n\r\n    for (let i = 0; i < alertCount; i++) {\r\n      const hour = Math.floor(Math.random() * 24);\r\n      const minute = Math.floor(Math.random() * 60);\r\n      const responseTime = Math.floor(Math.random() * 25) + 5;\r\n      const slaTime = 15;\r\n      const compliance = responseTime <= slaTime;\r\n      const alertType =\r\n        alertTypes[Math.floor(Math.random() * alertTypes.length)];\r\n\r\n      sampleData.push({\r\n        day,\r\n        time: `${hour.toString().padStart(2, \"0\")}:${minute\r\n          .toString()\r\n          .padStart(2, \"0\")}`,\r\n        hour: hour + minute / 60,\r\n        responseTime,\r\n        slaTime,\r\n        alertId: `A${day.replace(/-/g, \"\")}${i + 1}`,\r\n        compliance,\r\n        alertType,\r\n      });\r\n    }\r\n  });\r\n\r\n  return sampleData;\r\n};\r\nconst alertOverview = {\r\n  fall: 25,\r\n  offline: 40,\r\n  total: 65,\r\n};\r\nconst alertTrends = Array.from({ length: 30 }, (_, i) => {\r\n  const date = dayjs()\r\n    .subtract(29 - i, \"day\")\r\n    .format(\"MMM DD\");\r\n  const fall = Math.floor(Math.random() * 5);\r\n  const offline = Math.floor(Math.random() * 3);\r\n  const total = fall + offline;\r\n\r\n  return { date, fall, offline, total };\r\n});\r\n\r\nconst agentPerformance = [\r\n  { Agent: \"Alice Johnson\", \"Performance %\": \"92%\" },\r\n  { Agent: \"Bob Smith\", \"Performance %\": \"87%\" },\r\n  { Agent: \"Charlie Lee\", \"Performance %\": \"95%\" },\r\n  { Agent: \"Dana White\", \"Performance %\": \"80%\" },\r\n  { Agent: \"Ethan Brown\", \"Performance %\": \"88%\" },\r\n  { Agent: \"Fiona Davis\", \"Performance %\": \"91%\" },\r\n  { Agent: \"George Miller\", \"Performance %\": \"84%\" },\r\n  { Agent: \"Hannah Wilson\", \"Performance %\": \"93%\" },\r\n];\r\n\r\nconst slaCompliance = Array.from({ length: 30 }, (_, i) => {\r\n  const date = dayjs()\r\n    .subtract(29 - i, \"day\")\r\n    .format(\"MMM DD\");\r\n  const compliance = Math.floor(Math.random() * 50) + 10;\r\n  const nonCompliance = Math.floor(Math.random() * 50) + 10;\r\n  const total = compliance + nonCompliance;\r\n  const percent = ((compliance / total) * 100).toFixed(0) + \"%\";\r\n\r\n  return { date, compliance, nonCompliance, percent };\r\n});\r\nconst generateDailySLAData = () => {\r\n  const rawData = generateSampleData();\r\n  const grouped = {};\r\n\r\n  rawData.forEach((item) => {\r\n    if (!grouped[item.day]) {\r\n      grouped[item.day] = {\r\n        date: dayjs(item.day).format(\"MMM DD\"),\r\n        fallCount: 0,\r\n        offlineCount: 0,\r\n        totalAlerts: 0,\r\n        slaMet: 0,\r\n      };\r\n    }\r\n\r\n    grouped[item.day].totalAlerts++;\r\n    if (item.alertType === \"Fall Alert\") grouped[item.day].fallCount++;\r\n    if (item.alertType === \"Device Offline Alert\")\r\n      grouped[item.day].offlineCount++;\r\n    if (item.compliance) grouped[item.day].slaMet++;\r\n  });\r\n\r\n  const result = Object.values(grouped).map((day) => ({\r\n    date: day.date,\r\n    fallCount: day.fallCount,\r\n    offlineCount: day.offlineCount,\r\n    slaPercent:\r\n      day.totalAlerts > 0\r\n        ? ((day.slaMet / day.totalAlerts) * 100).toFixed(1) + \"%\"\r\n        : \"0%\",\r\n  }));\r\n\r\n  return result;\r\n};\r\n\r\nconst slaDailySummary = generateDailySLAData();\r\nconst renderTable = (headers, rows) => (\r\n  <View style={styles.table}>\r\n    <View style={styles.tableRow}>\r\n      {headers.map((h, i) => (\r\n        <View\r\n          key={i}\r\n          style={{\r\n            width: \"50%\",\r\n            padding: 6,\r\n            borderBottom: \"0.5 solid #ccc\",\r\n            borderRight: i === 0 ? \"0.5 solid #ccc\" : \"none\",\r\n          }}\r\n        >\r\n          <Text style={styles.tableCellHeader}>{h}</Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n\r\n    {rows.map((row, i) => (\r\n      <View key={i} style={styles.tableRow}>\r\n        {Object.values(row).map((cell, j) => (\r\n          <View\r\n            key={j}\r\n            style={{\r\n              width: \"50%\",\r\n              padding: 6,\r\n              borderBottom: \"0.5 solid #ddd\",\r\n              borderRight: j === 0 ? \"0.5 solid #ddd\" : \"none\",\r\n            }}\r\n          >\r\n            <Text style={styles.tableCell}>{cell}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    ))}\r\n  </View>\r\n);\r\n\r\nconst renderAlertBars = (data) => {\r\n  const total = data.total || 1;\r\n  const barHeight = 12;\r\n\r\n  return (\r\n    <View style={{ marginTop: 6 }}>\r\n      {[\r\n        { label: \"Fall Alerts\", value: data.fall, color: \"#EF4444\" },\r\n        {\r\n          label: \"Device Offline Alerts\",\r\n          value: data.offline,\r\n          color: \"#FACC15\",\r\n        },\r\n        { label: \"Total\", value: data.total, color: \"#556270\" },\r\n      ].map((item, i) => (\r\n        <View\r\n          key={i}\r\n          style={{\r\n            marginBottom: 6,\r\n            display: \"flex\",\r\n            alignItems:\r\n              item.label == \"Fall Alerts\"\r\n                ? \"flex-start\"\r\n                : item.label == \"Device Offline Alerts\"\r\n                ? \"flex-end\"\r\n                : \"center\",\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 10, marginBottom: 2 }}>\r\n            {item.label}: {item.value}\r\n          </Text>\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              height: barHeight,\r\n              backgroundColor: \"#eee\",\r\n              borderRadius: 4,\r\n              overflow: \"hidden\",\r\n              display: \"flex\",\r\n              alignItems:\r\n                item.label == \"Fall Alerts\" ? \"flex-start\" : \"flex-end\",\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: `${(item.value / total) * 100}%`,\r\n                height: \"100%\",\r\n                backgroundColor: item.color,\r\n                borderRadius: 4,\r\n              }}\r\n            />\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\nconst AnalyticsReportDocument = ({\r\n  basicInfo = {},\r\n  totalAlertOverview = {},\r\n  alertTrends = [],\r\n  agentPerformance = [],\r\n  slaCompliance = [],\r\n}) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.companyName}>{basicInfo.companyName}</Text>\r\n        <Text style={styles.reportTitle}>Analytics Report</Text>\r\n        <Text style={styles.dateRange}>\r\n          {basicInfo.startDate} → {basicInfo.endDate}\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.infoBoxContainer}>\r\n        <View style={styles.infoBox}>\r\n          <Text>Total Alerts: {basicInfo.totalAlerts}</Text>\r\n        </View>\r\n        <View style={styles.infoBox}>\r\n          <Text>Avg. Response Time: {basicInfo.avgResponseTime}</Text>\r\n        </View>\r\n        <View style={styles.infoBox}>\r\n          <Text>SLA Compliance: {basicInfo.slaCompliance}</Text>\r\n        </View>\r\n        <View style={styles.infoBox}>\r\n          <Text>Device Uptime: {basicInfo.deviceUptime}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Total Alert Overview</Text>\r\n        {alertOverview &&\r\n        (totalAlertOverview.fall || totalAlertOverview.offline) ? (\r\n          renderAlertBars(alertOverview)\r\n        ) : (\r\n          <Text style={styles.noData}>No data available.</Text>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Alert Trends</Text>\r\n        {alertTrends.length > 0 ? (\r\n          renderTable(\r\n            [\"Date\", \"Fall Alerts\", \"Device Offline\", \"Total\"],\r\n            alertTrends\r\n          )\r\n        ) : (\r\n          <Text style={styles.noData}>No data available.</Text>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Agent Performance</Text>\r\n        {agentPerformance.length > 0 ? (\r\n          renderTable([\"Agent\", \"Performance %\"], agentPerformance)\r\n        ) : (\r\n          <Text style={styles.noData}>No data available.</Text>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>SLA Compliance Report</Text>\r\n        {slaCompliance.length > 0 ? (\r\n          renderTable(\r\n            [\"Date\", \"Fall Alert\", \"Device Offline\", \"SLA Compliance (%)\"],\r\n            slaCompliance\r\n          )\r\n        ) : (\r\n          <Text style={styles.noData}>No data available.</Text>\r\n        )}\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nconst AnalyticsReportPdf = ({ pdfProps = {} }) => (\r\n  <PDFDownloadLink\r\n    document={\r\n      <AnalyticsReportDocument\r\n        basicInfo={pdfProps.basicInfo}\r\n        totalAlertOverview={pdfProps.totalAlertOverview}\r\n        alertTrends={pdfProps.alertTrends}\r\n        agentPerformance={pdfProps.agentPerformance}\r\n        slaCompliance={pdfProps.slaCompliance}\r\n      />\r\n    }\r\n    fileName=\"Analytics_Report.pdf\"\r\n  >\r\n    {({ loading }) => (\r\n      <Button>{loading ? \"Generating...\" : \"Export Report\"}</Button>\r\n    )}\r\n  </PDFDownloadLink>\r\n);\r\n\r\nexport default AnalyticsReportPdf;\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function AreaLineChartComponent({\r\n  width = \"100%\",\r\n  height = 400,\r\n  data = [],\r\n}) {\r\n  const processData = () => {\r\n    if (!data || data.length === 0) {\r\n      return generateFallbackData();\r\n    }\r\n\r\n    const dateMap = new Map();\r\n    data.forEach((item) => {\r\n      const date = new Date(item.year, item.month - 1, item.day);\r\n      const dateKey = date.toISOString().split(\"T\")[0];\r\n      const eventType = item.event === \"5\" ? \"Device Offline\" : \"Fall Alert\";\r\n\r\n      if (!dateMap.has(dateKey)) {\r\n        dateMap.set(dateKey, {\r\n          date,\r\n          timestamp: date.getTime(),\r\n          dateFormatted: formatXAxisDate(date, data),\r\n          tooltipDate: formatTooltipDate(date),\r\n          \"Fall Alert\": 0,\r\n          \"Device Offline\": 0,\r\n        });\r\n      }\r\n\r\n      const dateData = dateMap.get(dateKey);\r\n      dateData[eventType] += item.count || 0;\r\n    });\r\n\r\n    // Convert to array and sort by date\r\n    const sortedData = Array.from(dateMap.values()).sort(\r\n      (a, b) => a.timestamp - b.timestamp\r\n    );\r\n\r\n    // Extract dates and series data\r\n    const dates = sortedData.map((item) => item.dateFormatted);\r\n    const tooltipDates = sortedData.map((item) => item.tooltipDate);\r\n    const fallAlertData = sortedData.map((item) => item[\"Fall Alert\"]);\r\n    const deviceOfflineData = sortedData.map((item) => item[\"Device Offline\"]);\r\n\r\n    return { dates, tooltipDates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  // Format date for x-axis label\r\n  const formatXAxisDate = (date, data) => {\r\n    if (!data || data.length === 0) {\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    }\r\n\r\n    const dates = data.map(\r\n      (item) => new Date(item.year, item.month - 1, item.day)\r\n    );\r\n    const minDate = new Date(Math.min(...dates));\r\n    const maxDate = new Date(Math.max(...dates));\r\n\r\n    const diffTime = Math.abs(maxDate - minDate);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays <= 60) {\r\n      // Show month and day for short ranges (up to 2 months)\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    } else {\r\n      // Show month and year for longer ranges\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        year: \"2-digit\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Format date for tooltip (always shows full date)\r\n  const formatTooltipDate = (date) => {\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      weekday: \"short\",\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  // Generate fallback data if no data provided\r\n  const generateFallbackData = () => {\r\n    const dates = [];\r\n    const tooltipDates = [];\r\n    const fallAlertData = [];\r\n    const deviceOfflineData = [];\r\n\r\n    const today = new Date();\r\n    for (let i = 9; i >= 0; i--) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n\r\n      dates.push(\r\n        date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" })\r\n      );\r\n      tooltipDates.push(\r\n        date.toLocaleDateString(\"en-US\", {\r\n          weekday: \"short\",\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n        })\r\n      );\r\n      fallAlertData.push(Math.floor(0));\r\n      deviceOfflineData.push(Math.floor(0));\r\n    }\r\n\r\n    return { dates, tooltipDates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  const { dates, tooltipDates, fallAlertData, deviceOfflineData } =\r\n    processData();\r\n\r\n  // Smart label interval calculation\r\n  const getLabelInterval = (dataLength) => {\r\n    if (dataLength <= 10) return 0; // Show all labels\r\n    if (dataLength <= 20) return 1; // Show every other label\r\n    if (dataLength <= 40) return 2; // Show every 3rd label\r\n    if (dataLength <= 60) return 3; // Show every 4th label\r\n    return Math.floor(dataLength / 12); // Dynamic interval for large datasets\r\n  };\r\n\r\n  // Calculate totals for legend\r\n  const fallAlertTotal = fallAlertData.reduce((sum, value) => sum + value, 0);\r\n  const deviceOfflineTotal = deviceOfflineData.reduce(\r\n    (sum, value) => sum + value,\r\n    0\r\n  );\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      className: \"!shadow-none\",\r\n      axisPointer: {\r\n        type: \"line\",\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n          width: 1,\r\n        },\r\n      },\r\n      formatter: (params) => {\r\n        const index = params[0].dataIndex;\r\n        const date = tooltipDates[index];\r\n        const fallAlert = params.find((p) => p.seriesName === \"Fall Alert\");\r\n        const deviceOffline = params.find(\r\n          (p) => p.seriesName === \"Device Offline\"\r\n        );\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[180px]\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${date}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: #ef4444\"></div>\r\n                  <span class=\"text-text/80 text-sm\">Fall Alert</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  fallAlert?.value || 0\r\n                }</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: #f59e0b\"></div>\r\n                  <span class=\"text-text/80 text-sm\">Device Offline</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  deviceOffline?.value || 0\r\n                }</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 10,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n        fontWeight: \"normal\",\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Fall Alert\") {\r\n          return `Fall Alert: ${fallAlertTotal.toLocaleString()}`;\r\n        } else if (name === \"Device Offline\") {\r\n          return `Device Offline: ${deviceOfflineTotal.toLocaleString()}`;\r\n        }\r\n        return name;\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: dates.length > 15 ? \"80px\" : \"50px\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: dates,\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 11,\r\n        interval: getLabelInterval(dates.length),\r\n        rotate: dates.length > 15 ? 45 : 0,\r\n        margin: dates.length > 15 ? 15 : 8,\r\n        formatter: (value) => {\r\n          return value;\r\n        },\r\n      },\r\n      axisTick: {\r\n        alignWithLabel: true,\r\n        interval: getLabelInterval(dates.length),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Fall Alert\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false,\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#ef4444\", // Red color for Fall Alert\r\n        },\r\n        itemStyle: {\r\n          color: \"#ef4444\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(239, 68, 68, 0.3)\",\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(239, 68, 68, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: fallAlertData,\r\n      },\r\n      {\r\n        name: \"Device Offline\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false,\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#f59e0b\", // Amber warning color for Device Offline\r\n        },\r\n        itemStyle: {\r\n          color: \"#f59e0b\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(245, 158, 11, 0.3)\", // Amber with opacity\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(245, 158, 11, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: deviceOfflineData,\r\n      },\r\n    ],\r\n    dataZoom: [\r\n      {\r\n        type: \"inside\",\r\n        start: dates.length > 30 ? 100 - Math.floor(3000 / dates.length) : 0,\r\n        end: 100,\r\n      },\r\n      {\r\n        show: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function CleanBarGraph({ data = [], width = \"100%\", height = 350 }) {\r\n  const generateAgentData = () => {\r\n    const scores = data.map((agent) => agent.score);\r\n    const maxScore = Math.max(...scores);\r\n    const minScore = Math.min(...scores);\r\n\r\n    return data.map((agent) => ({\r\n      ...agent,\r\n      isHighest: agent.score === maxScore,\r\n      isLowest: agent.score === minScore,\r\n      itemStyle: {\r\n        color:\r\n          agent.score === maxScore\r\n            ? \"#10b981\"\r\n            : agent.score === minScore\r\n            ? \"#ef4444\"\r\n            : \"rgb(var(--ms-primary-color))\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const agentData = generateAgentData();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const { name, value, color } = params;\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${color}\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${name}</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm pr-1\">Performance Score: </span>\r\n                <span class=\"font-mono font-bold text-text text-sm\">${value}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      top: \"5%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      show: false,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      min: 0,\r\n      max: 100,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n        formatter: \"{value}%\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Performance Score\",\r\n        type: \"bar\",\r\n        barWidth: \"60%\",\r\n        itemStyle: {\r\n          borderRadius: [7, 7, 0, 0],\r\n          borderWidth: 0,\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          formatter: \"{c}%\",\r\n        },\r\n        emphasis: {\r\n          disabled: true,\r\n        },\r\n        data: agentData.map((agent) => ({\r\n          value: agent.score,\r\n          name: agent.name,\r\n          itemStyle: {\r\n            ...agent.itemStyle,\r\n            borderWidth: 0,\r\n          },\r\n          emphasis:\r\n            agent.isHighest || agent.isLowest\r\n              ? undefined\r\n              : {\r\n                  itemStyle: {\r\n                    opacity: 0.8,\r\n                  },\r\n                },\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function PieChartComponent({\r\n  data,\r\n  centerLabel,\r\n  width = \"100%\",\r\n  height = 400,\r\n}) {\r\n  const total = data.reduce((sum, item) => sum + item.value, 0);\r\n\r\n  // Find the maximum value to emphasize the largest segment\r\n  const maxValue = Math.max(...data.map((item) => item.value));\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const percent = ((params.value / total) * 100).toFixed(1);\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${\r\n                params.color\r\n              }\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${\r\n                params.name\r\n              }</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Count</span>\r\n                <span class=\"font-mono font-medium text-text\">${params.value.toLocaleString()}</span>\r\n              </div>\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Percent</span>\r\n                <span class=\"font-mono font-medium text-text\">${percent}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"37%\", \"77%\"],\r\n        roseType: \"area\",\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 10,\r\n          focus: \"self\",\r\n        },\r\n        itemStyle: {\r\n          borderWidth: 0,\r\n          borderColor: \"#fff\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          fontSize: 14,\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          formatter: ({ name, value }) => {\r\n            return `${name}\\n{value|${value.toLocaleString()}}`;\r\n          },\r\n          rich: {\r\n            value: {\r\n              fontSize: 24,\r\n              fontWeight: 600,\r\n              color: \"rgb(var(--ms-text-color)/0.7)\",\r\n              padding: [2, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n          length: 20,\r\n          length2: 10,\r\n          smooth: true,\r\n          lineStyle: {\r\n            width: 1,\r\n            type: \"solid\",\r\n          },\r\n        },\r\n        data: data.map((item) => ({\r\n          ...item,\r\n          // Make the largest segment bigger with emphasis\r\n          ...(item.value === maxValue && {\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 15,\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n              },\r\n            },\r\n            itemStyle: {\r\n              ...item.itemStyle,\r\n              shadowBlur: 8,\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.3)\",\r\n            },\r\n          }),\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\" style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n\r\n      {/* Center Label */}\r\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\r\n        <div className=\"text-[22px] font-bold text-text\">\r\n          {total.toLocaleString()}\r\n        </div>\r\n        <div className=\"text-xs text-muted-foreground mt-0\">\r\n          {centerLabel || \"Total\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\n// Helper function to calculate duration between times\r\nfunction calculateDurationBetweenTimes(startTime, endTime) {\r\n  const start = new Date(startTime);\r\n  const end = new Date(endTime);\r\n  const diffMs = end - start;\r\n\r\n  const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n  const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((diffMs % (1000 * 60)) / 1000);\r\n\r\n  return { hours, minutes, seconds, totalMinutes: diffMs / (1000 * 60) };\r\n}\r\n\r\n// Helper function to format SLA minutes\r\nfunction formatSLATime(slaMinutes) {\r\n  const hours = Math.floor(slaMinutes / 60);\r\n  const minutes = Math.floor(slaMinutes % 60);\r\n  const seconds = Math.floor((slaMinutes * 60) % 60);\r\n\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m ${seconds}s`;\r\n  } else if (minutes > 0) {\r\n    return `${minutes}m ${seconds}s`;\r\n  } else {\r\n    return `${seconds}s`;\r\n  }\r\n}\r\n\r\n// Format your data to match the chart structure\r\nconst formatChartData = (rawData) => {\r\n  return rawData.map((item) => {\r\n    const createdDate = new Date(item.created_at);\r\n    const closedDate = new Date(item.closed_at);\r\n\r\n    // Calculate response time duration\r\n    const duration = calculateDurationBetweenTimes(\r\n      item.created_at,\r\n      item.closed_at\r\n    );\r\n\r\n    // Get date in YYYY-MM-DD format\r\n    const day = createdDate.toISOString().split(\"T\")[0];\r\n\r\n    // Get time in HH:MM format\r\n    const time = createdDate.toTimeString().split(\" \")[0].substring(0, 5);\r\n\r\n    // Calculate decimal hour for positioning (0-24)\r\n    const hour = createdDate.getHours() + createdDate.getMinutes() / 60;\r\n\r\n    // Format SLA time\r\n    const slaTimeFormatted = formatSLATime(item.sla_minutes);\r\n\r\n    // Map event numbers to alert types if needed\r\n    const eventMap = {\r\n      \"2\": \"Fall Alert\",\r\n      \"5\": \"Device Offline Alert\",\r\n    };\r\n\r\n    return {\r\n      _id: item._id,\r\n      day: day,\r\n      time: time,\r\n      hour: hour,\r\n      responseTime: duration.totalMinutes,\r\n      responseTimeFormatted: `${duration.hours}h ${duration.minutes}m ${duration.seconds}s`,\r\n      slaTime: item.sla_minutes,\r\n      slaTimeFormatted: \"2m\",\r\n      alertId: item._id,\r\n      compliance: item.sla_status,\r\n      alertType: eventMap[item.event] || `Event ${item.event}`,\r\n      created_at: item.created_at,\r\n      closed_at: item.closed_at,\r\n      event: item.event,\r\n    };\r\n  });\r\n};\r\n\r\nexport function Scatter({ data = [], width = \"100%\", height = 400 }) {\r\n  // Generate sample data if no data provided\r\n  const generateSampleData = () => {\r\n    const days = [\r\n      \"2024-01-01\",\r\n      \"2024-01-02\",\r\n      \"2024-01-03\",\r\n      \"2024-01-04\",\r\n      \"2024-01-05\",\r\n    ];\r\n    const alertTypes = [\"Device Offline Alert\", \"Fall Alert\"];\r\n    const sampleData = [];\r\n\r\n    days.forEach((day) => {\r\n      // Generate 8-20 random alerts per day\r\n      const alertCount = Math.floor(Math.random() * 12) + 8;\r\n\r\n      for (let i = 0; i < alertCount; i++) {\r\n        const hour = Math.floor(Math.random() * 24); // 0-23 hours\r\n        const minute = Math.floor(Math.random() * 60); // 0-59 minutes\r\n        const responseTime = Math.floor(Math.random() * 25) + 5; // 5-30 minutes\r\n        const slaTime = 15; // Fixed SLA time of 15 minutes\r\n        const compliance = responseTime <= slaTime;\r\n        const alertType =\r\n          alertTypes[Math.floor(Math.random() * alertTypes.length)];\r\n\r\n        sampleData.push({\r\n          day: day,\r\n          time: `${hour.toString().padStart(2, \"0\")}:${minute\r\n            .toString()\r\n            .padStart(2, \"0\")}`,\r\n          hour: hour + minute / 60, // Decimal hour for positioning\r\n          responseTime: responseTime,\r\n          slaTime: slaTime,\r\n          alertId: `A${day.replace(/-/g, \"\")}${i + 1}`,\r\n          compliance: compliance,\r\n          alertType: alertType,\r\n        });\r\n      }\r\n    });\r\n\r\n    return sampleData;\r\n  };\r\n\r\n  // Format the incoming data or use sample data\r\n  const formattedData =\r\n    data.length > 0 ? formatChartData(data) : generateSampleData();\r\n  const chartData = formattedData;\r\n\r\n  // Calculate totals for legend\r\n  const totalAlerts = chartData.length;\r\n  const compliantAlerts = chartData.filter((item) => item.compliance).length;\r\n  const nonCompliantAlerts = chartData.filter(\r\n    (item) => !item.compliance\r\n  ).length;\r\n\r\n  // Process data for the chart - only two series: compliant and non-compliant\r\n  const compliantData = chartData.filter((item) => item.compliance);\r\n  const nonCompliantData = chartData.filter((item) => !item.compliance);\r\n\r\n  // Get unique days for yAxis (sorted)\r\n  const days = [...new Set(chartData.map((alert) => alert.day))].sort();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const {\r\n          name,\r\n          compliance,\r\n          responseTimeFormatted,\r\n          slaTimeFormatted,\r\n          time,\r\n          day,\r\n          alertType,\r\n          event,\r\n          created_at,\r\n          closed_at,\r\n        } = params.data;\r\n        const status = compliance ? \"Compliance\" : \"Not Compliance\";\r\n        const statusColor = compliance ? \"#10b981\" : \"#ef4444\";\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[250px] z-999\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${alertType}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Date</span>\r\n                <span class=\"font-mono font-medium text-text\">${day}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${time}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Response Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${responseTimeFormatted}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">SLA Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${slaTimeFormatted}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Status</span>\r\n                <span class=\"font-mono font-medium\" style=\"color: ${statusColor}\">${status}</span>\r\n              </div>\r\n             \r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 0,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Total Alerts\") {\r\n          return `Total Alerts: ${totalAlerts}`;\r\n        } else if (name === \"Compliance\") {\r\n          return `Compliance: ${compliantAlerts}`;\r\n        } else if (name === \"Not Compliance\") {\r\n          return `Not Compliance: ${nonCompliantAlerts}`;\r\n        }\r\n        return name;\r\n      },\r\n      rich: {\r\n        bold: {\r\n          fontWeight: \"bold\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontFamily: \"monospace\",\r\n          fontSize: 12,\r\n        },\r\n      },\r\n      data: [\r\n        {\r\n          name: \"Total Alerts\",\r\n          itemStyle: { color: \"rgb(var(--ms-primary-color))\" },\r\n        },\r\n        {\r\n          name: \"Compliance\",\r\n          itemStyle: { color: data?.length == 0 ? \"#ccc\" : \"#10b981\" },\r\n        },\r\n        {\r\n          name: \"Not Compliance\",\r\n          itemStyle: { color: data?.length == 0 ? \"#ccc\" : \"#ef4444\" },\r\n        },\r\n      ],\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"15%\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"value\",\r\n      nameLocation: \"middle\",\r\n      nameGap: 30,\r\n      min: 0,\r\n      max: 24,\r\n      axisLine: {\r\n        show: false,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.3)\",\r\n        },\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: true,\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        formatter: function (value) {\r\n          return `${Math.floor(value)}:00`;\r\n        },\r\n      },\r\n      splitLine: {\r\n        show: false,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"solid\",\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      nameLocation: \"middle\",\r\n      nameGap: 40,\r\n      data: days,\r\n      axisLine: {\r\n        show: false,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.3)\",\r\n        },\r\n      },\r\n\r\n      axisTick: {\r\n        show: true,\r\n      },\r\n      axisLabel: {\r\n        show: true,\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        formatter: function (value) {\r\n          const date = new Date(value);\r\n          return date.toLocaleDateString(\"en-US\", {\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n          });\r\n        },\r\n      },\r\n      splitLine: {\r\n        show: true,\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n        },\r\n      },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        yAxisIndex: 0,\r\n        filterMode: \"filter\",\r\n        start: 50,\r\n        end: 100,\r\n        height: 20,\r\n        bottom: 40,\r\n        show: false, // Hide the controller as requested\r\n        handleStyle: {\r\n          color: \"rgb(var(--ms-primary-color))\",\r\n        },\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        yAxisIndex: 0,\r\n        filterMode: \"filter\",\r\n      },\r\n    ],\r\n    series: [\r\n      {\r\n        name: \"Compliance\",\r\n        type: \"scatter\",\r\n        symbolSize: 10,\r\n        data: compliantData.map((alert) => ({\r\n          name: alert.alertId,\r\n          value: [alert.hour, alert.day],\r\n          responseTime: alert.responseTime,\r\n          responseTimeFormatted: alert.responseTimeFormatted,\r\n          slaTime: alert.slaTime,\r\n          slaTimeFormatted: alert.slaTimeFormatted,\r\n          compliance: alert.compliance,\r\n          day: alert.day,\r\n          time: alert.time,\r\n          alertType: alert.alertType,\r\n          event: alert.event,\r\n          created_at: alert.created_at,\r\n          closed_at: alert.closed_at,\r\n          itemStyle: {\r\n            color: data?.length == 0 ? \"#ccc\" : \"#10b981\",\r\n          },\r\n        })),\r\n        itemStyle: {\r\n          color: data?.length == 0 ? \"#ccc\" : \"#10b981\",\r\n        },\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 2,\r\n        },\r\n      },\r\n      {\r\n        name: \"Not Compliance\",\r\n        type: \"scatter\",\r\n        symbolSize: 10,\r\n        data: nonCompliantData.map((alert) => ({\r\n          name: alert.alertId,\r\n          value: [alert.hour, alert.day],\r\n          responseTime: alert.responseTime,\r\n          responseTimeFormatted: alert.responseTimeFormatted,\r\n          slaTime: alert.slaTime,\r\n          slaTimeFormatted: alert.slaTimeFormatted,\r\n          compliance: alert.compliance,\r\n          day: alert.day,\r\n          time: alert.time,\r\n          alertType: alert.alertType,\r\n          event: alert.event,\r\n          created_at: alert.created_at,\r\n          closed_at: alert.closed_at,\r\n          itemStyle: {\r\n            color: data?.length == 0 ? \"#ccc\" : \"#ef4444\",\r\n          },\r\n        })),\r\n        itemStyle: {\r\n          color: data?.length == 0 ? \"#ccc\" : \"#ef4444\",\r\n        },\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 2,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { QUERY_KEYS } from \"@/api/queryKeys\";\r\nimport {\r\n  getAgentPerformance,\r\n  getCountStatistics,\r\n  getSLAReport,\r\n  getTotalAlertCounts,\r\n  getTotalAlertTrends,\r\n} from \"@/api/Dashboard\";\r\nimport { useQueryWrapper } from \"./quaryHelper\";\r\nexport const useCountStatistics = (params = {}, options = {}) =>\r\n  useQueryWrapper(\r\n    [QUERY_KEYS.COUNT_STATISTICS, params],\r\n    () => getCountStatistics(params),\r\n    { ...options, retry: 0 }\r\n  );\r\n\r\nexport const useTotalAlertCount = (params = {}, options = {}) =>\r\n  useQueryWrapper(\r\n    [QUERY_KEYS.TOTAL_ALERTS, params],\r\n    () => getTotalAlertCounts(params),\r\n    { ...options, retry: 0 }\r\n  );\r\n\r\nexport const useAlertTrends = (params = {}, options = {}) =>\r\n  useQueryWrapper(\r\n    [QUERY_KEYS.TOTAL_ALERTS_TREND, params],\r\n    () => getTotalAlertTrends(params),\r\n    { ...options, retry: 0 }\r\n  );\r\n\r\nexport const useAgentPerformance = (params = {}, options = {}) =>\r\n  useQueryWrapper(\r\n    [QUERY_KEYS.AGENT_PERFORMANCE, params],\r\n    () => getAgentPerformance(params),\r\n    { ...options, retry: 0 }\r\n  );\r\n\r\nexport const useSLAReport = (params = {}, options = {}) =>\r\n  useQueryWrapper(\r\n    [QUERY_KEYS.SLA_STATISTICS, params],\r\n    () => getSLAReport(params),\r\n    { ...options, retry: 0 }\r\n  );\r\n","export const calculateAgentMetrics = (agents) => {\r\n  if (!agents || !Array.isArray(agents) || agents.length === 0) {\r\n    return {\r\n      totalAgents: 0,\r\n      averagePerformance: 0,\r\n      highestPerformance: 0,\r\n      lowestPerformance: 0,\r\n      highestAgent: null,\r\n      lowestAgent: null,\r\n    };\r\n  }\r\n\r\n  const totalAgents = agents.length;\r\n  const totalScore = agents.reduce((sum, agent) => sum + agent.score, 0);\r\n  const averagePerformance = Math.round(totalScore / totalAgents);\r\n\r\n  const highestAgent = agents.reduce((highest, agent) =>\r\n    agent.score > highest.score ? agent : highest\r\n  );\r\n\r\n  const lowestAgent = agents.reduce((lowest, agent) =>\r\n    agent.score < lowest.score ? agent : lowest\r\n  );\r\n\r\n  return {\r\n    totalAgents,\r\n    averagePerformance,\r\n    highestPerformance: highestAgent.score,\r\n    lowestPerformance: lowestAgent.score,\r\n    highestAgent,\r\n    lowestAgent,\r\n  };\r\n};\r\n\r\nexport const formatSLAData = (rawData) => {\r\n  const dateMap = {};\r\n\r\n  rawData.forEach((item) => {\r\n    const createdDate = new Date(item.created_at);\r\n    const day = createdDate.toISOString().split(\"T\")[0];\r\n    const formattedDate = new Date(createdDate)\r\n      .toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"2-digit\",\r\n        year: \"numeric\",\r\n      })\r\n      .replace(/,/g, \"\");\r\n\r\n    if (!dateMap[formattedDate]) {\r\n      dateMap[formattedDate] = {\r\n        date: formattedDate,\r\n        fall: 0,\r\n        offline: 0,\r\n        total: 0,\r\n        compliant: 0,\r\n      };\r\n    }\r\n\r\n    const eventMap = {\r\n      2: \"fall\",\r\n      5: \"offline\",\r\n    };\r\n\r\n    const alertType = eventMap[item.event];\r\n\r\n    if (alertType) {\r\n      dateMap[formattedDate][alertType]++;\r\n    }\r\n    dateMap[formattedDate].total++;\r\n\r\n    if (item.sla_status === \"compliant\" || item.sla_status === true) {\r\n      dateMap[formattedDate].compliant++;\r\n    }\r\n  });\r\n\r\n  return Object.values(dateMap)\r\n    .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n    .map((dayData) => ({\r\n      date: dayData.date,\r\n      fall: dayData.fall,\r\n      offline: dayData.offline,\r\n      percent:\r\n        dayData.total > 0\r\n          ? `${Math.round((dayData.compliant / dayData.total) * 100)}%`\r\n          : \"0%\",\r\n    }));\r\n};\r\n","import BreadcrumbUI from \"@/MonitoringService/Components/common/breadcrumb\";\r\nimport CardUI from \"@/MonitoringService/Components/common/card\";\r\nimport AnalyticsReportPdf from \"@/MonitoringService/Components/PDFTemplate/AnalyticsReportPdf\";\r\nimport { AreaLineChartComponent } from \"@/MonitoringService/Components/ui/area\";\r\nimport { CleanBarGraph } from \"@/MonitoringService/Components/ui/bar\";\r\nimport { Button } from \"@/MonitoringService/Components/ui/button\";\r\nimport { ButtonGroup } from \"@/MonitoringService/Components/ui/button-group\";\r\nimport { Calendar } from \"@/MonitoringService/Components/ui/calendar\";\r\nimport { PieChartComponent } from \"@/MonitoringService/Components/ui/pie3\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/MonitoringService/Components/ui/popover\";\r\nimport { Scatter } from \"@/MonitoringService/Components/ui/scatter\";\r\nimport {\r\n  useAgentPerformance,\r\n  useAlertTrends,\r\n  useCountStatistics,\r\n  useSLAReport,\r\n  useTotalAlertCount,\r\n} from \"@/MonitoringService/hooks/useAnalytics\";\r\nimport useMediaQuery from \"@/MonitoringService/hooks/useMediaQuery\";\r\nimport {\r\n  calculateAgentMetrics,\r\n  formatSLAData,\r\n} from \"@/MonitoringService/Utiles/agentMetrics\";\r\nimport { formatMilliseconds } from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\nimport { ArrowRight, Cable, CalendarIcon } from \"lucide-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaRegClock } from \"react-icons/fa\";\r\nimport { FaRegChessQueen } from \"react-icons/fa6\";\r\nimport { LuCircleFadingArrowUp } from \"react-icons/lu\";\r\nimport { PiWarningCircleBold } from \"react-icons/pi\";\r\nimport config from \"../../conf.json\";\r\n\r\nexport default function Analytics() {\r\n  const { appName, logoUrl, logoDarkUrl } = config.branding;\r\n\r\n  const [range, setRange] = React.useState({\r\n    from: null,\r\n    to: null,\r\n  });\r\n  const [alertCount, setAlertCount] = useState([]);\r\n  const [agentData, setAgentData] = useState([]);\r\n  const [pdfProps, setPdfProps] = useState({});\r\n\r\n  const mapping = {\r\n    2: { name: \"Fall Alerts\", color: \"#ef4444\" },\r\n    5: { name: \"Device Offline\", color: \"#f59e0b\" },\r\n  };\r\n  //====> Count Statistics <====//\r\n  const {\r\n    data: countStatistics,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  } = useCountStatistics({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n\r\n  const uptime = countStatistics?.data?.device_uptime ?? 0;\r\n  const downtime = countStatistics?.data?.device_downtime ?? 0;\r\n  const total = uptime + downtime;\r\n  const uptimePercentage = total > 0 ? Math.round((uptime / total) * 100) : 0;\r\n\r\n  //====> Total Alert Count <====//\r\n  const {\r\n    data: totalAlertCount,\r\n    isLoading: isAlertLoading,\r\n    isError: isAlertError,\r\n    isSuccess: isAlertSuccess,\r\n    error: alertError,\r\n  } = useTotalAlertCount({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  useEffect(() => {\r\n    const chartData =\r\n      Array.isArray(totalAlertCount?.data) && totalAlertCount?.data?.length > 0\r\n        ? totalAlertCount?.data?.map((item) => ({\r\n            value: item?.count ?? 0,\r\n            name: mapping[item?._id]?.name || \"Unknown\",\r\n            itemStyle: { color: mapping[item?._id]?.color || \"#9ca3af\" },\r\n          }))\r\n        : [\r\n            {\r\n              value: 0,\r\n              name: \"No Data\",\r\n              itemStyle: { color: \"#9ca3af\" },\r\n            },\r\n          ];\r\n    setAlertCount(chartData);\r\n  }, [totalAlertCount, isAlertSuccess]);\r\n\r\n  //====> Alert Trends <====//\r\n  const {\r\n    data: alertTrends,\r\n    isLoading: isAlertTrendLoading,\r\n    isError: isAlertTrendError,\r\n    error: alertTrendError,\r\n  } = useAlertTrends({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  //====> Agent Performance <====//\r\n  const {\r\n    data: agentPerformance,\r\n    isLoading: isAgentLoading,\r\n    isError: isAgentError,\r\n    isSuccess: isAgentSuccess,\r\n    error: agentError,\r\n  } = useAgentPerformance({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  useEffect(() => {\r\n    const transformedData = agentPerformance?.data?.map((item) => {\r\n      const total =\r\n        (item.countLessThan2Min ?? 0) + (item.countGreaterThan2Min ?? 0);\r\n      const p = total > 0 ? ((item.countLessThan2Min ?? 0) / total) * 100 : 0;\r\n\r\n      return {\r\n        name: item.closed_by,\r\n        score: Math.round(p),\r\n      };\r\n    });\r\n    setAgentData(transformedData);\r\n  }, [agentPerformance, isAgentSuccess]);\r\n\r\n  //====> SLA Report <====//\r\n  const {\r\n    data: SLAReport,\r\n    isLoading: isSLALoading,\r\n    isError: isSLAError,\r\n    error: slaError,\r\n  } = useSLAReport({\r\n    to_date: range.from || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n    from_date: range.to || dayjs().format(\"YYYY-MM-DD\"),\r\n  });\r\n  function calculateCompliancePercentage(data) {\r\n    if (!data || data.length === 0) return 0;\r\n\r\n    const compliantAlerts = data.filter((item) => item.sla_status).length;\r\n    const percentage = (compliantAlerts / data.length) * 100;\r\n\r\n    return Math.round(percentage * 100) / 100;\r\n  }\r\n  const isSmallScreen = useMediaQuery(\"(max-width: 1366px)\");\r\n  const metrics = calculateAgentMetrics(agentData);\r\n  const formatTooltipDate = (date) => {\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      weekday: \"short\",\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const basicInfo = {\r\n      companyName: appName,\r\n      startDate: range.from || dayjs().format(\"YYYY-MM-DD\"),\r\n      endDate: range.to || dayjs().subtract(30, \"day\").format(\"YYYY-MM-DD\"),\r\n      totalAlerts: totalAlertCount?.data?.reduce((a, b) => a + b.count, 0) || 0,\r\n      avgResponseTime: formatMilliseconds(\r\n        countStatistics?.data?.avg_res_time || 0\r\n      ),\r\n      slaCompliance:\r\n        (SLAReport?.data && calculateCompliancePercentage(SLAReport?.data)) ||\r\n        0 + \"%\",\r\n      deviceUptime: Math.round(uptimePercentage) + \"%\",\r\n    };\r\n    const FallCount =\r\n      alertCount?.filter((item) => item.name == \"Fall Alerts\")[0]?.value || 0;\r\n    const DeviceOfflineCount =\r\n      alertCount?.filter((item) => item.name == \"Device Offline\")[0]?.value ||\r\n      0;\r\n\r\n    const totalAlertOverview = {\r\n      fall: FallCount,\r\n      offline: DeviceOfflineCount,\r\n      total: FallCount + DeviceOfflineCount,\r\n    };\r\n    const dateMap = new Map();\r\n    alertTrends?.data?.forEach((item) => {\r\n      const date = new Date(item.year, item.month - 1, item.day);\r\n      const dateKey = date.toISOString().split(\"T\")[0];\r\n      const eventType = item.event === \"5\" ? \"offline\" : \"fall\";\r\n\r\n      if (!dateMap.has(dateKey)) {\r\n        dateMap.set(dateKey, {\r\n          timestamp: date.getTime(),\r\n          date: formatTooltipDate(date),\r\n          fall: 0,\r\n          offline: 0,\r\n          total: 0,\r\n        });\r\n      }\r\n\r\n      const dateData = dateMap.get(dateKey);\r\n      dateData[eventType] += item.count || 0;\r\n      dateData.total = dateData.fall + dateData.offline;\r\n    });\r\n\r\n    const alertTrendsSorted = Array.from(dateMap.values()).sort(\r\n      (a, b) => a.timestamp - b.timestamp\r\n    );\r\n    alertTrendsSorted.forEach((item) => {\r\n      delete item.timestamp;\r\n    });\r\n\r\n    const agentDataWithPercentage = agentData?.map((item) => ({\r\n      ...item,\r\n      score: `${item.score}%`,\r\n    }));\r\n    const slaData = formatSLAData(SLAReport?.data || []);\r\n    setPdfProps({\r\n      basicInfo,\r\n      totalAlertOverview,\r\n      alertTrends: alertTrendsSorted,\r\n      agentPerformance: agentDataWithPercentage,\r\n      slaCompliance: slaData,\r\n    });\r\n  }, [range.to, range.form]);\r\n  return (\r\n    <div className=\"mb-6\">\r\n      {\" \"}\r\n      <div\r\n        id=\"customer_heading\"\r\n        className=\"flex justify-between sm:flex-row flex-col gap-4 items-center mb-6\"\r\n      >\r\n        <Navigation />\r\n        <div className=\"flex gap-2  items-center\">\r\n          <Popover>\r\n            <PopoverTrigger asChild>\r\n              <Button variant=\"tertiary\">\r\n                <CalendarIcon />\r\n                {range?.from && range?.to ? (\r\n                  `${range.from} - ${range.to}`\r\n                ) : (\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span>Start Date</span> <ArrowRight /> <span>End Date</span>\r\n                  </div>\r\n                )}\r\n              </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"overflow-hidden p-0\" align=\"end\">\r\n              <Calendar\r\n                className=\"w-full border-border\"\r\n                mode=\"range\"\r\n                selected={range}\r\n                onSelect={(selectedRange) => {\r\n                  if (!selectedRange?.from || !selectedRange?.to) {\r\n                    setRange({ from: null, to: null });\r\n                    return;\r\n                  }\r\n\r\n                  setRange({\r\n                    from: dayjs(selectedRange.from).format(\"YYYY-MM-DD\"),\r\n                    to: dayjs(selectedRange.to).format(\"YYYY-MM-DD\"),\r\n                  });\r\n                }}\r\n                captionLayout=\"dropdown\"\r\n                fixedWeeks\r\n                showOutsideDays\r\n              />\r\n            </PopoverContent>\r\n          </Popover>\r\n          <AnalyticsReportPdf pdfProps={pdfProps} />\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        <div className=\" items-center justify-between grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4 lg:auto-rows-fr\">\r\n          <TailsCard\r\n            label=\"Total Alerts\"\r\n            value={totalAlertCount?.data?.reduce((a, b) => a + b.count, 0) || 0}\r\n            icon={<PiWarningCircleBold size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Avg. Response Time\"\r\n            value={formatMilliseconds(countStatistics?.data?.avg_res_time || 0)}\r\n            icon={<FaRegClock size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"SLA Compliance\"\r\n            value={\r\n              (SLAReport?.data &&\r\n                calculateCompliancePercentage(SLAReport?.data)) ||\r\n              0 + \"%\"\r\n            }\r\n            icon={<FaRegChessQueen size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Device Uptime\"\r\n            value={Math.round(uptimePercentage) + \"%\"}\r\n            icon={<LuCircleFadingArrowUp size={20} color=\"white\" />}\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2 lg:auto-rows-fr\">\r\n          <div id=\"Total Alert Overview Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Total Alert Overview</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4 !h-full flex items-center justify-center\">\r\n                <PieChartComponent\r\n                  data={alertCount}\r\n                  centerLabel=\" \"\r\n                  width=\"100%\"\r\n                  height={isSmallScreen ? 340 : 400}\r\n                />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Alert Trends Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Alert Trends</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <AreaLineChartComponent data={alertTrends?.data} />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Agent Performance Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Agent Performance</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <CleanBarGraph data={agentData} height={340} />\r\n                <div className=\"flex items-center gap-4 justify-center mt-4\">\r\n                  <SummaryView\r\n                    title=\"Total Agent\"\r\n                    value={metrics.totalAgents}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Avg. Performance\"\r\n                    value={metrics.averagePerformance + \"%\"}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Highest Performance\"\r\n                    value={metrics.highestPerformance + \"%\"}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Lowest Performance\"\r\n                    value={metrics.lowestPerformance + \"%\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"SLA Compliance Report Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">SLA Compliance Report</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <Scatter width=\"100%\" height={400} data={SLAReport?.data} />\r\n            </CardUI>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-start gap-2 w-full\">\r\n        <h1 className=\"text-text sm:text-xl text-lg\">Reporting & Analytics</h1>\r\n        <div className=\"opacity-95\">\r\n          <BreadcrumbUI />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TailsCard = ({ label = \"\", value = \"\", icon }) => {\r\n  return (\r\n    <div className=\"bg-card p-4 flex items-center justify-between gap-3 rounded-md w-full\">\r\n      <div>\r\n        <span className=\"text-sm\">{label}</span>\r\n        <h1 className=\"text-lg font-semibold\">{value}</h1>\r\n      </div>\r\n      <div className=\"p-2 bg-primary w-fit rounded-md text-lg\">{icon}</div>\r\n    </div>\r\n  );\r\n};\r\nconst SummaryView = ({ title, value }) => {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-2 \">\r\n        <div className=\"p-2 px-3 bg-primary rounded-lg text-white font-medium text-sm\">\r\n          {\" \"}\r\n          {value}\r\n        </div>\r\n        <div className=\"rounded-lg text-sm text-wrap\"> {title}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["__iconNode","ArrowRight","createLucideIcon","styles","StyleSheet","generateSampleData","days","_","i","dayjs","alertTypes","sampleData","day","alertCount","hour","minute","responseTime","slaTime","compliance","alertType","alertOverview","date","fall","offline","total","nonCompliance","percent","generateDailySLAData","rawData","grouped","item","renderTable","headers","rows","View","jsx","h","Text","row","cell","j","renderAlertBars","data","barHeight","jsxs","AnalyticsReportDocument","basicInfo","totalAlertOverview","alertTrends","agentPerformance","slaCompliance","Document","Page","AnalyticsReportPdf","pdfProps","PDFDownloadLink","loading","Button","AreaLineChartComponent","width","height","processData","generateFallbackData","dateMap","dateKey","eventType","formatXAxisDate","formatTooltipDate","dateData","sortedData","a","b","dates","tooltipDates","fallAlertData","deviceOfflineData","minDate","maxDate","diffTime","today","getLabelInterval","dataLength","fallAlertTotal","sum","value","deviceOfflineTotal","option","params","index","fallAlert","p","deviceOffline","name","ReactECharts","CleanBarGraph","agentData","scores","agent","maxScore","minScore","color","PieChartComponent","centerLabel","maxValue","calculateDurationBetweenTimes","startTime","endTime","start","diffMs","hours","minutes","seconds","formatSLATime","slaMinutes","formatChartData","createdDate","duration","time","eventMap","Scatter","chartData","totalAlerts","compliantAlerts","nonCompliantAlerts","compliantData","nonCompliantData","alert","responseTimeFormatted","slaTimeFormatted","event","created_at","closed_at","useCountStatistics","options","useQueryWrapper","QUERY_KEYS","getCountStatistics","useTotalAlertCount","getTotalAlertCounts","useAlertTrends","getTotalAlertTrends","useAgentPerformance","getAgentPerformance","useSLAReport","getSLAReport","calculateAgentMetrics","agents","totalAgents","totalScore","averagePerformance","highestAgent","highest","lowestAgent","lowest","formatSLAData","formattedDate","dayData","Analytics","appName","config","range","setRange","React","setAlertCount","useState","setAgentData","setPdfProps","mapping","countStatistics","isLoading","isError","error","uptime","_a","downtime","_b","uptimePercentage","totalAlertCount","isAlertLoading","isAlertError","isAlertSuccess","alertError","useEffect","isAlertTrendLoading","isAlertTrendError","alertTrendError","isAgentLoading","isAgentError","isAgentSuccess","agentError","transformedData","SLAReport","isSLALoading","isSLAError","slaError","calculateCompliancePercentage","percentage","isSmallScreen","useMediaQuery","metrics","formatMilliseconds","FallCount","_c","DeviceOfflineCount","_d","_e","alertTrendsSorted","agentDataWithPercentage","slaData","Navigation","Popover","PopoverTrigger","CalendarIcon","PopoverContent","Calendar","selectedRange","TailsCard","PiWarningCircleBold","FaRegClock","FaRegChessQueen","LuCircleFadingArrowUp","CardUI","SummaryView","Fragment","BreadcrumbUI","label","icon","title"],"mappings":"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","x_google_ignoreList":[0]}