{"version":3,"file":"index-BpZTHFok.js","sources":["../../src/Pages/TransectionHistory/utiles.jsx","../../src/Pages/TransectionHistory/index.jsx"],"sourcesContent":["import RefundsRequestModal from \"@/Components/RefundsModal/RefundsRequestModal\";\r\nimport { Tag, Tooltip } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport AdminFiled from \"../../Shared/AdminFiled/AdminFiled\";\r\nimport { FireTwoTone, StopOutlined, SyncOutlined } from \"@ant-design/icons\";\r\nimport alipay from \"../../assets/icon/payment-method-icons/alipay.svg\";\r\nimport jcb from \"../../assets/icon/payment-method-icons/jcb.svg\";\r\nimport gpay from \"../../assets/icon/payment-method-icons/gpay.svg\";\r\nimport applepay from \"../../assets/icon/payment-method-icons/applepay.svg\";\r\nimport unionpay from \"../../assets/icon/payment-method-icons/unionpay.svg\";\r\nimport mastercard from \"../../assets/icon/payment-method-icons/mastercard.svg\";\r\nimport paypal from \"../../assets/icon/payment-method-icons/paypal.svg\";\r\nimport visa from \"../../assets/icon/payment-method-icons/visa.svg\";\r\nimport SubscriptionUserAction from \"../../Components/ActionManu/SubscriptionUserAction\";\r\nimport { convertUnixToReadableDate, formatCreatedAt } from \"../../utils/helper\";\r\nimport SubDetails from \"../../Components/ActionManu/SubDetails\";\r\n\r\nconst TransactionIdColumn = ({ transactionId }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(transactionId);\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds\r\n  };\r\n  const displayedId =\r\n    transactionId?.length > 22\r\n      ? transactionId?.slice(0, 22) + \"...\"\r\n      : transactionId;\r\n\r\n  return (\r\n    <Tooltip title={copied ? \"Copied!\" : \"Click to copy\"}>\r\n      <span\r\n        className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap cursor-pointer\"\r\n        onClick={handleCopy}\r\n      >\r\n        {displayedId}\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport const paymentHistoryColumn = [\r\n  {\r\n    title: \"Transaction Date\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {formatCreatedAt(row?.created_at) || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Transaction ID\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap w-[100px]\">\r\n        <TransactionIdColumn transactionId={row?.transaction_id} />\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"User Email\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap w-[100px]\">\r\n        <TransactionIdColumn\r\n          transactionId={row?.metadata?.customer_details?.email}\r\n        />{\" \"}\r\n        ({row?.metadata?.customer_details?.name || \"N/A\"})\r\n      </span>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Payment Method\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap uppercase\">\r\n        {row?.metadata?.payment_method_types[0] || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Provider\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap capitalize\">\r\n        {row?.provider || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap uppercase\">\r\n          ${row?.amount || \"N/A\"} {row?.currency || \"USD\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Details\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5;\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\r\n            <SubDetails data={row} />\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n];\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { paymentHistoryColumn } from \"./utiles\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { getOrders } from \"@/api/ordersManage\";\r\nimport { fetchUsers } from \"../../redux/features/users/usersSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Input, Select } from \"antd\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { getPaymentHistory, getSubscriptions } from \"../../api/subscriptions\";\r\n\r\nexport default function TransectionHistory() {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [query, setQuery] = useState();\r\n  const [paymentHisotry, setPaymentHisotry] = useState([]);\r\n  const getSubscriptionsList = useCallback(() => {\r\n    getPaymentHistory({})\r\n      .then((res) => {\r\n        setPaymentHisotry(res || []);\r\n        console.log(res);\r\n      })\r\n      .then((err) => {\r\n        console.error(\"Error fetching subscriptions:\", err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    getSubscriptionsList();\r\n  }, [getSubscriptionsList]);\r\n  // useEffect(() => {\r\n  //   dispatch(fetchUsers({ role: \"end_users\" }));\r\n  // }, [dispatch]);\r\n  // const users = useSelector((state) => state.users.list || []);\r\n  // const status = useSelector((state) => state.users.status);\r\n  // const error = useSelector((state) => state.users.error);\r\n  const [page, SetPage] = useState({});\r\n  function getRefundsRequest() {\r\n    // setLoading(true);\r\n    // getOrders({\r\n    //   payment_status: \"pending\",\r\n    //   is_refund_requested: true,\r\n    //   ...page,\r\n    // }).then((res) => {\r\n    //   setRefundsRequest(res);\r\n    //   console.log(res?.data);\r\n    //   setLoading(false);\r\n    // });\r\n  }\r\n  useEffect(() => {\r\n    getRefundsRequest();\r\n  }, [page]);\r\n  // useEffect(() => {\r\n  //   console.log(\"============>\", users, status, error);\r\n  // }, [users]);\r\n  function handleChange() {}\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"refunds_request\"\r\n        className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6 mt-6\"\r\n      >\r\n        <div\r\n          id=\"Recently_Closed_Alerts_Header\"\r\n          className=\"w-full flex justify-between\"\r\n        >\r\n          {/* <Input\r\n            size=\"large\"\r\n            placeholder=\"Customer name, email...\"\r\n            prefix={<FiSearch className=\"text-gray-400\" />}\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            className=\" pr-20 border border-gray-300 max-w-[300px]\"\r\n            style={{ boxShadow: \"none\" }}\r\n          />\r\n          <Select\r\n            defaultValue=\"All\"\r\n            style={{ width: 150 }}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n            options={[\r\n              { value: \"All\", label: \"All Status\" },\r\n              { value: \"Active\", label: \"Active\" },\r\n              { value: \"Canceled\", label: \"Canceled\" },\r\n            ]}\r\n          /> */}\r\n        </div>\r\n        <SidebarContext.Provider\r\n          value={{\r\n            // total: subscribedUsers?.total,\r\n            page,\r\n            SetPage,\r\n            getList: getRefundsRequest,\r\n          }}\r\n        >\r\n          <CustomTable\r\n            pageSize={500}\r\n            className=\"lg:relative text-secondary text-base w-full h-[78vh] overflow-y-auto\"\r\n            loading={loading}\r\n            columns={paymentHistoryColumn}\r\n            tableData={paymentHisotry}\r\n            showPagination={false}\r\n          />\r\n        </SidebarContext.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["TransactionIdColumn","transactionId","copied","setCopied","useState","handleCopy","displayedId","jsx","Tooltip","paymentHistoryColumn","row","formatCreatedAt","jsxs","_b","_a","_d","_c","SubDetails","TransectionHistory","useDispatch","loading","setLoading","paymentHisotry","setPaymentHisotry","getSubscriptionsList","useCallback","getPaymentHistory","res","err","useEffect","page","SetPage","getRefundsRequest","Fragment","SidebarContext","CustomTable"],"mappings":"2fAiBA,MAAMA,EAAsB,CAAC,CAAE,cAAAC,KAAoB,CACjD,KAAM,CAACC,EAAQC,CAAS,EAAIC,WAAS,EAAK,EAEpCC,EAAa,IAAM,CACb,UAAA,UAAU,UAAUJ,CAAa,EAC3CE,EAAU,EAAI,EACd,WAAW,IAAMA,EAAU,EAAK,EAAG,GAAI,CAAA,EAEnCG,GACJL,GAAA,YAAAA,EAAe,QAAS,IACpBA,GAAA,YAAAA,EAAe,MAAM,EAAG,KAAM,MAC9BA,EAEN,OACGM,EAAA,IAAAC,EAAA,CAAQ,MAAON,EAAS,UAAY,gBACnC,SAAAK,EAAA,IAAC,OAAA,CACC,UAAU,sFACV,QAASF,EAER,SAAAC,CAAA,CAEL,CAAA,CAAA,CAEJ,EAEaG,EAAuB,CAClC,CACE,MAAO,mBACP,OAASC,GACNH,MAAA,OAAA,CAAK,UAAU,yEACb,SAAgBI,EAAAD,GAAA,YAAAA,EAAK,UAAU,GAAK,KACvC,CAAA,CAEJ,EACA,CACE,MAAO,iBACP,OAASA,GACPH,EAAAA,IAAC,OAAK,CAAA,UAAU,mFACd,SAAAA,EAAA,IAACP,EAAoB,CAAA,cAAeU,GAAA,YAAAA,EAAK,cAAgB,CAAA,EAC3D,CAEJ,EACA,CACE,MAAO,aACP,OAASA,gBACNE,OAAAA,EAAA,KAAA,OAAA,CAAK,UAAU,mFACd,SAAA,CAAAL,EAAA,IAACP,EAAA,CACC,eAAea,GAAAC,EAAAJ,GAAA,YAAAA,EAAK,WAAL,YAAAI,EAAe,mBAAf,YAAAD,EAAiC,KAAA,CAClD,EAAG,IAAI,MACLE,GAAAC,EAAAN,GAAA,YAAAA,EAAK,WAAL,YAAAM,EAAe,mBAAf,YAAAD,EAAiC,OAAQ,MAAM,GAAA,EACnD,EAEJ,EAEA,CACE,MAAO,iBACP,OAASL,GACP,OAAAH,OAAAA,EAAA,IAAC,OAAK,CAAA,UAAU,mFACb,WAAAO,EAAAJ,GAAA,YAAAA,EAAK,WAAL,YAAAI,EAAe,qBAAqB,KAAM,KAC7C,CAAA,EAEJ,EACA,CACE,MAAO,WACP,OAASJ,GACPH,EAAA,IAAC,QAAK,UAAU,oFACb,UAAKG,GAAA,YAAAA,EAAA,WAAY,KACpB,CAAA,CAEJ,EACA,CACE,MAAO,SACP,OAASA,GACPH,EAAA,IAAC,UACC,SAACK,EAAA,KAAA,OAAA,CAAK,UAAU,mFAAmF,SAAA,CAAA,KAC/FF,GAAA,YAAAA,EAAK,SAAU,MAAM,KAAEA,GAAA,YAAAA,EAAK,WAAY,KAAA,CAAA,CAC5C,CACF,CAAA,CAEJ,EAEA,CACE,MAAO,UACP,OAASA,GAGLH,EAAAA,IAAC,SACC,CAAA,SAAAA,EAAAA,IAAC,OAAK,CAAA,UAAU,mFACd,SAAAA,EAAAA,IAACU,EAAW,CAAA,KAAMP,EAAK,CAAA,CACzB,CACF,CAAA,CAGN,CACF,ECpGA,SAAwBQ,GAAqB,CAC1BC,EAAY,EAC7B,KAAM,CAACC,EAASC,CAAU,EAAIjB,WAAS,EAAI,EAEjBA,WAAS,EACnC,KAAM,CAACkB,EAAgBC,CAAiB,EAAInB,EAAA,SAAS,CAAE,CAAA,EACjDoB,EAAuBC,EAAAA,YAAY,IAAM,CAC7CC,EAAkB,CAAE,CAAA,EACjB,KAAMC,GAAQ,CACKJ,EAAAI,GAAO,CAAA,CAAE,EAC3B,QAAQ,IAAIA,CAAG,CAAA,CAChB,EACA,KAAMC,GAAQ,CACL,QAAA,MAAM,gCAAiCA,CAAG,CAAA,CACnD,EACA,QAAQ,IAAM,CACbP,EAAW,EAAK,CAAA,CACjB,CACL,EAAG,CAAE,CAAA,EACLQ,EAAAA,UAAU,IAAM,CACOL,GAAA,EACpB,CAACA,CAAoB,CAAC,EAOzB,KAAM,CAACM,EAAMC,CAAO,EAAI3B,EAAA,SAAS,CAAE,CAAA,EACnC,SAAS4B,GAAoB,CAW7B,CACAH,OAAAA,EAAAA,UAAU,IAAM,CACI,EACjB,CAACC,CAAI,CAAC,EAOLvB,MAAA0B,EAAAA,SAAA,CAAA,SAAArB,EAAA,KAAC,MAAA,CACC,GAAG,kBACH,UAAU,uFAEV,SAAA,CAAAL,EAAA,IAAC,MAAA,CACC,GAAG,gCACH,UAAU,6BAAA,CAsBZ,EACAA,EAAA,IAAC2B,EAAe,SAAf,CACC,MAAO,CAEL,KAAAJ,EACA,QAAAC,EACA,QAASC,CACX,EAEA,SAAAzB,EAAA,IAAC4B,EAAA,CACC,SAAU,IACV,UAAU,uEACV,QAAAf,EACA,QAASX,EACT,UAAWa,EACX,eAAgB,EAAA,CAClB,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ"}