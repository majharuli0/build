{"version":3,"file":"alertsOverview-DQuH3Ehw.js","sources":["../../src/Components/ActiveAlerts/ActiveAlertsCards.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/roomAndDetails.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/index.jsx","../../src/Pages/Supportnursing/Dashboards/Components/3xLineChart/MultiLineChart.jsx","../../src/Components/WeeklyPicker/WeeklyPicker.jsx","../../src/Pages/Supportnursing/Dashboards/mock.js","../../src/Pages/Supportnursing/Dashboards/Components/AlertsOverview/alertsOverview.jsx"],"sourcesContent":["import React, {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  useContext,\n} from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport AlertCloseModal from \"@/Components/ActiveAlerts/AlertCloseModal\";\nimport AlertBG from \"@/assets/AlertBGABS.svg\";\nimport { getAlertList } from \"@/api/elderlySupport\";\nimport dayjs from \"dayjs\";\nimport {\n  getAlertType,\n  transformDateAndTime,\n  transformDateAndTimeToDuration,\n  getAlertInfoViaEvent,\n  getAlertsGroup,\n} from \"@/utils/helper\";\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SidebarContext } from \"@/Context/CustomContext\";\nimport { useNotification } from \"@/Context/useNotification\";\n\nexport default function ActiveAlertsCards({\n  refreshAlertList,\n  isElderlyVisible = false,\n  isAlarmViewBtn = false,\n}) {\n  const { setModalDataList, modalDataList } = useContext(SidebarContext);\n  const [openAlertCloseModal, setOpenAlertCloseModal] = useState(false);\n  const [selectedAlert, setSelectedAlert] = useState(null);\n  const [alertList, setAlertList] = useState([]);\n  const PRIORITY_GROUPS = [\"Critical\"];\n  const navigate = useNavigate();\n  const { notificationEvent } = useNotification();\n\n  const prevAlertListLength = useRef(0);\n  const getAlertListData = useCallback(async () => {\n    let allAlerts = [];\n    let remainingCount = 30;\n\n    for (const group of PRIORITY_GROUPS) {\n      if (remainingCount <= 0) break;\n\n      const groupParams = getAlertsGroup(group);\n      if (!groupParams) continue;\n\n      try {\n        const response = await getAlertList({\n          to_date: \"2024-11-30\",\n          from_date: dayjs().format(\"YYYY-MM-DD\"),\n          is_resolved: false,\n          limit: remainingCount,\n          ...groupParams,\n        });\n\n        const fetchedAlerts = response.data || [];\n        allAlerts = [...allAlerts, ...fetchedAlerts];\n        remainingCount -= fetchedAlerts.length;\n\n        if (remainingCount <= 0) break;\n      } catch (err) {\n        console.error(`Error fetching ${group} alerts:`, err);\n      }\n    }\n    // Check if the new alert list length is greater than the previous one\n    if (allAlerts.length > prevAlertListLength.current) {\n      refreshAlertList();\n    }\n\n    // Update the previous length\n    prevAlertListLength.current = allAlerts.length;\n    setAlertList(allAlerts);\n    // setAlertList([\n    //   {\n    //     event: 2,\n    //   },\n    // ]);\n  }, []);\n\n  useEffect(() => {\n    getAlertListData();\n  }, [getAlertListData]);\n\n  const settings = {\n    dots: alertList.length >= 2,\n    infinite: alertList.length > 2,\n    speed: 500,\n    slidesToShow: alertList.length === 1 ? 1 : 2,\n    slidesToScroll: 1,\n    draggable: true,\n    arrows: false,\n    appendDots: (dots) => (\n      <div\n        style={{\n          backgroundColor: \"transparent\",\n          borderRadius: \"10px\",\n          padding: \"2px\",\n        }}\n      >\n        <ul id=\"dots\" style={{ margin: \"0px\" }}>\n          {dots}\n        </ul>\n      </div>\n    ),\n    responsive: [\n      {\n        breakpoint: 1200,\n        settings: {\n          slidesToShow: alertList.length === 1 ? 1 : 1,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 800,\n        settings: { slidesToShow: 1, slidesToScroll: 1 },\n      },\n    ],\n  };\n\n  const handleViewClick = (row) => {\n    window.scrollTo(0, 0);\n    navigate(\n      `/supporter/elderlies/elderly-profile/${row.elderly_id}?tab=overview`\n    );\n  };\n  useEffect(() => {\n    if (notificationEvent) {\n      getAlertListData();\n    }\n  }, [notificationEvent]);\n  return (\n    <>\n      {alertList.length > 0 && (\n        <div\n          id=\"ActiveAlertsCards\"\n          className=\"w-full mb-2 transition-all duration-300\"\n        >\n          <Slider {...settings} className=\"w-full transition-all duration-300\">\n            {alertList.map((item, index) => (\n              <div\n                key={index}\n                className=\"px-2 overflow-hidden transition-all duration-300 relative w-full\"\n              >\n                <div\n                  id=\"alertItem\"\n                  className={`rounded-2xl overflow-hidden w-full ${\n                    getAlertInfoViaEvent(item)?.label === \"Critical\"\n                      ? \"bg-red-500\"\n                      : getAlertInfoViaEvent(item)?.label === \"Warning\"\n                      ? \"bg-yellow-500\"\n                      : \"bg-blue-500\"\n                  } p-4 w-full flex justify-between items-center`}\n                >\n                  <div id=\"leftSide\" className=\"z-50\">\n                    <div id=\"alertItemHeader\">\n                      <div\n                        id=\"alertItemTitleAndDescription\"\n                        className=\"flex flex-col gap-6\"\n                      >\n                        <div id=\"time\" className=\"flex gap-2\">\n                          {isElderlyVisible && (\n                            <span\n                              onClick={() => handleViewClick(item)}\n                              className=\"bg-white font-semibold p-1 px-2 pl-1 rounded-full text-text-primary flex items-center gap-2 cursor-pointer hover:opacity-90\"\n                            >\n                              <FaUserCircle\n                                size={22}\n                                style={{ opacity: \"0.8\" }}\n                              />\n                              {item?.elderly_name}\n                            </span>\n                          )}\n                          <span className=\"bg-white font-semibold p-1 px-2 rounded-full text-text-primary flex items-center gap-2\">\n                            <div\n                              id=\"dot\"\n                              className={`w-2 h-2 ${\n                                getAlertInfoViaEvent(item)?.label === \"Critical\"\n                                  ? \"bg-red-500\"\n                                  : getAlertInfoViaEvent(item)?.label ===\n                                    \"Warning\"\n                                  ? \"bg-yellow-500\"\n                                  : \"bg-blue-500\"\n                              } rounded-full animate-ping`}\n                            ></div>\n                            {transformDateAndTime(item.created_at)}\n                          </span>\n                          <span className=\"bg-white font-semibold p-1 px-2 rounded-full text-text-primary\">\n                            <AutoUpdatingDuration date={item.created_at} />\n                          </span>\n                        </div>\n                        <div id=\"alertItemTitleAndDescription\">\n                          <h1 className=\"text-xl font-bold text-white m-0\">\n                            {getAlertInfoViaEvent(item)?.title}\n                          </h1>\n                          <p className=\"text-white text-base m-0 leading-none\">\n                            {getAlertInfoViaEvent(item)?.message}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {isAlarmViewBtn ? (\n                    <div id=\"btn\" className=\"z-50 w-fit\">\n                      <span\n                        onClick={() => {\n                          setSelectedAlert(item);\n                          navigate(\"/support-nurnt/dashboard/alarm-detail\", {\n                            state: { alertData: item, id: item?.elderly_id },\n                          });\n                        }}\n                        className=\"text-sm p-2 px-3 bg-white rounded-xl text-text-primary cursor-pointer hover:bg-white/90 transition-all duration-300 text-nowrap\"\n                      >\n                        View Alert\n                      </span>\n                    </div>\n                  ) : (\n                    <div id=\"rightSide\" className=\"z-50 w-fit\">\n                      <span\n                        onClick={() => {\n                          setSelectedAlert(item);\n                          setOpenAlertCloseModal(true);\n                        }}\n                        className=\"text-sm p-2 px-3 bg-white rounded-xl text-text-primary cursor-pointer hover:bg-white/90 transition-all duration-300 text-nowrap\"\n                      >\n                        Mark as Complete\n                      </span>\n                    </div>\n                  )}\n\n                  <img\n                    src={AlertBG}\n                    alt=\"\"\n                    className=\"absolute top-0 right-0\"\n                  />\n                </div>\n              </div>\n            ))}\n          </Slider>\n        </div>\n      )}\n      <AlertCloseModal\n        openAlertCloseModal={openAlertCloseModal}\n        setOpenAlertCloseModal={setOpenAlertCloseModal}\n        selectedAlert={selectedAlert}\n        getAlertListDatas={() => {\n          getAlertListData();\n          refreshAlertList();\n        }}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useCallback, useState, useRef } from \"react\";\nimport \"./style.css\";\nimport Room1 from \"@/Components/RoomMap/RoomMap3\";\nimport Room2 from \"@/Components/RoomMap/RoomMap4\";\n\nimport {\n  transformDateAndTime,\n  transformDateAndTimeToDuration,\n  getAlertInfoViaEvent,\n  decodePosition,\n} from \"@/utils/helper\";\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\nimport { WebSocketProvider } from \"@/Context/WebSoketHook\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { subscribeToMqtt, unsubscribeFromMqtt } from \"@/api/deviceReports\";\nimport useWebSocket from \"@/hook/useWebSoket\";\nexport default function RoomAndDetails({ data: roomData = {} }) {\n  const navigate = useNavigate();\n  const [position, setPosition] = useState(null);\n  const previousDeviceRef = useRef(null);\n  const heartBreathRateRef = useRef(false);\n  const [heartBreathRateActive, setHeartBreathRateActive] = useState(false);\n  const timeoutRef = useRef;\n  const getBackgroundColor = (type) => {\n    switch (type) {\n      case \"Info\":\n        return \"bg-blue-500\";\n      case \"Critical\":\n        return \"bg-red-500\";\n      case \"Warning\":\n        return \"bg-yellow-500\";\n      default:\n        return \"bg-blue-500\";\n    }\n  };\n\n  useEffect(() => {\n    const deviceCode = roomData?.rooms?.device_no;\n    if (deviceCode) {\n      if (\n        previousDeviceRef.current &&\n        previousDeviceRef.current !== deviceCode\n      ) {\n        unsubscribeFromMqtt({\n          uid: previousDeviceRef.current,\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\n        })\n          .then(() => {})\n          .catch((err) => console.error(`Error unsubscribing: ${err}`));\n      }\n\n      // Subscribe to the new device\n      subscribeToMqtt({\n        uid: deviceCode,\n        messageType: [\"1\", \"2\", \"3\", \"4\"],\n        topics: {\n          pub: [deviceCode],\n        },\n      })\n        .then(() => {})\n        .catch((err) => console.error(`Error subscribing: ${err}`));\n\n      // Update the reference to the current device\n      previousDeviceRef.current = deviceCode;\n    }\n\n    // Cleanup function for unmount or page exit\n    return () => {\n      if (previousDeviceRef.current) {\n        unsubscribeFromMqtt({\n          uid: previousDeviceRef.current,\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\n        })\n          .then(() => {})\n          .catch((err) =>\n            console.error(`Error during cleanup unsubscribe: ${err}`)\n          );\n      }\n    };\n  }, [roomData]);\n\n  // function handleDecode(code) {\n  //   const data = decodePosition(code);\n  //   const modifiedPeopleData = [...data];\n\n  //   if (\n  //     modifiedPeopleData[0]?.postureIndex === 4 &&\n  //     heartBreathRateRef.current\n  //   ) {\n  //     // Modify the first person (index 0) posture\n  //     modifiedPeopleData[0].postureIndex = 6;\n  //     modifiedPeopleData[0].posture = \"Resident on Bed\";\n  //     modifiedPeopleData[0].color = \"#252F67\";\n  //   }\n\n  //   setPosition(modifiedPeopleData);\n  // }\n  // function handleHeartBreathUpdate() {\n  //   setHeartBreathRateActive(true);\n  //   heartBreathRateRef.current = true;\n\n  //   clearTimeout(timeoutRef.current); // Clear any existing timeout\n  //   timeoutRef.current = setTimeout(() => {\n  //     setHeartBreathRateActive(false);\n  //     heartBreathRateRef.current = false;\n  //   }, 5000);\n  // }\n  // useWebSocket({\n  //   onMessage: (data) => {\n  //     const payload = JSON.parse(data?.message)?.payload;\n  //     if (\n  //       payload?.deviceCode === roomData?.rooms?.device_no &&\n  //       (payload?.position || payload?.heartbreath)\n  //     ) {\n  //       if (payload?.position) {\n  //         handleDecode(payload.position);\n  //       }\n  //       if (payload?.heartbreath) {\n  //         handleHeartBreathUpdate();\n  //       }\n  //     }\n  //   },\n  //   dependencies: [roomData],\n  // });\n  return (\n    <div className=\"w-full flex flex-col gap-4 p-4 pr-0 h-full pt-0\">\n      <div\n        id=\"roomAlertHeader\"\n        className={`alert-header !h-[75px] flex justify-between items-center relative px-4 overflow-hidden rounded-lg ${getBackgroundColor(\n          getAlertInfoViaEvent(roomData)?.label\n        )}`}\n      >\n        <div className=\"loader\"></div>\n        <div className=\"text-container flex flex-col gap-0 h-full justify-center text-white\">\n          <p className=\"text-sm text-gray-100 m-0 font-medium\">\n            {roomData.room_name}\n          </p>\n          <h2 className=\"text-lg font-bold m-0 leading-none \">\n            {getAlertInfoViaEvent(roomData)?.title}\n          </h2>\n        </div>\n        <span\n          onClick={() => {\n            navigate(\n              `/supporter/elderlies/elderly-profile/${roomData?.elderly_id}`\n            );\n          }}\n          className=\"text-sm text-gray-100 cursor-pointer p-3 py-2 bg-white/0 rounded-lg hover:bg-white/10 transition-all duration-300\"\n        >\n          View Elderly\n        </span>\n      </div>\n      <div>\n        <div className=\"flex flex-col gap-0 border-b border-gray-200 pb-2 \">\n          <h2 className=\"text-lg font-bold m-0 leading-none\">\n            {roomData.elderly_name}\n          </h2>\n          <p className=\"text-sm text-gray-500 m-0\">{roomData.address}</p>\n        </div>\n        <div></div>\n      </div>\n\n      <div id=\"roomMapAndDetails\" className=\"flex gap-4 h-full overflow-hidden\">\n        <WebSocketProvider deviceId={roomData?.rooms?.device_no}>\n          <div className=\"map-container w-2/3 border overflow-hidden h-full\">\n            {roomData?.rooms?.mount_type === 1 &&\n              roomData?.rooms?.is_device_bind && (\n                <Room1 roomInfo={roomData?.rooms} />\n              )}\n            {roomData?.rooms?.mount_type === 2 &&\n              roomData?.rooms?.is_device_bind && (\n                <Room2 roomInfo={roomData?.rooms} />\n              )}\n            {!roomData?.rooms?.is_device_bind && (\n              <span className=\"w-full h-full flex items-center justify-center\">\n                <p> No Device Data Available</p>\n              </span>\n            )}\n          </div>\n        </WebSocketProvider>\n        <div className=\"details-container w-1/3 \">\n          <div className=\"flex flex-col gap-0 p-3\">\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\n              {transformDateAndTime(roomData.created_at)}\n            </h2>\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">\n              Time of Incident\n            </p>\n          </div>\n          <div className=\"flex flex-col gap-0 p-3\">\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\n              <AutoUpdatingDuration date={roomData.created_at} />\n            </h2>\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">Alert Life</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  useMemo,\n  useContext,\n} from \"react\";\nimport { Segmented, Badge, Space, Spin, Empty, Collapse } from \"antd\";\nimport RoomAndDetails from \"./roomAndDetails\";\nimport { getAlertList } from \"@/api/elderlySupport\";\nimport { getAlertInfoViaEvent, getAlertsGroup } from \"@/utils/helper\";\nimport dayjs from \"dayjs\";\nimport debounce from \"lodash/debounce\";\nimport { SidebarContext } from \"@/Context/CustomContext\";\nimport { useNotification } from \"@/Context/useNotification\";\n\nconst { Panel } = Collapse;\n\nexport default function RoomView() {\n  const { setModalDataList, modalDataList } = useContext(SidebarContext);\n  const { notificationEvent } = useNotification();\n\n  const [alertType, setAlertType] = useState(\"All\");\n  const [alertList, setAlertList] = useState([]);\n  const [activeItem, setActiveItem] = useState(null);\n  const [selectedAlert, setSelectedAlert] = useState(null);\n  const [alertTypeQuery, setAlertTypeQuery] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const listRef = useRef(null);\n\n  // Fetch alerts from the API\n  const getAlertListData = useCallback(() => {\n    if (!hasMore || loading) return;\n    setLoading(true);\n    getAlertList({\n      to_date: \"2024-11-30\",\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\n      is_resolved: false,\n      limit: 20,\n      show_device_area: 1,\n      show_device_boundaries: 1,\n      page,\n      ...alertTypeQuery,\n    })\n      .then((res) => {\n        setAlertList((prev) => [...prev, ...res.data]);\n        if (page >= res.totalPages) {\n          setHasMore(false);\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setLoading(false);\n      });\n  }, [alertTypeQuery, page, hasMore, loading]);\n\n  useEffect(() => {\n    getAlertListData();\n  }, [page, alertTypeQuery]);\n\n  // Set the first alert as selected by default\n  useEffect(() => {\n    if (alertList.length > 0 && !activeItem) {\n      const firstAlert = alertList[0];\n      setActiveItem(firstAlert._id);\n      setSelectedAlert(firstAlert);\n    }\n  }, [alertList, activeItem]);\n\n  // Handle alert selection\n  const onChange = (key) => {\n    setActiveItem(key);\n    const selected = alertList.find((alert) => alert._id === key);\n    setSelectedAlert(selected);\n  };\n\n  // Handle scroll for pagination\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!listRef.current || loading || !hasMore) return;\n\n      const { scrollTop, scrollHeight, clientHeight } = listRef.current;\n      if (scrollTop + clientHeight >= scrollHeight - 50) {\n        setPage((prevPage) => prevPage + 1);\n      }\n    }, 200),\n    [loading, hasMore]\n  );\n\n  // Handle segment filter change\n  const onSegmentChange = (value) => {\n    setAlertTypeQuery(getAlertsGroup(value));\n    setPage(1);\n    setAlertList([]);\n    setHasMore(true);\n  };\n  useEffect(() => {\n    if (notificationEvent) {\n      getAlertListData();\n    }\n  }, [notificationEvent]);\n  useEffect(() => {\n    const listElement = listRef.current;\n    if (listElement) {\n      listElement.addEventListener(\"scroll\", handleScroll);\n    }\n    return () => {\n      if (listElement) {\n        listElement.removeEventListener(\"scroll\", handleScroll);\n      }\n    };\n  }, [handleScroll]);\n\n  // Group alerts by room_name using useMemo for performance\n  const groupedAlerts = useMemo(() => {\n    return alertList.reduce((acc, alert) => {\n      const roomName = alert.room_name;\n      if (!acc[roomName]) {\n        acc[roomName] = [];\n      }\n      acc[roomName].push(alert);\n      return acc;\n    }, {});\n  }, [alertList]);\n\n  // Function to map alert type labels to colors\n  const getColorForLabel = (label) => {\n    switch (label) {\n      case \"Critical\":\n        return \"red\";\n      case \"Warning\":\n        return \"orange\";\n      case \"Info\":\n        return \"blue\";\n      default:\n        return \"gray\";\n    }\n  };\n\n  return (\n    <div className=\"w-full flex justify-center items-center h-[495px] overflow-hidden\">\n      <div className=\"w-[30%] flex flex-col gap-4 h-full\">\n        <Segmented\n          style={{ width: \"100%\" }}\n          block\n          options={segmentsForAlertView}\n          onChange={(value) => onSegmentChange(value)}\n        />\n        <div\n          ref={listRef}\n          className=\"w-full overflow-auto\"\n          style={{ height: \"440px\" }}\n        >\n          {alertList.length === 0 && !loading && (\n            <Empty description=\"No active alerts available\" />\n          )}\n          {alertList.length > 0 && (\n            <Collapse>\n              {Object.entries(groupedAlerts).map(([roomName, alerts]) => {\n                // Get unique alert types for this room\n                const uniqueTypes = [\n                  ...new Set(\n                    alerts.map((alert) => getAlertInfoViaEvent(alert)?.label)\n                  ),\n                ];\n                return (\n                  <Panel\n                    key={roomName}\n                    header={\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-black font-semibold\">\n                          {roomName}\n                        </span>\n                        {/* <Space>\n                          {uniqueTypes.map((type) => (\n                            <Badge key={type} color={getColorForLabel(type)} />\n                          ))}\n                        </Space> */}\n                      </div>\n                    }\n                  >\n                    {alerts &&\n                      alerts.map((alert) => (\n                        <div\n                          key={alert._id}\n                          onClick={() => onChange(alert._id)}\n                          className={`flex justify-between items-center p-2 cursor-pointer rounded-md px-4 ${\n                            activeItem === alert._id ? \"bg-gray-100\" : \"\"\n                          }`}\n                        >\n                          <span className=\"text-[14px] font-semibold\">\n                            {dayjs(alert.created_at).format(\"hh:mm:ss a\")}\n                          </span>\n                          <Badge\n                            color={getColorForLabel(\n                              getAlertInfoViaEvent(alert)?.label\n                            )}\n                            size=\"large\"\n                          />\n                        </div>\n                      ))}\n                  </Panel>\n                );\n              })}\n            </Collapse>\n          )}\n          {loading && (\n            <div className=\"w-full flex justify-center py-4\">\n              <Spin />\n            </div>\n          )}\n          {!hasMore && alertList.length > 0 && (\n            <div className=\"w-full text-center py-4 text-gray-500\">\n              No more alerts to load\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"w-[70%] h-full\">\n        {selectedAlert ? (\n          <RoomAndDetails data={selectedAlert} />\n        ) : (\n          <Empty description=\"Select an alert to view details\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const segmentsForAlertView = [\n  { label: \"All\", value: \"All\" },\n  { label: \"Critical\", value: \"Critical\" },\n  { label: \"Warning\", value: \"Warning\" },\n  { label: \"Info\", value: \"Info\" },\n];\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport \"echarts/lib/chart/line\";\nimport { Empty } from \"antd\";\nimport dayjs from \"dayjs\";\n\nexport default function MultiLineChart({ data = [], fromDate, toDate }) {\n  // Function to generate week days between fromDate and toDate\n  const generateWeekDays = (fromDate, toDate) => {\n    const days = [];\n    let current = dayjs(fromDate);\n    while (current.isBefore(toDate) || current.isSame(toDate, \"day\")) {\n      days.push(current.format(\"YYYY-MM-DD\"));\n      current = current.add(1, \"day\");\n    }\n    return days;\n  };\n\n  // Map data into a structured format for the chart\n  const weekDays = generateWeekDays(fromDate, toDate);\n\n  const structuredData = weekDays.map((day) => {\n    const critical = data\n      .filter((item) => item.date === day && item.alarm_group === \"Critical\")\n      .reduce((sum, item) => sum + item.count, 0);\n\n    const warning = data\n      .filter((item) => item.date === day && item.alarm_group === \"Warning\")\n      .reduce((sum, item) => sum + item.count, 0);\n\n    const problem = data\n      .filter((item) => item.date === day && item.alarm_group === \"Info\")\n      .reduce((sum, item) => sum + item.count, 0);\n\n    return { day: dayjs(day).format(\"ddd\"), critical, warning, problem };\n  });\n\n  const option = {\n    tooltip: {\n      trigger: \"axis\",\n    },\n    grid: {\n      left: \"0%\",\n      right: \"0%\",\n      bottom: \"20%\",\n      top: \"10%\",\n      containLabel: true,\n    },\n    legend: {\n      show: true,\n      orient: \"horizontal\", // Align horizontally\n      bottom: \"10%\", // Position at the bottom\n    },\n    xAxis: {\n      type: \"category\",\n      data: structuredData.map((item) => item.day),\n    },\n    yAxis: {\n      type: \"value\",\n    },\n    series: [\n      {\n        name: \"Critical\",\n        type: \"line\",\n        data: structuredData.map((item) => item.critical),\n        itemStyle: { color: \"#FF0000\" },\n        smooth: true,\n      },\n      {\n        name: \"Warning\",\n        type: \"line\",\n        data: structuredData.map((item) => item.warning),\n        itemStyle: { color: \"#FFA500\" },\n        smooth: true,\n      },\n      {\n        name: \"Problem\",\n        type: \"line\",\n        data: structuredData.map((item) => item.problem),\n        itemStyle: { color: \"#800080\" },\n        smooth: true,\n      },\n    ],\n  };\n\n  if (!data.length) {\n    return (\n      <div className=\"h-full flex items-center w-full justify-center\">\n        <Empty description=\"No data available to show\" />\n      </div>\n    );\n  }\n\n  return (\n    <ReactEcharts\n      option={option}\n      style={{ width: \"100% !important\", height: \"100%\" }}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { DatePicker, Space } from \"antd\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\n\ndayjs.extend(customParseFormat);\ndayjs.extend(weekOfYear); // Extend dayjs to use week of year\n\nconst WeeklyMonthlyPicker = ({ placeholder, style, handleChange, value }) => {\n  const [placeholderText, setPlaceholderText] = useState(\"This Week\");\n  // Function to format the selected week\n  const formatWeek = (value) => {\n    const start = dayjs(value).startOf(\"week\").format(\"YYYY-MM-DD\"); // Get start date of week\n    const end = dayjs(value).endOf(\"week\").format(\"YYYY-MM-DD\"); // Get end date of week\n    return {\n      week: dayjs(value).week(),\n      start,\n      end,\n    }; // e.g., { week: 42, start: \"2024-10-15\", end: \"2024-10-21\" }\n  };\n\n  // Function to display the formatted string in the DatePicker\n  const displayFormat = (value) => {\n    return `Week ${formatWeek(value).week}`; // Return week number for display\n  };\n  useEffect(() => {\n    if (value) {\n      const currentWeek = dayjs().week();\n      const selectedWeek = dayjs(value.start).week();\n\n      if (selectedWeek === currentWeek - 1) {\n        setPlaceholderText(\"Last Week\");\n      } else {\n        setPlaceholderText(`Week ${selectedWeek}`);\n      }\n    } else {\n      setPlaceholderText(\"This Week\");\n    }\n  }, [value]);\n  return (\n    <DatePicker\n      style={style}\n      placeholder={placeholderText}\n      size=\"large\"\n      format={displayFormat} // Use the display format function\n      picker={\"week\"}\n      onChange={(selectedDate) => {\n        if (selectedDate) {\n          const formatted = formatWeek(selectedDate);\n          handleChange(formatted);\n        } else {\n          handleChange(\"\");\n          setPlaceholderText(\"This Week\");\n        }\n      }}\n    />\n  );\n};\n\nexport default WeeklyMonthlyPicker;\n","export const generateRandomAlerts = (count) => {\n  const alertTypes = [\"Critical\", \"Info\", \"Warning\"];\n  const rooms = [\"Living Room\", \"Kitchen\", \"Bedroom\", \"Bathroom\"];\n  const names = [\n    \"John Doe\",\n    \"Jane Doe\",\n    \"Alice Smith\",\n    \"Bob Johnson\",\n    \"Emma Brown\",\n    \"Michael Wilson\",\n    \"Sarah Davis\",\n    \"David Miller\",\n    \"Lisa Garcia\",\n    \"James Rodriguez\",\n  ];\n  const alertNames = [\n    \"Fall Detected\",\n    \"Fire Detected\",\n    \"Inactivity Alert\",\n    \"Medication Reminder\",\n    \"Unusual Behavior\",\n    \"High Temperature\",\n    \"Low Temperature\",\n    \"Water Leak\",\n    \"Door Left Open\",\n    \"Window Broken\",\n  ];\n  const eventNames = [\n    \"Medication Taken\",\n    \"Medication Not Taken\",\n    \"Medication Reminder\",\n  ];\n  const disabilityTypes = [\"Wheelchair\", \"Crutches\", \"Cane\", \"None\"];\n  const allergies = [\"Yes\", \"No\"];\n  const diseases = [\"Yes\", \"No\"];\n  const medications = [\"Yes\", \"No\"];\n  const activeAlert = [\"1\", \"4\", \"2\", \"No\"];\n  const isAlert = [\"True\", \"False\"];\n  return Array.from({ length: count }, (_, index) => ({\n    _id: index + 1,\n    alertType: alertTypes[Math.floor(Math.random() * alertTypes.length)],\n    elderlyName: names[Math.floor(Math.random() * names.length)],\n    alertName: alertNames[Math.floor(Math.random() * alertNames.length)],\n    roomId: String(index + 1),\n    roomName: rooms[Math.floor(Math.random() * rooms.length)],\n    alertLifetime: `${Math.floor(Math.random() * 10)}m ${Math.floor(\n      Math.random() * 60\n    )}s`,\n    time: new Date().toLocaleString(),\n    alertDescription: `${\n      alertNames[Math.floor(Math.random() * alertNames.length)]\n    } in the ${rooms[Math.floor(Math.random() * rooms.length)]}`,\n    status: \"Active\",\n    isAlert: isAlert[Math.floor(Math.random() * isAlert.length)],\n    address: \"123 Main St, Anytown, USA\",\n    coordinates: {\n      latitude: 37.7749 + (Math.random() - 0.5) * 0.01,\n      longitude: -122.4194 + (Math.random() - 0.5) * 0.01,\n    },\n    //for close alert\n    closedAt: new Date().toLocaleString(),\n    closedBy: names[Math.floor(Math.random() * names.length)],\n    //for event\n    eventName: eventNames[Math.floor(Math.random() * eventNames.length)],\n    disabilityType:\n      disabilityTypes[Math.floor(Math.random() * disabilityTypes.length)],\n    additionalInfo: \"This is additional info for event\",\n    hospital: {\n      name: \"Hospital For Special Surgery\",\n      phone: \"1234567890\",\n      latitude: -33.8743612,\n      longitude: 151.2261153,\n    },\n    allergies: allergies[Math.floor(Math.random() * allergies.length)],\n    diseases: diseases[Math.floor(Math.random() * diseases.length)],\n    medications: medications[Math.floor(Math.random() * medications.length)],\n    activeAlert: activeAlert[Math.floor(Math.random() * activeAlert.length)],\n    alertComments: \"This is alert comments\",\n    alertLifespan: [\n      {\n        dateTime: \"24-01-2024 10:00 AM\",\n        description: \"At 10:00 AM, the alert was created\",\n      },\n      {\n        dateTime: \"24-01-2024 10:30 AM\",\n        description:\n          \"Agent (petar) clicked on the incident in 10:30 (30mins later)\",\n      },\n      {\n        dateTime: \"24-01-2024 10:32 AM\",\n        description:\n          \"Agent (petar) clicked on “Call Elderly” in 10:32 (2mins later)\",\n      },\n      {\n        dateTime: \"24-01-2024 10:34 AM\",\n        description:\n          \"Agent (petar) clicked on “Call 911” in 10:34 (2mins later)\",\n      },\n      {\n        dateTime: \"24-01-2024 10:36 AM\",\n        description:\n          \"Agent (petar) clicked on “Close Alert” in 10:36 (2mins later)\",\n      },\n    ],\n  }));\n};\nexport const alerts = generateRandomAlerts(14);\nexport const activeAlertsTableData = generateRandomAlerts(20);\nexport const recentlyClosedAlertsTableData = generateRandomAlerts(20);\nexport const eventsTableData = generateRandomAlerts(20);\nexport const elderlyListTableData = generateRandomAlerts(20);\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { ConfigProvider } from \"antd\";\nimport WeeklyPicker from \"@/Components/WeeklyPicker/WeeklyPicker\";\nimport MultiLineChart from \"../../Components/3xLineChart/MultiLineChart\";\nimport { getAlertsOverviewGraph } from \"@/api/elderlySupport\";\nimport dayjs from \"dayjs\";\n\nexport default function AlertsOverview() {\n  const [fromDate, setFromDate] = useState(\n    dayjs().subtract(6, \"days\").format(\"YYYY-MM-DD\")\n  );\n  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\n  const [overviewData, setoverviewData] = useState([]);\n  const getAlersOverview = useCallback(() => {\n    getAlertsOverviewGraph({\n      from_date: toDate,\n      to_date: fromDate,\n    })\n      .then((res) => {\n        setoverviewData(res?.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [toDate]);\n  useEffect(() => {\n    getAlersOverview();\n  }, [getAlersOverview]);\n\n  function handleWeeklyMonthly(e) {\n    if (e) {\n      setFromDate(e.start);\n      setToDate(e.end);\n    } else {\n      setFromDate(dayjs().subtract(6, \"days\").format(\"YYYY-MM-DD\"));\n      setToDate(dayjs().format(\"YYYY-MM-DD\"));\n    }\n  }\n\n  return (\n    <div className=\"w-full h-full\">\n      <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\n        <h1 className=\"text-[24px] font-bold\">Overview</h1>\n        <div id=\"chartController\" className=\"flex gap-4\">\n          <ConfigProvider\n            theme={{\n              token: {\n                fontFamily: \"Baloo2\",\n                colorPrimary: \"#8086AC\",\n                colorLinkActive: \"#8086AC\",\n                colorLinkHover: \"#8086AC\",\n                colorLink: \"#8086AC\",\n              },\n            }}\n          >\n            <WeeklyPicker\n              style={{ height: \"fit-content\" }}\n              handleChange={(e) => handleWeeklyMonthly(e)}\n            />\n          </ConfigProvider>\n        </div>\n      </div>\n      <div className=\"w-full h-full\">\n        <MultiLineChart\n          data={overviewData}\n          fromDate={fromDate}\n          toDate={toDate}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["ActiveAlertsCards","refreshAlertList","isElderlyVisible","isAlarmViewBtn","setModalDataList","modalDataList","useContext","SidebarContext","openAlertCloseModal","setOpenAlertCloseModal","useState","selectedAlert","setSelectedAlert","alertList","setAlertList","PRIORITY_GROUPS","navigate","useNavigate","notificationEvent","useNotification","prevAlertListLength","useRef","getAlertListData","useCallback","allAlerts","remainingCount","group","groupParams","getAlertsGroup","fetchedAlerts","getAlertList","dayjs","err","useEffect","settings","dots","jsx","handleViewClick","row","jsxs","Fragment","Slider","item","index","_a","getAlertInfoViaEvent","_b","FaUserCircle","_c","_d","transformDateAndTime","AutoUpdatingDuration","_e","_f","AlertBG","AlertCloseModal","RoomAndDetails","roomData","position","setPosition","previousDeviceRef","heartBreathRateActive","setHeartBreathRateActive","getBackgroundColor","type","deviceCode","unsubscribeFromMqtt","subscribeToMqtt","WebSocketProvider","Room1","_g","Room2","_h","Panel","Collapse","RoomView","alertType","setAlertType","activeItem","setActiveItem","alertTypeQuery","setAlertTypeQuery","loading","setLoading","page","setPage","hasMore","setHasMore","listRef","res","prev","firstAlert","onChange","key","selected","alert","handleScroll","debounce","scrollTop","scrollHeight","clientHeight","prevPage","onSegmentChange","value","listElement","groupedAlerts","useMemo","acc","roomName","getColorForLabel","label","Segmented","segmentsForAlertView","Empty","alerts","Badge","Spin","MultiLineChart","data","fromDate","toDate","structuredData","days","current","day","critical","sum","warning","problem","option","ReactEcharts","customParseFormat","weekOfYear","WeeklyMonthlyPicker","placeholder","style","handleChange","placeholderText","setPlaceholderText","formatWeek","start","end","displayFormat","currentWeek","selectedWeek","DatePicker","selectedDate","formatted","generateRandomAlerts","count","alertTypes","rooms","names","alertNames","eventNames","disabilityTypes","allergies","diseases","medications","activeAlert","isAlert","_","AlertsOverview","setFromDate","setToDate","overviewData","setoverviewData","getAlersOverview","getAlertsOverviewGraph","handleWeeklyMonthly","e","ConfigProvider","WeeklyPicker"],"mappings":"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"}