{"version":3,"mappings":"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","names":["HealthOverviewTails","sleepData","useContext","CustomContext","useState","jsxs","jsx","HeartRateComponent","_a","BreathingRateComponent","_b","EventSummary","heartRate","FaLungs","breathingRate","eventTypes","eventData","eventCounts","acc","event","totalEvents","sum","count","abnormalCount","criticalCount","warningCount","eventType","priority","IoBarcodeOutline","Tooltip","eventInfo","ApneaIndexStatistic","lazy","__vitePreload","ApneaIndexDistribution","RespiratoryRate","HeartRate","HeartRateAnnomalyStatistic","HeartRateDistribution","BreathRateDistribution","LiveHeartRate","LiveBreathRate","ChartWrapper","children","height","width","Suspense","HealthTab","registerRef","useRefContext","stepsRef","useRef","useEffect","key"],"ignoreList":[],"sources":["../../src/Pages/Elderlies/Components/TabContents/Health/Components/HealthOverviewTails.jsx","../../src/Pages/Elderlies/Components/TabContents/Health/HealthTab.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Tooltip } from \"antd\";\r\nimport { FaLungs } from \"react-icons/fa\";\r\nimport { FaHeartbeat } from \"react-icons/fa\";\r\nimport { IoBarcodeOutline } from \"react-icons/io5\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\n\r\nexport default function HealthOverviewTails() {\r\n  const { sleepData } = useContext(CustomContext);\r\n  const [sleepTailsData, setSleepTailsData] = useState([]);\r\n  return (\r\n    <div className=\"flex justify-between gap-6 w-full\">\r\n      <HeartRateComponent heartRate={sleepData?.heart_rate_vo?.avg} />\r\n\r\n      <BreathingRateComponent\r\n        breathingRate={sleepData?.breath_rate_vo?.avg || \"--\"}\r\n      />\r\n      {/* <div\r\n        id=\"healthEvents\"\r\n        className=\"flex justify-between  gap-1 items-center bg-white rounded-2xl p-6 w-full\"\r\n      >\r\n        <div className=\"flex gap-3 items-center\">\r\n          <div id=\"icon\" className=\"p-3 bg-[#772ADF]/10 rounded-md\">\r\n            <IoBarcodeOutline className=\"text-[#772ADF] text-[24px]\" />\r\n          </div>\r\n          <div className=\"flex flex-col gap-0\">\r\n            <div className=\"text-base font-bold text-primary/80\">\r\n              Avg. Health Events\r\n            </div>\r\n            <div className=\"text-2xl font-bold text-primary\">Abnormal</div>\r\n          </div>\r\n        </div>\r\n        <Tooltip title=\"Critical Zone\">\r\n          <div className=\"flex gap-2 items-center relative cursor-pointer\">\r\n            <span className=\"relative flex h-4 w-4\">\r\n              <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75\"></span>\r\n              <span className=\"relative inline-flex rounded-full h-4 w-4 bg-red-500\"></span>\r\n            </span>\r\n            <div className=\"text-4xl font-bold text-red-500\">9x</div>\r\n          </div>\r\n        </Tooltip>\r\n      </div> */}\r\n      <EventSummary eventData={sleepData?.alarm_events} />\r\n    </div>\r\n  );\r\n}\r\nexport const HeartRateComponent = ({ heartRate }) => {\r\n  // Define heart rate zones and their properties\r\n  const getHeartRateZone = (rate) => {\r\n    if (rate < 50) {\r\n      return {\r\n        zone: \"Low\",\r\n        color: \"text-red-500\",\r\n        tooltip:\r\n          \"Heart rate is abnormally low (bradycardia). Consult a doctor if persistent.\",\r\n        dotColor: \"bg-red-400\",\r\n        dotPing: \"bg-red-500\",\r\n        showDot: true,\r\n      };\r\n    } else if (rate >= 50 && rate <= 65) {\r\n      return {\r\n        zone: \"Normal\",\r\n        color: \"text-text-primary\",\r\n        tooltip:\r\n          \"This heart rate is within the normal range. Keep up the good work!\",\r\n        showDot: false,\r\n      };\r\n    } else if (rate > 65 && rate <= 85) {\r\n      return {\r\n        zone: \"Elevated\",\r\n        color: \"text-yellow-500\",\r\n        tooltip:\r\n          \"Heart rate is slightly elevated. Consider monitoring and reducing stress.\",\r\n        dotColor: \"bg-yellow-400\",\r\n        dotPing: \"bg-yellow-500\",\r\n        showDot: true,\r\n      };\r\n    } else {\r\n      return {\r\n        zone: \"High\",\r\n        color: \"text-red-500\",\r\n        tooltip: \"Heart rate is high. Consult a doctor if this persists.\",\r\n        dotColor: \"bg-red-400\",\r\n        dotPing: \"bg-red-500\",\r\n        showDot: true,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Get the zone data based on the current heart rate\r\n  const { zone, color, tooltip, showDot, dotColor, dotPing } =\r\n    getHeartRateZone(heartRate);\r\n\r\n  return (\r\n    <div\r\n      id=\"avgHeartRate\"\r\n      className=\"flex justify-between gap-1 items-center bg-white rounded-2xl p-6 w-full\"\r\n    >\r\n      <div className=\"flex gap-3 items-center\">\r\n        <div id=\"icon\" className=\"p-3 bg-[#D76C82]/10 rounded-md\">\r\n          <FaLungs className=\"text-[#D76C82] text-[24px]\" />\r\n        </div>\r\n        {/* <div className=\"flex flex-col gap-0\">\r\n          <div className=\"text-base font-bold text-primary/80\">\r\n            Avg. Heart Rate\r\n          </div>\r\n          <div\r\n            className={`text-2xl font-bold ${\r\n              heartRate ? color : \"text-primary\"\r\n            }`}\r\n          >\r\n            {heartRate ? zone : \"--\"}\r\n          </div>\r\n        </div> */}\r\n        <div className=\"flex flex-col gap-0\">\r\n          <div className=\"text-base font-bold text-primary/80\">Average</div>\r\n          <div className={`text-2xl font-bold text-primary`}>Pulse Rhythm</div>\r\n        </div>\r\n      </div>\r\n      <div className={`text-4xl font-bold text-primary`}>\r\n        {heartRate ? heartRate : \"--\"} <span className=\"text-[17px]\">/bpm</span>\r\n      </div>\r\n      {/* <Tooltip title={heartRate ? tooltip : null}>\r\n        <div className=\"flex gap-2 items-center relative cursor-pointer\">\r\n          {heartRate && showDot && (\r\n            <span className=\"relative flex h-4 w-4\">\r\n              <span\r\n                className={`animate-ping absolute inline-flex h-full w-full rounded-full ${dotColor} opacity-75`}\r\n              ></span>\r\n              <span\r\n                className={`relative inline-flex rounded-full h-4 w-4 ${dotPing}`}\r\n              ></span>\r\n            </span>\r\n          )}\r\n          <div\r\n            className={`text-4xl font-bold ${\r\n              heartRate ? color : \"text-primary\"\r\n            }`}\r\n          >\r\n            {heartRate ? heartRate : \"--\"}{\" \"}\r\n            <span className=\"text-[17px]\">/bpm</span>\r\n          </div>\r\n        </div>\r\n      </Tooltip> */}\r\n    </div>\r\n  );\r\n};\r\nexport const BreathingRateComponent = ({ breathingRate }) => {\r\n  // Define breathing rate zones and their properties\r\n  const getBreathingRateZone = (rate) => {\r\n    if (rate < 12) {\r\n      return {\r\n        zone: \"Low\",\r\n        color: \"text-blue-500\",\r\n        tooltip:\r\n          \"Breathing rate is abnormally low (Bradypnea). Consult a doctor if persistent.\",\r\n        dotColor: \"bg-blue-400\",\r\n        dotPing: \"bg-blue-500\",\r\n        showDot: true,\r\n      };\r\n    } else if (rate >= 12 && rate <= 20) {\r\n      return {\r\n        zone: \"Normal\",\r\n        color: \"text-primary\",\r\n        tooltip:\r\n          \"This breathing rate is within the normal range. Keep up the good work!\",\r\n        showDot: false,\r\n      };\r\n    } else if (rate > 20 && rate <= 25) {\r\n      return {\r\n        zone: \"Elevated\",\r\n        color: \"text-yellow-500\",\r\n        tooltip:\r\n          \"Breathing rate is slightly elevated. Consider monitoring for signs of stress or infection.\",\r\n        dotColor: \"bg-yellow-400\",\r\n        dotPing: \"bg-yellow-500\",\r\n        showDot: true,\r\n      };\r\n    } else {\r\n      return {\r\n        zone: \"High\",\r\n        color: \"text-red-500\",\r\n        tooltip:\r\n          \"Breathing rate is high (Tachypnea). Immediate medical attention is advised.\",\r\n        dotColor: \"bg-red-400\",\r\n        dotPing: \"bg-red-500\",\r\n        showDot: true,\r\n      };\r\n    }\r\n  };\r\n\r\n  // Get the zone data based on the current breathing rate\r\n  const { zone, color, tooltip, showDot, dotColor, dotPing } =\r\n    getBreathingRateZone(breathingRate);\r\n\r\n  return (\r\n    <div\r\n      id=\"avgBreathingRate\"\r\n      className=\"flex justify-between gap-1 items-center bg-white rounded-2xl p-6 w-full\"\r\n    >\r\n      <div className=\"flex gap-3 items-center\">\r\n        <div id=\"icon\" className=\"p-3 bg-[#FFA54D]/10 rounded-md\">\r\n          <FaLungs className=\"text-[#FFA54D] text-[24px]\" />\r\n        </div>\r\n        <div className=\"flex flex-col gap-0\">\r\n          <div className=\"text-base font-bold text-primary/80\">Average</div>\r\n          <div className={`text-2xl font-bold text-primary`}>\r\n            Breathing Rhythm\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-2 items-center relative \">\r\n        <div\r\n          className={`text-4xl font-bold text-primary\r\n            `}\r\n        >\r\n          {breathingRate ? breathingRate : \"--\"}{\" \"}\r\n          <span className=\"text-[17px]\">/bpm</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst eventTypes = {\r\n  11: { name: \"Deep Breathing Phase\", category: \"Warning\", priority: 2 }, // Warning: high breathing rate\r\n  12: { name: \"Light Breathing Phase\", category: \"Warning\", priority: 2 }, // Warning: shallow breathing\r\n  13: { name: \"Breath Disruption\", category: \"Normal\", priority: 3 }, // Normal: short or occasional pauses in breathing\r\n  14: { name: \"Elevated Activity Rhythm\", category: \"Critical\", priority: 1 }, // Critical: heart rate too high\r\n  15: { name: \"Relaxed Activity Rhythm\", category: \"Critical\", priority: 1 }, // Critical: heart rate too low\r\n};\r\n\r\nexport const EventSummary = ({ eventData = [] }) => {\r\n  // Calculate occurrences for each event type\r\n  const eventCounts = eventData?.reduce((acc, event) => {\r\n    acc[event?.event_type] = (acc[event?.event_type] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Calculate the total number of events\r\n  const totalEvents = Object?.values(eventCounts || [])?.reduce(\r\n    (sum, count) => sum + count,\r\n    0\r\n  );\r\n\r\n  // Determine the zone based on event counts\r\n  const calculateZone = () => {\r\n    if (!eventTypes || !eventCounts) {\r\n      console.error(\"eventTypes or eventCounts are undefined\");\r\n      return \"Unknown\"; // Or any other fallback value\r\n    }\r\n\r\n    let abnormalCount = 0;\r\n    let criticalCount = 0;\r\n    let warningCount = 0;\r\n\r\n    Object.entries(eventTypes).forEach(([eventType, { priority }]) => {\r\n      const count = eventCounts[eventType] || 0;\r\n      if (priority === 1) {\r\n        criticalCount += count; // Critical events that need immediate attention\r\n      } else if (priority === 2) {\r\n        warningCount += count; // Warning events that should be monitored\r\n      } else if (priority === 3) {\r\n        abnormalCount += count; // Normal but still relevant events (like apnea)\r\n      }\r\n    });\r\n\r\n    if (criticalCount >= 5) {\r\n      return \"Critical\"; // If there are critical events, the zone is critical\r\n    } else if (abnormalCount >= 16) {\r\n      return \"Abnormal\"; // If multiple abnormal events are detected, it's abnormal\r\n    } else if (warningCount >= 25) {\r\n      return \"Warning\"; // If warning events are frequent, zone is warning\r\n    } else {\r\n      return \"Normal\"; // If no concerning events, the zone is normal\r\n    }\r\n  };\r\n\r\n  const zone = calculateZone();\r\n  return (\r\n    <div\r\n      id=\"healthEvents\"\r\n      className=\"flex justify-between gap-1 items-center bg-white rounded-2xl p-6 w-full\"\r\n    >\r\n      <div className=\"flex gap-3 items-center\">\r\n        <div id=\"icon\" className=\"p-3 bg-[#772ADF]/10 rounded-md\">\r\n          <IoBarcodeOutline className=\"text-[#772ADF] text-[24px]\" />\r\n        </div>\r\n        <div className=\"flex flex-col gap-0\">\r\n          <div className=\"text-base font-bold text-primary/80\">Total</div>\r\n          {/* <div\r\n            className={`text-2xl font-bold ${\r\n              zone === \"Critical\"\r\n                ? \"text-red-500\"\r\n                : zone === \"Warning\"\r\n                ? \"text-yellow-500\"\r\n                : \"text-primary\"\r\n            }`}\r\n          >\r\n            {eventData?.length > 0 ? zone : \"--\"}\r\n          </div>{\" \"}\r\n        </div> */}\r\n          <div className={`text-2xl font-bold text-primary`}>\r\n            Wellness Events\r\n          </div>{\" \"}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Display Total Event Count */}\r\n      <Tooltip\r\n        title={Object.entries(eventTypes)\r\n          .map(([eventType, eventInfo]) => {\r\n            const count = eventCounts[eventType] || 0;\r\n            return `${eventInfo.name}: ${count}x`;\r\n          })\r\n          .join(\" | \")}\r\n      >\r\n        <div className=\"flex gap-2 items-center relative cursor-pointer\">\r\n          {/* {eventData?.length !== 0 && zone !== \"Normal\" && (\r\n            <span className=\"relative flex h-4 w-4\">\r\n              <span\r\n                className={`animate-ping absolute inline-flex h-full w-full rounded-full ${\r\n                  zone === \"Warning\"\r\n                    ? \"bg-yellow-500\"\r\n                    : zone === \"Critical\"\r\n                    ? \"bg-red-500\"\r\n                    : \"\"\r\n                } opacity-75`}\r\n              ></span>\r\n              <span\r\n                className={`relative inline-flex rounded-full h-4 w-4 ${\r\n                  zone === \"Warning\"\r\n                    ? \"bg-yellow-500\"\r\n                    : zone === \"Critical\"\r\n                    ? \"bg-red-500\"\r\n                    : \"\"\r\n                }`}\r\n              ></span>\r\n            </span>\r\n          )} */}\r\n          <div className={`text-4xl font-bold text-primary`}>\r\n            {eventData?.length > 0 ? totalEvents : \"--\"}\r\n            {eventData?.length > 0 ? \"x\" : \"\"}\r\n          </div>{\" \"}\r\n        </div>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import React, { lazy, Suspense, useEffect, useRef } from \"react\";\r\n\r\nconst ApneaIndexStatistic = lazy(() =>\r\n  import(\"./Components/ApneaIndexStatistic\")\r\n);\r\nconst ApneaIndexDistribution = lazy(() =>\r\n  import(\"./Components/ApneaIndexDistribution\")\r\n);\r\nconst RespiratoryRate = lazy(() => import(\"./Components/RespiratoryRate\"));\r\nconst HeartRate = lazy(() => import(\"./Components/HeartRate\"));\r\nconst HeartRateAnnomalyStatistic = lazy(() =>\r\n  import(\"./Components/HeartRateAnnomalyStatistic\")\r\n);\r\nconst HeartRateDistribution = lazy(() =>\r\n  import(\"./Components/HeartRateDistribution\")\r\n);\r\nconst BreathRateDistribution = lazy(() =>\r\n  import(\"./Components/BreathRateDistribution\")\r\n);\r\nconst BioVitalDataAnalysis = lazy(() =>\r\n  import(\"./Components/BioVitalDataAnalysis\")\r\n);\r\nconst HealthEvent = lazy(() => import(\"./Components/HealthEvent\"));\r\nconst LiveHeartRate = lazy(() => import(\"./Components/LiveHeartRate\"));\r\nconst LiveBreathRate = lazy(() => import(\"./Components/LiveBreathRate\"));\r\nimport HealthOverviewTails from \"./Components/HealthOverviewTails\";\r\nimport { useRefContext } from \"@/Context/RefContext\";\r\nfunction ChartWrapper({ children, height = \"480px\", width = \"100%\" }) {\r\n  return (\r\n    <div className={`w-[${width}] h-[${height}]`}>\r\n      <Suspense fallback={<div>Loading...</div>}>{children}</Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function HealthTab() {\r\n  const { registerRef } = useRefContext();\r\n\r\n  const stepsRef = {\r\n    step1: useRef(null),\r\n    step2: useRef(null),\r\n    step3: useRef(null),\r\n    step4: useRef(null),\r\n    step5: useRef(null),\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.keys(stepsRef).forEach((key) => {\r\n      if (stepsRef[key].current) {\r\n        registerRef(\"tab_health_\" + key, stepsRef[key]);\r\n      }\r\n    });\r\n  }, [registerRef]);\r\n  return (\r\n    <div className=\"flex flex-col gap-6 mt-6 w-full\">\r\n      <div ref={stepsRef.step1}>\r\n        <HealthOverviewTails />\r\n      </div>\r\n      <div className=\"flex gap-6 w-full\" ref={stepsRef.step2}>\r\n        <ChartWrapper height=\"auto\">\r\n          <LiveHeartRate />\r\n        </ChartWrapper>\r\n        <ChartWrapper height=\"auto\">\r\n          <LiveBreathRate />\r\n        </ChartWrapper>\r\n      </div>\r\n\r\n      {/* <ChartWrapper height=\"auto\">\r\n        <HealthEvent />\r\n      </ChartWrapper> */}\r\n      <div ref={stepsRef.step3}>\r\n        <ChartWrapper>\r\n          <RespiratoryRate />\r\n        </ChartWrapper>\r\n      </div>\r\n      <div ref={stepsRef.step4}>\r\n        <ChartWrapper>\r\n          <HeartRate />\r\n        </ChartWrapper>\r\n      </div>\r\n      {/* <ChartWrapper>\r\n        <BioVitalDataAnalysis />\r\n      </ChartWrapper> */}\r\n      <div className=\"flex gap-6 w-full\" ref={stepsRef.step5}>\r\n        <ChartWrapper>\r\n          <ApneaIndexStatistic />\r\n        </ChartWrapper>\r\n        <ChartWrapper>\r\n          <ApneaIndexDistribution />\r\n        </ChartWrapper>\r\n      </div>\r\n      <div className=\"flex gap-6 w-full\">\r\n        <ChartWrapper>\r\n          <HeartRateAnnomalyStatistic />\r\n        </ChartWrapper>\r\n        <ChartWrapper>\r\n          <HeartRateDistribution />\r\n        </ChartWrapper>\r\n      </div>\r\n      <div className=\"flex gap-6 w-full\">\r\n        <ChartWrapper>\r\n          <BreathRateDistribution />\r\n        </ChartWrapper>\r\n        <ChartWrapper></ChartWrapper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"file":"assets/HealthTab-CIZI-3K9.js"}