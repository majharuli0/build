{"version":3,"file":"index-BEyjKtf8.js","sources":["../../src/Components/PubTable/CreatEendUser.jsx","../../src/Pages/Supportnuser/utiles.jsx","../../src/Pages/Supportnuser/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport CustomModal from '@/Shared/modal/CustomModal'\r\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\r\nimport toast from 'react-hot-toast';\r\nimport CustomToast from '@/Shared/Tosat/CustomToast';\r\nimport CustomInput from '@/Shared/input/CustomInput';\r\nimport Select from '@/Shared/Select/index';\r\nimport { addUsers, updateenldUser, getUserPage } from '@/api/AdminUser'\r\nimport { isEmptyObject } from '@/utils/comFunction'\r\nimport { Upload } from 'antd'\r\nimport { deletUser } from '@/api/AdminUser'\r\nimport DeleteModal from '@/Shared/delete/DeleteModal'\r\nimport XLSX from 'xlsx'\r\n\r\n\r\n\r\nconst CreateAdminSupportAgent = ({ modalOPen, setModalOpen, role = \"\", getlist, item = {}, distributorId = \"\", changeParams = {} }) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n        setValue,\r\n        getValues,\r\n        watch,\r\n        control\r\n    } = useForm(\r\n        {\r\n            // 初始化表单的默认值\r\n            defaultValues: {\r\n                testArray: []\r\n            }\r\n        }\r\n\r\n    );\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"testArray\", // 指定数组字段的名称\r\n    });\r\n    const watchedValue = watch(\"Nursing Home\");\r\n    const [title, setTitle] = useState(\"Create Elderly\")\r\n    const [okbtn, setOkbtn] = useState(\"Create Elderly\")\r\n    const [cstatus, setCstatus] = useState(\"create\")\r\n    const [NursingList, setNursingList] = useState([])\r\n    const [AgentIdUserList, setAgentIdUserList] = useState([])\r\n    const [deleteModal, setDeleteModal] = useState(false)\r\n    const [delRole, setDelRole] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n\r\n        if (modalOPen) {\r\n          \r\n            //\r\n           \r\n            if (!isEmptyObject(item)) {\r\n                reset({testArray: []})\r\n            \r\n                setDelRole(item.role)\r\n                setTitle('Edit Elderly')\r\n                setOkbtn('Save')\r\n                const {roomNumber,firstName,lastName}=item\r\n                console.log(\"oitem\",item.roomNumber,item.firstName,item.lastName)\r\n                setTimeout(() => {\r\n                    append({\r\n                        roomNumber, firstName, lastName\r\n                    })\r\n                  }, 500);\r\n            } else {\r\n                reset({testArray: []})\r\n                setTitle('Create Elderly')\r\n                setOkbtn('Create Elderly')\r\n               setTimeout(() => {\r\n                 append({\r\n                    roomNumber: undefined, firstName: undefined, lastName: undefined\r\n                })\r\n               }, 100);\r\n               \r\n            }\r\n        }\r\n\r\n    }, [modalOPen])\r\n\r\n    // // 使用 useEffect 监听特定值的变化\r\n    // useEffect(() => {\r\n    //     // 在这里执行你想要进行的操作，比如打印值\r\n    //     const specificValue = getValues('Nursing Home');\r\n    //     if (specificValue) {\r\n    //         let row1 = NursingList.find(e => e.label == specificValue)\r\n    //         getsupportAgentIdUser(row1?.key)\r\n    //     }\r\n    // }, [watchedValue]); // 传递 getValues 作为 useEffect 的依赖项\r\n\r\n\r\n\r\n\r\n    const onSubmit = (data1) => {\r\n   \r\n\r\n        if (!isEmptyObject(item)) { \r\n            let guests=  data1.guests[0]\r\n            updateenldUser({ ...guests,id:item.id  })\r\n                .then(data => {\r\n                    \r\n                    if (data?.code == \"00000\") {\r\n                        toast.custom((t) => (\r\n                            <CustomToast t={t} text=\"Modified successfully\" />\r\n                        ));\r\n                        setModalOpen(false)\r\n                        getlist()\r\n                        reset()\r\n                    }\r\n                })\r\n        } else {\r\n            addUsers([...data1.guests])\r\n                .then(data => {\r\n           \r\n                    if (data?.code == \"00000\") {\r\n                        toast.custom((t) => (\r\n                            <CustomToast t={t} text={`${item.role} has been created Successfully!`} />\r\n                        ));\r\n                        setModalOpen(false)\r\n                        getlist()\r\n                        reset()\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const handalDelete1 = () => {\r\n\r\n        setDeleteModal(true)\r\n    }\r\n    const handleAddChange = () => {\r\n        append({ roomNumber: \"\", firstName: \"\", lastName: \"\" });\r\n    }\r\n    const handleExecl = () => {\r\n   \r\n    }\r\n    function transformData(inputData) {\r\n        const columnMapping = {\r\n            A: 'roomNumber', //活泼名称\r\n            B: 'firstName', //货号\r\n            C: 'lastName', //入库数量\r\n\r\n            // 添加其他字母标识的映射\r\n        };\r\n        return Object.keys(inputData).reduce((result, key) => {\r\n\r\n            const column = key.charAt(0);\r\n            const row = key.slice(1);\r\n            const columnName = columnMapping[column] || column;\r\n\r\n            result[`row${row}`] = result[`row${row}`] || {};\r\n            result[`row${row}`][columnName] = inputData[key]?.v;\r\n            return result;\r\n        }, {});\r\n    }\r\n    const successUpload = (datas) => {\r\n        let data = datas.file\r\n\r\n        let bo = true\r\n        let file = datas.file\r\n\r\n        if (file.status !== \"error\") {\r\n            return\r\n        }\r\n\r\n        const fileReader = new FileReader()\r\n        // 读取操作完成时\r\n        fileReader.readAsBinaryString(file.originFileObj)\r\n        fileReader.onload = function (ev) {\r\n         \r\n            try {\r\n\r\n                // 二进制数据\r\n\r\n                bo = false\r\n                const workdatas = ev.target.result\r\n                const workbook = XLSX.read(workdatas, { type: 'binary' })\r\n                let Sheets = workbook.Sheets.Sheet1\r\n                delete Sheets[\"!margins\"]\r\n                delete Sheets[\"!ref\"]\r\n             \r\n\r\n                let myArray = Object.values(transformData(Sheets));\r\n                myArray.shift()\r\n                \r\n                myArray.forEach((item, index) => {\r\n                    append(item)\r\n                })\r\n\r\n                return\r\n\r\n\r\n\r\n            } catch (e) {\r\n           \r\n                return\r\n            }\r\n        }\r\n        // 读取指定文件内容\r\n\r\n\r\n    }\r\n    const props = {\r\n\r\n\r\n        showUploadList: false,\r\n        beforeUpload: false,\r\n        onChange: successUpload,\r\n        // beforeUpload: () => {\r\n        //     return false\r\n        // }\r\n    };\r\n    const Foot = () => {\r\n\r\n        if (isEmptyObject(item)) {\r\n            return (\r\n                <Upload className='w-full' {...props}>\r\n                    <button\r\n                        type=\"button\"\r\n                        style={{ width: \"518px\" }}\r\n                        className=\"mt-[10px] font-[500] text-[14px] h-[40px] w-full hover:border-primary hover:text-primary duration-300 px-5 rounded-[10px] bg-transparent text-[#666D90] border border-gray-300\"\r\n                    >\r\n                        Import from File\r\n                    </button>\r\n                </Upload>\r\n            )\r\n        } else {\r\n            return (\r\n                <div onClick={() => handalDelete1()} className='hover:brightness-110 duration-300  cursor-pointer mt-[7px] w-full text-center pt-[12px] pb-[12px]  pt-[7px] text-onBackWarring rounded-[10px] border border-onBackWarring pt-[7px] '>Delete Distributor</div>\r\n            )\r\n        }\r\n    }\r\n    const handalDelete = async () => {\r\n        setDeleteModal(false)\r\n        // setModalOpen(false)\r\n        deletUser({ id: item.id })\r\n        await getlist()\r\n        setTimeout(() => {\r\n            setModalOpen(false)\r\n            toast.custom((t) => <CustomToast t={t} text={`${item.role} has been successfully deleted`} />);\r\n        }, 900)\r\n    }\r\n\r\n\r\n    return (\r\n        <CustomModal\r\n            modalOPen={modalOPen}\r\n            setModalOpen={setModalOpen}\r\n            handleSubmit={handleSubmit(onSubmit)}\r\n            handalDelete={handalDelete1}\r\n            width={590}\r\n            title={title}\r\n            cstatus={cstatus}\r\n            id={item?.id}\r\n            Foot={<Foot />}\r\n            buttonText={okbtn}\r\n        >\r\n\r\n            {fields.map((field, index) => (\r\n                <div key={index} className='flex items-center gap-4'>\r\n                    <Controller\r\n                        name={`guests[${index}].roomNumber`}\r\n                        control={control}\r\n                        defaultValue={field.roomNumber} // 初始化字段值\r\n                        render={({ field }) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    label={\"Room Number\"}\r\n                                    type={\"text\"}\r\n                                    register={\r\n                                        register(`guests[${index}].roomNumber`, {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Please enter Room Number\",\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                    error={errors.roomNumber}\r\n                                    placeholder={\"Enter Room Number\"}\r\n\r\n                                />\r\n                            )\r\n                        }}\r\n                    // <input {...field} placeholder=\"Room Number\" />\r\n                    />\r\n                    <Controller\r\n                        name={`guests[${index}].firstName`}\r\n                        control={control}\r\n                        defaultValue={field.firstName} // 初始化字段值\r\n                        render={({ field }) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    label={\"firstName\"}\r\n                                    type={\"text\"}\r\n                                    register={\r\n                                        register(`guests[${index}].firstName`, {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Please enter first name\",\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                    error={errors.firstName}\r\n                                    placeholder={\"Enter firstName\"}\r\n\r\n                                />\r\n                            )\r\n                        }}\r\n\r\n                    />\r\n                    <Controller\r\n                        name={`guests[${index}].lastName`}\r\n                        control={control}\r\n                        defaultValue={field.lastName} // 初始化字段值\r\n                        render={({ field }) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    label={\"lastName\"}\r\n                                    type={\"text\"}\r\n                                    register={\r\n                                        register(`guests[${index}].lastName`, {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Please enter lastName\",\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                    error={errors.lastName}\r\n                                    placeholder={\"Enter lastName\"}\r\n\r\n                                />\r\n                            )\r\n                        }}\r\n\r\n                    />\r\n\r\n\r\n                    {/* <CustomInput\r\n                        label={\"firstName\"}\r\n                        type={\"text\"}\r\n                        register={\r\n                            register(\"firstName\", {\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Please enter firstName\",\r\n                                },\r\n                            })\r\n                        }\r\n                        error={errors.firstName}\r\n                        placeholder={\"Enter firstName\"}\r\n\r\n                    />\r\n                    <CustomInput\r\n                        label={\"lastName\"}\r\n                        type={\"text\"}\r\n                        register={\r\n                            register(\"lastName\", {\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Please enter lastName\",\r\n                                },\r\n                            })\r\n                        }\r\n                        error={errors.lastName}\r\n                        placeholder={\"Enter lastName\"}\r\n\r\n                    /> */}\r\n                </div>\r\n            ))}\r\n            <DeleteModal onDelete={() => handalDelete()} modalOPen={deleteModal} setModalOpen={setDeleteModal}\r\n                title={`Are you sure to delete this ${delRole} account? This`} title2={\" process CAN’T be undo.\"} />\r\n        </CustomModal>\r\n    )\r\n}\r\n\r\nexport default CreateAdminSupportAgent","import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\r\nimport { Select, Space, Table, Tag, Switch, Modal, ConfigProvider } from \"antd\";\r\nimport ls from \"store2\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { updateUserDetails } from \"@/api/Users\";\r\nimport { MdSignalWifiStatusbarConnectedNoInternet2 } from \"react-icons/md\";\r\nimport ReportActionModal from \"./components/ReportActionModal\";\r\nimport Elderly from \"@/Components/NameCol/Elderly\";\r\nimport { LuNavigation } from \"react-icons/lu\";\r\nimport NursingHomeTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\n\r\nfunction StatusSwitch({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorText: \"#707EAE\",\r\n          colorPrimary: \"#06A44F\",\r\n          colorLinkActive: \"#8086AC\",\r\n          colorLinkHover: \"#8086AC\",\r\n          colorLink: \"#8086AC\",\r\n        },\r\n      }}\r\n    >\r\n      <Switch\r\n        loading={handleLoading}\r\n        onChange={handleChange}\r\n        handleBg=\"#00000\"\r\n        className=\"bg-slate-200\"\r\n        value={status}\r\n        // defaultChecked\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n//Dropdown For Office Status Change\r\nfunction StatusDropdown({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      {/* Red or green circle based on status */}\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status == true ? \"bg-[#1EB564]\" : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      {/* Status select dropdown */}\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: false, label: <span>Disable</span> },\r\n            { value: true, label: <span>Active</span> },\r\n          ]}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const useGetColumnsByRoleAndActiveTab = (activeTab) => {\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [result, setResult] = useState(undefined);\r\n  const { setUserDetil } = useCountStore();\r\n  const navigate = useNavigate();\r\n\r\n  const handelClick = (row, name) => {\r\n    ls.set(\"tableData\", row);\r\n    setUserDetil(row);\r\n    console.log(\"id\", row.id);\r\n    console.log(\"kio\");\r\n\r\n    navigate(`/support-agent/dashboard/suspended-user/${row.id}`);\r\n  };\r\n\r\n  const roleBasedColumns = {\r\n    distributor: {\r\n      office: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"seles_agent_count\",\r\n        \"end_user_count\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"action\",\r\n      ],\r\n      sales_agent: [\r\n        \"name\",\r\n        // \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"agent_id\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        \"action\",\r\n      ],\r\n    },\r\n    sales_agent: {\r\n      nursing_home: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"assigned_nurse_count\",\r\n        \"action\",\r\n      ],\r\n      end_user: [\r\n        \"name\",\r\n        \"address\",\r\n        // \"date\",\r\n        \"contact_number\",\r\n        // \"external_id\",\r\n        // \"products\",\r\n        // \"products_price\",\r\n        // \"addons\",\r\n        // \"addons_price\",\r\n        // \"total_price\",\r\n      ],\r\n      monitoring_station: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"action\",\r\n      ],\r\n      installer: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      support_agent: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n    },\r\n    nursing_home: {\r\n      nurse: [\"name\", \"contact_number\", \"action\"],\r\n      elderly: [\r\n        \"elderlyName\",\r\n        \"activeAlert\",\r\n        \"allergies\",\r\n        \"diseases\",\r\n        \"medications\",\r\n        \"viewOnMap\",\r\n      ],\r\n      end_user: [\r\n        \"name\",\r\n        \"address\",\r\n        \"installation_address\",\r\n        \"created_date\",\r\n        \"contact_number\",\r\n        \"devices\",\r\n        \"expiry\",\r\n        \"nursing_home_action\",\r\n      ],\r\n    },\r\n    monitoring_station: {\r\n      support_agent: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      installer: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      elderly: [\r\n        \"elderlyName\",\r\n        \"activeAlert\",\r\n        \"allergies\",\r\n        \"diseases\",\r\n        \"medications\",\r\n        \"viewOnMap\",\r\n      ],\r\n    },\r\n    nurse: {\r\n      elderly: [\"name\", \"age\", \"alert_count\", \"device_count\"],\r\n    },\r\n    installer: {\r\n      end_user: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n    },\r\n    office: {\r\n      sales_agent: [\r\n        \"name\",\r\n        // \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"agent_id\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        // \"action\",\r\n      ],\r\n      installer: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n    },\r\n  };\r\n\r\n  const allColumns = {\r\n    //common col ========================>\r\n    name: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"office\":\r\n            return \"Office\";\r\n          case \"nurse\":\r\n            return \"Nurse Name\";\r\n          case \"distributor\":\r\n            return \"Distributor Name\";\r\n          case \"sales_agent\":\r\n            return \"Sales Agent Name\";\r\n          case \"nursing_home\":\r\n            return \"Nursing Home\";\r\n          case \"end_user\":\r\n            return \"User Name\";\r\n          case \"monitoring_station\":\r\n            return \"Monitoring Station\";\r\n          case \"support_agent\":\r\n            return \"Support Agent\";\r\n          case \"installer\":\r\n            return \"Installer\";\r\n          default:\r\n            return \"Name\";\r\n        }\r\n      },\r\n      key: \"id\",\r\n      // onCell: (record, rowIndex) => {\r\n      //   return {\r\n      //     onClick: (event) => {\r\n      //       handelClick(record, \"distributorId\");\r\n      //     }, // click row\r\n      //   };\r\n      // },\r\n      render: (row) =>\r\n        row?.role == (\"monitoring_company\", \"elderly\") ? (\r\n          <button>\r\n            <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n              {row.name}\r\n            </span>\r\n          </button>\r\n        ) : (\r\n          <button>\r\n            <AdminFiled data={row} />\r\n          </button>\r\n        ),\r\n    },\r\n    elderlyName: {\r\n      title: \"Elderly Name\",\r\n      render: (row) => <Elderly data={row} />,\r\n    },\r\n    address: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"sales_agent\":\r\n            return \"Address\";\r\n          default:\r\n            return \"Address\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button style={{ width: \"200px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.address}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    installation_address: {\r\n      title: \"Installation Address\",\r\n      render: (row) => (\r\n        <button style={{ width: \"200px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.installation_address}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    activeAlert: {\r\n      title: \"Active Alert\",\r\n      dataIndex: \"unresolved_alarm_count\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n    allergies: {\r\n      title: \"Allergies\",\r\n      render: (row) => (\r\n        <span>\r\n          {row.comments\r\n            ?.filter((comment) => comment.category === \"Allergy\")\r\n            .map((comment) => comment.comment)\r\n            .join(\", \")}\r\n        </span>\r\n      ),\r\n    },\r\n    diseases: {\r\n      title: \"Diseases\",\r\n      render: (row) => <span>{row.diseases?.map((d) => d).join(\", \")}</span>,\r\n    },\r\n    medications: {\r\n      title: \"Medications\",\r\n      render: (row) => (\r\n        <span>{row.medications?.map((d) => d.name).join(\", \")}</span>\r\n      ),\r\n    },\r\n    viewOnMap: {\r\n      title: \"View On Map\",\r\n      render: (row) => (\r\n        <span className=\"flex items-center transition-all duration-300 justify-start gap-2 text-sm font-medium text-text-primary hover:text-primary cursor-pointer p-2 rounded-md w-fit text-center hover:bg-slate-100\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <a\r\n              href={`https://www.google.com/maps?q=${row.latitude},${row.longitude}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-base font-medium !text-blue-500\"\r\n            >\r\n              View on Map\r\n            </a>\r\n            <LuNavigation size={18} className=\"text-blue-500\" />\r\n          </div>\r\n        </span>\r\n      ),\r\n    },\r\n    email: {\r\n      title: \"Email Address\",\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.email}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    expiry: {\r\n      title: \"Expiry On\",\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.expired}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    devices: {\r\n      title: \"Total Devices\",\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.devices}x\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_number: {\r\n      title: \"Contact Number\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.contact_number}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_person: {\r\n      title: \"Contact Person\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.contact_person}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    date: {\r\n      title: \"Date of Sales\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    created_date: {\r\n      title: \"User Since\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    age: {\r\n      title: \"Age\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.age}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    external_id: {\r\n      title: \"External ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products: {\r\n      title: \"Products\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products_price: {\r\n      title: \"Products Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons: {\r\n      title: \"Addons\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addons}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons_price: {\r\n      title: \"Addons Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addon_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    total_price: {\r\n      title: \"Total Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.total}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //count related col ===========================>\r\n    alert_count: {\r\n      title: \"Alert Count\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.alert_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    device_count: {\r\n      title: \"Device Count\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.device_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    sales_agent_count: {\r\n      title: \"Sales Agents\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.sales_agent}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    end_user_count: {\r\n      title: \"End Users\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.end_user}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    nursing_home_count: {\r\n      title: \"Nursing Homes\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nursing_home}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    monitoring_company_count: {\r\n      title: \"Monitoring Station\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.monitoring_station}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    assigned_nurse_count: {\r\n      title: \"Assigned Nurse\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nurse}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //All Type Of Naming Col ==========================>\r\n    office_name: {\r\n      title: \"Office\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.office_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    installer: {\r\n      title: \"Installer Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.installer_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //Others ==============================================>\r\n    agent_id: {\r\n      title: \"Agent ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.agent_id}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //action col =====================================>\r\n    status: {\r\n      title: \"Status\",\r\n      render: (row) =>\r\n        row?.role == \"sales_agent\" ? (\r\n          <StatusSwitch row={row} />\r\n        ) : (\r\n          <StatusDropdown row={row} />\r\n        ),\r\n    },\r\n    report: {\r\n      title: \"Report\",\r\n      render: (row) => (\r\n        <div className=\"flex justify-center\">\r\n          <ReportActionModal report={row} />\r\n        </div>\r\n      ),\r\n    },\r\n    status2: {\r\n      title: \"Installation Status\",\r\n      render: (row) => {\r\n        let bgColor;\r\n        switch (row.status) {\r\n          case \"not started\":\r\n            bgColor = \"bg-gray-500\";\r\n            break;\r\n          case \"problem\":\r\n            bgColor = \"bg-red-500\";\r\n            break;\r\n          case \"pending\":\r\n            bgColor = \"bg-yellow-500\";\r\n            break;\r\n          case \"complete\":\r\n            bgColor = \"bg-[#1EB564]\";\r\n            break;\r\n        }\r\n        return (\r\n          <button>\r\n            <span\r\n              className={`text-[14px] xl:text-base capitalize font-semibold font-normal text-white p-2 px-3 ${bgColor} rounded-lg`}\r\n            >\r\n              {row.status}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      width: 100,\r\n      render: (row) => <AdminSupportAgentTableAction data={row} />,\r\n    },\r\n    nursing_home_action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      width: 100,\r\n      render: (row) => <NursingHomeTableAction data={row} />,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    // Check role and set the columns accordingly\r\n    if (activeTab == \"Offices\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"office\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"office\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Support Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"support_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"support_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nursing Homes\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nursing_home\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nursing_home\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Sales Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"sales_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"sales_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"End Users\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"end_user\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"end_user\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Installers\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"installer\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"installer\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Monitoring Stations\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow =\r\n        roleBasedColumns[mainRole]?.[\"monitoring_station\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"monitoring_station\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nurse\") {\r\n      console.log(activeTab);\r\n\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nurse\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nurse\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Elderly\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"elderly\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"elderly\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    }\r\n  }, [activeTab]); // Run this effect whenever `role` changes\r\n\r\n  return result;\r\n};\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useContext,\r\n} from \"react\";\r\nimport TabMenus from \"@/Components/TabMenus\";\r\nimport ls from \"store2\";\r\nimport AddIcon from \"@/Components/AddIcon\";\r\nimport Sort from \"../../Shared/sort/Sort\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport CustomButton from \"../../Shared/button/CustomButton\";\r\nimport SearchInput from \"../../Shared/Search/SearchInput\";\r\nimport AdminSupportAgentTable from \"@/Components/PubTable/AdminSupportAgentTable\";\r\n\r\n// import PaymentMethod from \"./components/PaymentMethod\";\r\nimport { getUser } from \"@/api/Users\";\r\nimport { getEndUsers } from \"@/api/ordersManage\";\r\nimport CreatEendUser from \"@/Components/PubTable/CreatEendUser\";\r\nimport CreateAdminSupportAgent from \"@/Components/PubTable/CreateAndEditUsers\";\r\nimport * as SidebarContext1 from \"@/Context/CustomUsertable\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { useGetColumnsByRoleAndActiveTab } from \"./utiles\";\r\nimport { getElderlies } from \"@/api/elderly\";\r\n\r\nlet roleConfig = {\r\n  NursingHomes: {\r\n    placeholder: \"Search Nursing Home\",\r\n    btnName: \"Add New Nursing Home\",\r\n    menuName: \"Nursing Homes\",\r\n    role: \"nursing_home\",\r\n  },\r\n  SalesAgents: {\r\n    placeholder: \"Search Sales Agents\",\r\n    btnName: \"Add New Sales Agent\",\r\n    menuName: \"Sales Agents\",\r\n    role: \"sales_agent\",\r\n  },\r\n  Offices: {\r\n    placeholder: \"Search Office\",\r\n    btnName: \"Add New Office\",\r\n    menuName: \"Offices\",\r\n    role: \"office\",\r\n  },\r\n  SupportAgents: {\r\n    placeholder: \"Search Support Agents\",\r\n    btnName: \"Add New Support Agents\",\r\n    menuName: \"Support Agents\",\r\n    role: \"supports_agent\",\r\n  },\r\n  EndUsers: {\r\n    placeholder: \"Search End User\",\r\n    btnName: \"Add New End User\",\r\n    menuName: \"End Users\",\r\n    role: \"end_user\",\r\n  },\r\n  MonitoringStations: {\r\n    placeholder: \"Search Monitoring Station\",\r\n    btnName: \"Add New Monitoring Company\",\r\n    menuName: \"Monitoring Stations\",\r\n    role: \"monitoring_station\",\r\n  },\r\n  Installers: {\r\n    placeholder: \"Search Installers\",\r\n    btnName: \"Add New Installer\",\r\n    menuName: \"Installers\",\r\n    role: \"installer\",\r\n  },\r\n  Nurse: {\r\n    placeholder: \"Search Nurse\",\r\n    btnName: \"Add New Nurse\",\r\n    menuName: \"Nurse\",\r\n    role: \"nurse\",\r\n  },\r\n  Elderly: {\r\n    placeholder: \"Search Elderly\",\r\n    btnName: \"\",\r\n    menuName: \"Elderlies\",\r\n    role: \"elderly\",\r\n  },\r\n};\r\n\r\nexport default function AdminDashboard() {\r\n  const { setUserDetil } = useCountStore();\r\n  const navigate = useNavigate();\r\n  const childRef = useRef(false);\r\n  const [page, setPage] = useState({});\r\n  const [title, setTitle] = useState(\"Dashboard\");\r\n  const { role } = useContext(SidebarContext);\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n  const [menuName, setMenuName] = useState(\"\");\r\n  const [btnName, setBtnName] = useState(\"Add New Support Agent\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"Time\");\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const [modalOPen1, setModalOpen1] = useState(false);\r\n  const [menus, setMenus] = useState([]);\r\n  const [changeParams, setChangeParams] = useState({});\r\n  const [columns, setColumns] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [placeholder, setPlaceholder] = useState(\"Search Nursing Home\");\r\n  const data = [\"Time\", \"Name\"];\r\n  const [loading, setLoading] = useState(false);\r\n  const [query, setQuery] = useState({});\r\n  const [list, setList] = useState([]);\r\n  const handelOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const getCulumns = useGetColumnsByRoleAndActiveTab(activeTab);\r\n  useEffect(() => {\r\n    if (getCulumns) {\r\n      setColumns(getCulumns);\r\n    }\r\n  }, [getCulumns, activeTab]);\r\n\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n\r\n  // Memoized initialization function\r\n  const init = useCallback(() => {\r\n    setTitle(\"Users\");\r\n    setColumns(getCulumns);\r\n\r\n    let role1 = mainRole || user.role;\r\n\r\n    const roleMenus = {\r\n      nursing_home: {\r\n        menus: [{ text: \"Nurse\" }, { text: \"Elderly\" }, { text: \"End Users\" }],\r\n        activeTab: \"Nurse\",\r\n      },\r\n      distributor: {\r\n        menus: [{ text: \"Offices\" }, { text: \"Sales Agents\" }],\r\n        activeTab: \"Offices\",\r\n      },\r\n      office: {\r\n        menus: [{ text: \"Sales Agents\" }, { text: \"Installers\" }],\r\n        activeTab: \"Sales Agents\",\r\n      },\r\n      sales_agent: {\r\n        menus: [\r\n          { text: \"End Users\" },\r\n          { text: \"Nursing Homes\" },\r\n          { text: \"Monitoring Stations\" },\r\n          { text: \"Installers\" },\r\n          { text: \"Support Agents\" },\r\n        ],\r\n        activeTab: \"End Users\",\r\n      },\r\n      monitoring_station: {\r\n        menus: [\r\n          { text: \"Elderly\" },\r\n          { text: \"Installers\" },\r\n          { text: \"Support Agents\" },\r\n        ],\r\n        activeTab: \"Elderly\",\r\n      },\r\n      nurse: { menus: [{ text: \"Elderly\" }], activeTab: \"Elderly\" },\r\n      installer: { menus: [{ text: \"End Users\" }], activeTab: \"End Users\" },\r\n    };\r\n\r\n    if (roleMenus[role1]) {\r\n      const { menus, activeTab } = roleMenus[role1];\r\n      setMenus(menus);\r\n      setActiveTab(activeTab);\r\n    }\r\n  }, [mainRole]);\r\n\r\n  const getList = useCallback(() => {\r\n    if (!query || !query.role || activeTab == \"\") return; // Only call if query is defined\r\n    setLoading(true);\r\n\r\n    if (\r\n      [\"monitoring_station\", \"installer\"].includes(mainRole) &&\r\n      activeTab === \"End Users\"\r\n    ) {\r\n      delete query.role;\r\n      getEndUsers(query)\r\n        .then((data) => {\r\n          setList(data.data);\r\n          setTotal(data.total);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching users:\", error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else if (\r\n      [\"nursing_home\", \"monitoring_station\"].includes(mainRole) &&\r\n      activeTab === \"Elderly\"\r\n    ) {\r\n      delete query.role;\r\n      getElderlies(query)\r\n        .then((res) => {\r\n          setList(res.data);\r\n          setTotal(res.total);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      getUser(query)\r\n        .then((data) => {\r\n          setList(data.data);\r\n          setTotal(data.total);\r\n        })\r\n        .catch((error) => {\r\n          if (error.code === \"ECONNABORTED\") {\r\n            console.error(\"Request timed out\");\r\n          } else {\r\n            console.error(\"Error fetching users:\", error);\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [query, page]);\r\n\r\n  // Setup role based on activeTab\r\n  const setUpRole = useCallback(() => {\r\n    const role = activeTab.replace(/\\s/g, \"\"); // remove spaces\r\n    // Check if roleConfig[role] is defined\r\n    const roleConfigItem = roleConfig[role];\r\n    if (roleConfigItem) {\r\n      const {\r\n        placeholder,\r\n        btnName,\r\n        menuName,\r\n        role: roleFromConfig,\r\n      } = roleConfigItem; // Now it's safe to destructure\r\n\r\n      setPlaceholder(placeholder);\r\n      setBtnName(btnName);\r\n      setMenuName(menuName);\r\n      setQuery({ ...query, role: roleFromConfig });\r\n      setPage({ ...page, page: 1 });\r\n      setChangeParams({ nursingHomeId: user.id });\r\n    } else {\r\n      console.warn(`Role \"${role}\" not found in roleConfig.`); // Optional: log a warning for debugging\r\n    }\r\n  }, [activeTab]);\r\n\r\n  // useEffect to initialize the component\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  // useEffect to handle activeTab\r\n  useEffect(() => {\r\n    setUpRole();\r\n  }, [setUpRole]);\r\n\r\n  // useEffect to handle list fetching with query and page changes\r\n  useEffect(() => {\r\n    getList();\r\n  }, [getList]);\r\n\r\n  // Handle selected option changes\r\n  useEffect(() => {\r\n    if (selected && query.orderType !== selected) {\r\n      delete query.sort_by_created_at;\r\n      delete query.sort_by_name;\r\n      setQuery({\r\n        ...query,\r\n        ...(selected === \"Name\"\r\n          ? { sort_by_name: -1 }\r\n          : { sort_by_created_at: -1 }),\r\n      });\r\n      setPage({ ...page, page: 1 });\r\n    }\r\n  }, [selected]);\r\n\r\n  // Handle search input blur\r\n  const handBlurchange = () => {\r\n    setQuery({ ...query, search: search.trim() });\r\n    setPage({ ...page, page: 1 });\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"py-[20px] flex\">\r\n        <TabMenus\r\n          menus={menus}\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        {[\r\n          \"Support Agents\",\r\n          \"Nursing Homes\",\r\n          \"Sales Agents\",\r\n          \"Offices\",\r\n          \"End Users\",\r\n          \"Monitoring Stations\",\r\n          \"Installers\",\r\n          \"Nurse\",\r\n          \"Elderly\",\r\n        ].includes(activeTab) && (\r\n          <div>\r\n            <div className=\" bg-white rounded-2xl overflow-hidden\">\r\n              <div className=\" px-[22px] py-6 flex items-start flex-col lg:flex-row justify-between gap-2\">\r\n                <div className=\" flex items-center justify-between w-full\">\r\n                  <h2 className=\" text-2xl font-bold text-text-primary\">\r\n                    {menuName}\r\n                  </h2>\r\n                </div>\r\n                <div className=\" flex items-center justify-end gap-5 w-full\">\r\n                  {/* =====Search sort and add admin button===== */}\r\n                  <SearchInput\r\n                    search={search}\r\n                    setSearch={setSearch}\r\n                    handBlurchange={handBlurchange}\r\n                    placeholder={placeholder}\r\n                  />\r\n\r\n                  <Sort\r\n                    query={query}\r\n                    setQuery={setQuery}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                    data={data}\r\n                  />\r\n\r\n                  {[\"Elderly\", \"Sales Agents\"].includes(activeTab) &&\r\n                  [\r\n                    \"installer\",\r\n                    \"monitoring_station\",\r\n                    \"office\",\r\n                    \"sales_agent\",\r\n                    \"nursing_home\",\r\n                  ].includes(mainRole) ? null : (\r\n                    <CustomButton\r\n                      onClick={() => handelOpenModal()}\r\n                      className={\" hidden lg:flex min-w-[80px]\"}\r\n                    >\r\n                      <AddIcon /> {btnName}\r\n                    </CustomButton>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\" grid grid-cols-1\">\r\n                <SidebarContext1.SidebarContext.Provider\r\n                  value={{\r\n                    role: query.role,\r\n                    getlist: getList,\r\n                    query,\r\n                    total,\r\n                    page,\r\n                    setPage,\r\n                  }}\r\n                >\r\n                  <AdminSupportAgentTable\r\n                    loading={loading}\r\n                    tableData={list}\r\n                    columns={columns}\r\n                    getlist={getList}\r\n                  />\r\n                </SidebarContext1.SidebarContext.Provider>\r\n              </div>\r\n            </div>\r\n            <CreateAdminSupportAgent\r\n              item={{}}\r\n              changeParams={changeParams}\r\n              getlist={getList}\r\n              role={query.role}\r\n              modalOPen={modalOPen}\r\n              setModalOpen={setModalOpen}\r\n              parentID={user._id}\r\n            />\r\n          </div>\r\n        )}\r\n        {/* {activeTab == \"Elderlies\" && (\r\n          <PaymentMethod\r\n            changeParams={changeParams}\r\n            getlist={getList}\r\n            query={query}\r\n            role={role}\r\n            activeTab={activeTab}\r\n          />\r\n        )} */}\r\n      </div>\r\n      <CreatEendUser modalOPen={modalOPen1} setModalOpen={setModalOpen1} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default AdminDashboard;\r\n"],"names":["CreateAdminSupportAgent","modalOPen","setModalOpen","role","getlist","item","distributorId","changeParams","register","handleSubmit","errors","reset","setValue","getValues","watch","control","useForm","fields","append","remove","useFieldArray","title","setTitle","useState","okbtn","setOkbtn","cstatus","setCstatus","deleteModal","setDeleteModal","delRole","setDelRole","useEffect","isEmptyObject","roomNumber","firstName","lastName","onSubmit","data1","addUsers","data","toast","t","jsx","CustomToast","guests","updateenldUser","handalDelete1","transformData","inputData","columnMapping","result","key","column","row","columnName","_a","props","datas","bo","file","fileReader","ev","workdatas","Sheets","XLSX","myArray","index","Foot","Upload","handalDelete","deletUser","jsxs","CustomModal","field","Controller","CustomInput","DeleteModal","StatusSwitch","status","setStatus","handleLoading","sethandleLoading","handleChange","value","updateUserDetails","res","ConfigProvider","Switch","StatusDropdown","Select","useGetColumnsByRoleAndActiveTab","activeTab","mainRole","setMainRole","ls","setResult","useCountStore","useNavigate","roleBasedColumns","allColumns","AdminFiled","Elderly","text","comment","d","LuNavigation","ReportActionModal","bgColor","AdminSupportAgentTableAction","NursingHomeTableAction","tableColumns","colKey","columnConfig","_b","_c","_d","_e","_f","_g","_h","_i","roleConfig","AdminDashboard","useRef","page","setPage","useContext","SidebarContext","setActiveTab","menuName","setMenuName","btnName","setBtnName","search","setSearch","selected","setSelected","modalOPen1","setModalOpen1","menus","setMenus","setChangeParams","columns","setColumns","total","setTotal","placeholder","setPlaceholder","loading","setLoading","query","setQuery","list","setList","handelOpenModal","getCulumns","user","SetUser","init","useCallback","role1","roleMenus","getList","getEndUsers","error","getElderlies","err","getUser","setUpRole","roleConfigItem","roleFromConfig","handBlurchange","TabMenus","SearchInput","Sort","CustomButton","AddIcon","SidebarContext1.SidebarContext","AdminSupportAgentTable","CreatEendUser"],"mappings":"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"}