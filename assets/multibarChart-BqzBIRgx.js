import{Q as D,g as E,r as b,a1 as M,d,j as v,bs as Y}from"./index-gDHMON6F.js";import{E as C}from"./index-quZr3_jG.js";try{let t=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},a=new t.Error().stack;a&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[a]="d04f32bd-6a5d-4600-89e3-98fd417b3bb2",t._sentryDebugIdIdentifier="sentry-dbid-d04f32bd-6a5d-4600-89e3-98fd417b3bb2")}catch{}var O={exports:{}};(function(t,a){(function(i,o){t.exports=o()})(D,function(){return function(i,o){o.prototype.isSameOrAfter=function(n,l){return this.isSame(n,l)||this.isAfter(n,l)}}})})(O);var I=O.exports;const _=E(I);var w={exports:{}};(function(t,a){(function(i,o){t.exports=o()})(D,function(){return function(i,o){o.prototype.isSameOrBefore=function(n,l){return this.isSame(n,l)||this.isBefore(n,l)}}})})(w);var k=w.exports;const N=E(k);d.extend(_);d.extend(N);function G({data:t,fromDate:a,toDate:i,valueType:o="duration"}){console.log(t,a,i,o);const[n,l]=b.useState([]),{sleepEventsType:h,sleepEventsColor:S}=b.useContext(M);b.useEffect(()=>{l(Array.isArray(t)?t:[]),console.log(t)},[t]);const A=(p,c)=>{if(c==="duration"){const x=Math.floor(p/60),y=p%60;return`${x}hr ${y}m`}return p.toString()},$=b.useMemo(()=>{const c=((s,e)=>{const r=[];let u=d(s);const f=d(e);for(;u.isSameOrBefore(f);)r.push(u.format("YYYY-MM-DD")),u=u.add(1,"day");return r})(a,i);console.log("All Dates:",c);const x=(Array.isArray(n)?n:[]).reduce((s,e)=>{if(!(e!=null&&e.date)||!(e!=null&&e.data))return s;const r=d(e.date).format("YYYY-MM-DD");return s[r]=e.data,s},{});console.log("Data By Date:",x);const y=[...new Set((Array.isArray(n)?n:[]).flatMap(s=>{var e;return((e=s==null?void 0:s.data)==null?void 0:e.map(r=>r.status))||[]}))];console.log("Active Statuses:",y);const g=Object.entries(h).filter(([s])=>y.includes(s));console.log("Active Events:",g);const j=g.map(([s,e])=>{const r=c.map(u=>{const f=x[u],m=f==null?void 0:f.find(B=>B.status===s);return m?Number(m.value):0});return console.log(`Series data for ${e}:`,r),{name:e,type:"bar",stack:"total",data:r,itemStyle:{color:S[e]}}});return{tooltip:{trigger:"axis",axisPointer:{type:"shadow"},formatter:s=>{let e=`${s[0].axisValue}<br/>`;return s.forEach(r=>{r.value>0&&(e+=`${r.marker} ${r.seriesName}: ${A(r.value,o)}<br/>`)}),e}},legend:{data:g.map(([s,e])=>e)},xAxis:{type:"category",data:c},yAxis:{type:"value",axisLabel:{formatter:s=>A(s,o)}},series:j}},[n,a,i,h,S,o]);return(t==null?void 0:t.length)===0||!i||!a?v.jsx(Y,{description:"No data available to show"}):v.jsx(C,{option:$,style:{height:"350px"}})}export{G as default};
//# sourceMappingURL=multibarChart-BqzBIRgx.js.map
