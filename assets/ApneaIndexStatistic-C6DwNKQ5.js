import{r as t,d as p,fp as g,j as c}from"./index-D4YvGYVV.js";import"./mockData-DnyFJQLN.js";import h from"./barChart-DIoYTLON.js";import{T as A}from"./Template-Zn194y7z.js";import{g as C}from"./utiles-B4LdLbWF.js";import{C as T}from"./UseCustomContext-JKrcgP1K.js";import"./index-DzA1nnzg.js";import"./helper-C_2_l4sE.js";import"./WeeklyMonthlyPicker-ER3wZA8I.js";import"./SwapRightOutlined-B96QGaWa.js";import"./weekOfYear-B5hY2eoq.js";import"./index-B9Mk6FFw.js";import"./weekday-DQgm90DM.js";import"./index-cH8AnNHF.js";import"./index-CLHNTigK.js";import"./index-Btp_h_Dk.js";import"./index-BBAAmCLN.js";import"./index-CNkRxR9x.js";function K(){const{title:d,color:s,icon:f,dataAnalysis:u,summaryProps:x}=C("Apnea Index"),D=t.useContext(T),{chartToDate:e="",chartFromDate:i="",elderlyDetails:a}=D||{},[r,l]=t.useState(p().subtract(1,"day").format("YYYY-MM-DD")),[m,S]=t.useState(p().subtract(31,"day").format("YYYY-MM-DD")),[Y,I]=t.useState([]),n=t.useCallback(()=>{g({uids:a==null?void 0:a.deviceId,to_date:m,from_date:r}).then(o=>{I(o.data),console.log(o.data)}).catch(o=>{console.log(o)})},[r,a]);return t.useEffect(()=>{n()},[n]),t.useEffect(()=>{e&&i&&(l(e),S(i))},[e]),c.jsx(A,{title:d,color:s,icon:f,dataAnalysis:u,summaryProps:x,children:c.jsx(h,{data:Y,color:s,dataType:"number",fromDate:m,toDate:r})})}export{K as default};
