{"version":3,"file":"index-7D6jW3pJ.js","sources":["../../src/utils/throttle.js","../../src/Pages/SupportUserDetail/index.jsx"],"sourcesContent":["let timer; let\n    flag\n/**\n * 节流原理：在一定时间内，只能触发一次\n *\n * @param {Function} func 要执行的回调函数\n * @param {Number} wait 延时的时间\n * @param {Boolean} immediate 是否立即执行\n * @return null\n */\nfunction throttle(func, wait = 500, immediate = true) {\n    if (immediate) {\n        if (!flag) {\n            flag = true\n            // 如果是立即执行，则在wait毫秒内开始时执行\n      \n            typeof func === 'function' && func()\n            timer = setTimeout(() => {\n                flag = false\n            }, wait)\n        }\n    } else if (!flag) {\n        flag = true\n        // 如果是非立即执行，则在wait毫秒内的结束处执行\n        timer = setTimeout(() => {\n            flag = false\n            typeof func === 'function' && func()\n        }, wait)\n    }\n}\nexport default throttle\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Space, Table, Tag, Modal } from \"antd\";\nimport { useroverViewCount } from \"@/api/AdminDashboard\";\nimport TabMenus from \"@/Components/TabMenus\";\nimport TimeSelection from \"@/Components/TimeSelection\";\nimport ls from \"store2\";\nimport AddIcon from \"@/Components/AddIcon\";\nimport Sort from \"../../Shared/sort/Sort\";\nimport { SidebarContext } from \"@/Context/CustomContext\";\nimport CustomButton from \"../../Shared/button/CustomButton\";\nimport SearchInput from \"../../Shared/Search/SearchInput\";\nimport AdminSupportAgentTable from \"@/Components/PubTable/AdminSupportAgentTable\";\n\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\n// import AdminSupportAgentTableAction from '@/Components/Admin/AdminSupportAgent/AdminSupportAgentTableAction';\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\nimport { getUserPage } from \"@/api/AdminUser\";\nimport CreateAdminSupportAgent from \"@/Components/PubTable/CreateAndEditUsers\";\nimport * as SidebarContext1 from \"@/Context/CustomUsertable\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport throttle from \"@/utils/throttle\";\n\nconst AdminDashboard = () => {\n  const params = useParams();\n  let item = useLocation();\n  const [title, setTitle] = useState(\"Dashboard\");\n  const { role } = useContext(SidebarContext);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"Support Agents\");\n  const [menuName, setMenuName] = useState(\"[Nursing Home]’s Support Agents\");\n  const [btnName, setBtnName] = useState(\"Add New Support Agent\");\n  const [search, setSearch] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n  const [modalOPen, setModalOpen] = useState(false);\n  const [page, SetPage] = useState({\n    current: 1,\n    size: 10,\n  });\n  const [menus, setMenus] = useState([\n    {\n      text: \"Support Agents\",\n      bo: true,\n      warring: false,\n    },\n  ]);\n  const [changeParams, setChangeParams] = useState({});\n  const [totle, SetTotle] = useState(0);\n  let [columns, setColumns] = useState([\n    {\n      title: \"Nursing Home\",\n      key: \"id\",\n\n      render: (row) => (\n        <button>\n          <AdminFiled data={row} />\n        </button>\n      ),\n    },\n    {\n      title: \"Contact\",\n\n      render: (row) => (\n        <button>\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\n            {row.contactNumber}\n          </span>\n        </button>\n      ),\n    },\n\n    {\n      title: \"\",\n      key: \"id\",\n      width: 100,\n      render: (row) => (\n        // <CustomButton  >Pay now</CustomButton>\n        <AdminSupportAgentTableAction\n          getlist={() => getList(query)}\n          data={row}\n        />\n      ),\n    },\n  ]);\n  const data = [\"Time\", \"Name\"];\n  const [statistics, SetStatistics] = useState({\n    nursingHomes: 0,\n    elderlies: 0,\n    devicesConnected: 0,\n    monthlyRevenue: 0,\n  });\n  const [query, setQuey] = useState({\n    order: \"1\",\n    orderType: \"time\",\n    name: \"\",\n  });\n  const [list, SetList] = useState([]);\n  const handelOpenModal = () => {\n    setModalOpen(true);\n  };\n  const [user, SetUser] = useState(ls.get(\"user\"));\n\n  const HandleTabText = (e) => {\n    setActiveTab(e);\n    setIsModalOpen(true);\n  };\n\n  const init = () => {\n    let user = ls.get(\"user\");\n    let row = new URLSearchParams(item.search);\n    let query1 = { ...query };\n    let name = row.get(\"name\");\n    let id = row.get(\"id\");\n\n    setTitle(\"User\");\n\n    query1[name] = id;\n    query1.role = \"Support Agent\";\n    if (name == \"salesAgentId\") {\n      setChangeParams({\n        nursingHomeId: id,\n        salesAgentId: params.id,\n      });\n    }\n    if (name == \"distributorId\") {\n      setChangeParams({\n        nursingHomeId: id,\n        distributorId: params.id,\n      });\n    }\n    let role1 = role;\n    if (!role1) {\n      role1 = user.role;\n    }\n    setQuey(query1);\n    SetPage({\n      current: 1,\n      size: 10,\n    });\n  };\n  const getList = (query) => {\n    if (!query.role) return;\n    throttle(() => {\n      getUserPage({\n        ...query,\n        ...page,\n      }).then((res) => {\n        SetTotle(res.data.total);\n        SetList(res?.data?.records);\n      });\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  useEffect(() => {\n    getList(query);\n  }, [page]);\n  useEffect(() => {\n    if (selected && query.orderType != selected) {\n      setQuey({\n        ...query,\n        ...{\n          orderType: selected.toLowerCase(),\n          order: selected === \"Time\" ? \"1\" : \"0\",\n        },\n      });\n      SetPage({ ...page, current: 1 });\n    }\n  }, [selected]);\n  useEffect(() => {\n    SetPage({ ...page, current: 1 });\n  }, [query.order]);\n  const handBlurchange = () => {\n    setQuey({ ...query, name: search.trim() });\n    SetPage({ ...page, current: 1 });\n  };\n\n  return (\n    <div className=\"pl-[20px] pr-[50px]\">\n      <div className=\"h-[100px] flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <div className=\" text-[28px] font-semibold font-cblock \">{title}</div>\n        </div>\n        <div className=\"h-[40px] pl-[20px] pr-[20px]  rounded-[20px] bg-cblock   flex items-center \">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 14 14\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M8.65073 2.31039L11.4807 5.14035L4.31724 12.3038L1.48886 9.47387L8.65073 2.31039ZM13.6281 1.62787L12.3661 0.365808C11.8783 -0.121936 11.0863 -0.121936 10.5969 0.365808L9.38799 1.57474L12.218 4.40473L13.6281 2.99457C14.0064 2.61625 14.0064 2.00617 13.6281 1.62787ZM0.00787518 13.4516C-0.0436269 13.6834 0.165643 13.8911 0.397455 13.8347L3.551 13.0701L0.722618 10.2401L0.00787518 13.4516Z\"\n              fill=\"white\"\n            />\n          </svg>\n          <div className=\"pl-[20px]  text-white text-[14px] font-semibold  \">\n            Edit Nursing Home\n          </div>\n        </div>\n      </div>\n      <div className=\"pt-[20px] pb-[10px] flex\">\n        <TabMenus\n          menus={menus}\n          activeTab={activeTab}\n          setActiveTab={setActiveTab}\n        />\n      </div>\n      <div className=\"\">\n        {(activeTab == \"Support Agents\" || activeTab == \"Nursing Homes\") && (\n          <div>\n            <div className=\" bg-white rounded-2xl\">\n              <div className=\" px-[22px] py-6 flex items-start flex-col lg:flex-row justify-between gap-2\">\n                <div className=\" flex items-center justify-between w-full\">\n                  <h2 className=\" text-2xl font-bold text-text-primary\">\n                    {menuName}\n                  </h2>\n                </div>\n                <div className=\" flex items-center justify-end gap-5 w-full\">\n                  {/* =====Search sort and add admin button===== */}\n                  <SearchInput\n                    search={search}\n                    setSearch={setSearch}\n                    handBlurchange={handBlurchange}\n                    placeholder=\"Search Nursing Home\"\n                  />\n                  <Sort\n                    query={query}\n                    setQuey={setQuey}\n                    selected={selected}\n                    setSelected={setSelected}\n                    data={data}\n                  />\n                  <CustomButton\n                    onClick={() => handelOpenModal()}\n                    className={\" hidden lg:flex min-w-[80px]\"}\n                  >\n                    <AddIcon /> {btnName}\n                  </CustomButton>\n                </div>\n              </div>\n\n              <div className=\" grid grid-cols-1\">\n                <SidebarContext1.SidebarContext.Provider\n                  value={{ getlist: getList, query, totle, page, SetPage }}\n                >\n                  <AdminSupportAgentTable tableData={list} columns={columns} />\n                </SidebarContext1.SidebarContext.Provider>\n              </div>\n            </div>\n            <CreateAdminSupportAgent\n              item={{}}\n              changeParams={changeParams}\n              getlist={() => getList(query)}\n              role={query.role}\n              modalOPen={modalOPen}\n              setModalOpen={setModalOpen}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"names":["flag","throttle","func","wait","immediate","AdminDashboard","params","useParams","item","useLocation","title","setTitle","useState","role","useContext","SidebarContext","isModalOpen","setIsModalOpen","activeTab","setActiveTab","menuName","setMenuName","btnName","setBtnName","search","setSearch","selected","setSelected","modalOPen","setModalOpen","page","SetPage","menus","setMenus","changeParams","setChangeParams","totle","SetTotle","columns","setColumns","row","jsx","AdminFiled","AdminSupportAgentTableAction","getList","query","data","statistics","SetStatistics","setQuey","list","SetList","handelOpenModal","user","SetUser","ls","init","query1","name","id","role1","getUserPage","res","_a","useEffect","handBlurchange","jsxs","TabMenus","SearchInput","Sort","CustomButton","AddIcon","SidebarContext1.SidebarContext","AdminSupportAgentTable","CreateAdminSupportAgent"],"mappings":"8nBAAW,IACPA,EASJ,SAASC,GAASC,EAAMC,EAAO,IAAKC,EAAY,GAAM,CAC9CA,EACKJ,IACDA,EAAO,GAGP,OAAOE,GAAS,YAAcA,EAAA,EACtB,WAAW,IAAM,CACrBF,EAAO,EACX,EAAGG,CAAI,GAEHH,IACRA,EAAO,GAEC,WAAW,IAAM,CACrBA,EAAO,GACP,OAAOE,GAAS,YAAcA,EAAA,CAClC,EAAGC,CAAI,EAEf,CCPA,MAAME,GAAiB,IAAM,CAC3B,MAAMC,EAASC,EAAA,EACf,IAAIC,EAAOC,EAAA,EACX,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAS,WAAW,EACxC,CAAE,KAAAC,CAAA,EAASC,EAAAA,WAAWC,CAAc,EACpC,CAACC,GAAaC,EAAc,EAAIL,EAAAA,SAAS,EAAK,EAC9C,CAACM,EAAWC,CAAY,EAAIP,EAAAA,SAAS,gBAAgB,EACrD,CAACQ,EAAUC,EAAW,EAAIT,EAAAA,SAAS,iCAAiC,EACpE,CAACU,EAASC,EAAU,EAAIX,EAAAA,SAAS,uBAAuB,EACxD,CAACY,EAAQC,CAAS,EAAIb,EAAAA,SAAS,EAAE,EACjC,CAACc,EAAUC,CAAW,EAAIf,EAAAA,SAAS,EAAE,EACrC,CAACgB,EAAWC,CAAY,EAAIjB,EAAAA,SAAS,EAAK,EAC1C,CAACkB,EAAMC,CAAO,EAAInB,WAAS,CAC/B,QAAS,EACT,KAAM,EAAA,CACP,EACK,CAACoB,EAAOC,EAAQ,EAAIrB,WAAS,CACjC,CACE,KAAM,iBACN,GAAI,GACJ,QAAS,EAAA,CACX,CACD,EACK,CAACsB,EAAcC,CAAe,EAAIvB,EAAAA,SAAS,CAAA,CAAE,EAC7C,CAACwB,EAAOC,CAAQ,EAAIzB,EAAAA,SAAS,CAAC,EACpC,GAAI,CAAC0B,EAASC,EAAU,EAAI3B,WAAS,CACnC,CACE,MAAO,eACP,IAAK,KAEL,OAAS4B,GACPC,EAAAA,IAAC,UACC,SAAAA,EAAAA,IAACC,EAAA,CAAW,KAAMF,CAAA,CAAK,CAAA,CACzB,CAAA,EAGJ,CACE,MAAO,UAEP,OAASA,GACPC,EAAAA,IAAC,SAAA,CACC,SAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,6DACb,SAAAD,EAAI,aAAA,CACP,CAAA,CACF,CAAA,EAIJ,CACE,MAAO,GACP,IAAK,KACL,MAAO,IACP,OAASA,GAEPC,EAAAA,IAACE,GAAA,CACC,QAAS,IAAMC,EAAQC,CAAK,EAC5B,KAAML,CAAA,CAAA,CACR,CAEJ,CACD,EACD,MAAMM,EAAO,CAAC,OAAQ,MAAM,EACtB,CAACC,GAAYC,EAAa,EAAIpC,WAAS,CAC3C,aAAc,EACd,UAAW,EACX,iBAAkB,EAClB,eAAgB,CAAA,CACjB,EACK,CAACiC,EAAOI,CAAO,EAAIrC,WAAS,CAChC,MAAO,IACP,UAAW,OACX,KAAM,EAAA,CACP,EACK,CAACsC,EAAMC,CAAO,EAAIvC,EAAAA,SAAS,CAAA,CAAE,EAC7BwC,EAAkB,IAAM,CAC5BvB,EAAa,EAAI,CACnB,EACM,CAACwB,GAAMC,EAAO,EAAI1C,EAAAA,SAAS2C,EAAG,IAAI,MAAM,CAAC,EAOzCC,EAAO,IAAM,CACjB,IAAIH,EAAOE,EAAG,IAAI,MAAM,EACpBf,EAAM,IAAI,gBAAgBhC,EAAK,MAAM,EACrCiD,EAAS,CAAE,GAAGZ,CAAA,EACda,EAAOlB,EAAI,IAAI,MAAM,EACrBmB,EAAKnB,EAAI,IAAI,IAAI,EAErB7B,EAAS,MAAM,EAEf8C,EAAOC,CAAI,EAAIC,EACfF,EAAO,KAAO,gBACVC,GAAQ,gBACVvB,EAAgB,CACd,cAAewB,EACf,aAAcrD,EAAO,EAAA,CACtB,EAECoD,GAAQ,iBACVvB,EAAgB,CACd,cAAewB,EACf,cAAerD,EAAO,EAAA,CACvB,EAEH,IAAIsD,EAAQ/C,EACP+C,IACHA,EAAQP,EAAK,MAEfJ,EAAQQ,CAAM,EACd1B,EAAQ,CACN,QAAS,EACT,KAAM,EAAA,CACP,CACH,EACMa,EAAWC,GAAU,CACpBA,EAAM,MACX5C,GAAS,IAAM,CACb4D,EAAY,CACV,GAAGhB,EACH,GAAGf,CAAA,CACJ,EAAE,KAAMgC,GAAQ,OACfzB,EAASyB,EAAI,KAAK,KAAK,EACvBX,GAAQY,EAAAD,GAAA,YAAAA,EAAK,OAAL,YAAAC,EAAW,OAAO,CAC5B,CAAC,CACH,CAAC,CACH,EAEAC,EAAAA,UAAU,IAAM,CACdR,EAAA,CACF,EAAG,CAAA,CAAE,EACLQ,EAAAA,UAAU,IAAM,CACdpB,EAAQC,CAAK,CACf,EAAG,CAACf,CAAI,CAAC,EACTkC,EAAAA,UAAU,IAAM,CACVtC,GAAYmB,EAAM,WAAanB,IACjCuB,EAAQ,CACN,GAAGJ,EAED,UAAWnB,EAAS,YAAA,EACpB,MAAOA,IAAa,OAAS,IAAM,GACrC,CACD,EACDK,EAAQ,CAAE,GAAGD,EAAM,QAAS,EAAG,EAEnC,EAAG,CAACJ,CAAQ,CAAC,EACbsC,EAAAA,UAAU,IAAM,CACdjC,EAAQ,CAAE,GAAGD,EAAM,QAAS,EAAG,CACjC,EAAG,CAACe,EAAM,KAAK,CAAC,EAChB,MAAMoB,EAAiB,IAAM,CAC3BhB,EAAQ,CAAE,GAAGJ,EAAO,KAAMrB,EAAO,KAAA,EAAQ,EACzCO,EAAQ,CAAE,GAAGD,EAAM,QAAS,EAAG,CACjC,EAEA,OACEoC,EAAAA,KAAC,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAzB,EAAAA,IAAC,MAAA,CAAI,UAAU,oBACb,SAAAA,EAAAA,IAAC,OAAI,UAAU,0CAA2C,WAAM,CAAA,CAClE,EACAyB,EAAAA,KAAC,MAAA,CAAI,UAAU,8EACb,SAAA,CAAAzB,EAAAA,IAAC,MAAA,CACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OAEL,SAAAA,EAAAA,IAAC,OAAA,CACC,EAAE,qYACF,KAAK,OAAA,CAAA,CACP,CAAA,EAEFA,EAAAA,IAAC,MAAA,CAAI,UAAU,oDAAoD,SAAA,mBAAA,CAEnE,CAAA,CAAA,CACF,CAAA,EACF,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAAC0B,EAAA,CACC,MAAAnC,EACA,UAAAd,EACA,aAAAC,CAAA,CAAA,EAEJ,EACAsB,EAAAA,IAAC,OAAI,UAAU,GACX,aAAa,kBAAoBvB,GAAa,kBAC9CgD,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8EACb,SAAA,CAAAzB,EAAAA,IAAC,MAAA,CAAI,UAAU,4CACb,SAAAA,EAAAA,IAAC,MAAG,UAAU,wCACX,WACH,CAAA,CACF,EACAyB,EAAAA,KAAC,MAAA,CAAI,UAAU,8CAEb,SAAA,CAAAzB,EAAAA,IAAC2B,EAAA,CACC,OAAA5C,EACA,UAAAC,EACA,eAAAwC,EACA,YAAY,qBAAA,CAAA,EAEdxB,EAAAA,IAAC4B,EAAA,CACC,MAAAxB,EACA,QAAAI,EACA,SAAAvB,EACA,YAAAC,EACA,KAAAmB,CAAA,CAAA,EAEFoB,EAAAA,KAACI,EAAA,CACC,QAAS,IAAMlB,EAAA,EACf,UAAW,+BAEX,SAAA,CAAAX,EAAAA,IAAC8B,GAAA,EAAQ,EAAE,IAAEjD,CAAA,CAAA,CAAA,CACf,CAAA,CACF,CAAA,EACF,EAEAmB,EAAAA,IAAC,MAAA,CAAI,UAAU,oBACb,SAAAA,EAAAA,IAAC+B,EAA+B,SAA/B,CACC,MAAO,CAAE,QAAS5B,EAAS,MAAAC,EAAO,MAAAT,EAAO,KAAAN,EAAM,QAAAC,CAAA,EAE/C,SAAAU,EAAAA,IAACgC,EAAA,CAAuB,UAAWvB,EAAM,QAAAZ,CAAA,CAAkB,CAAA,CAAA,CAC7D,CACF,CAAA,EACF,EACAG,EAAAA,IAACiC,EAAA,CACC,KAAM,CAAA,EACN,aAAAxC,EACA,QAAS,IAAMU,EAAQC,CAAK,EAC5B,KAAMA,EAAM,KACZ,UAAAjB,EACA,aAAAC,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAA,EACF,CAEJ"}