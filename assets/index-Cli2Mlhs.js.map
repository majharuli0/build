{"version":3,"file":"index-Cli2Mlhs.js","sources":["../../src/Pages/Deals/components/AssignInstaller.jsx","../../src/Pages/Deals/utiles.jsx","../../src/Pages/Deals/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { RiToolsLine } from \"react-icons/ri\";\nimport CustomModal from \"../../../Shared/modal/CustomModal\";\nimport { ConfigProvider, Select, Table } from \"antd\";\nimport CustomButton from \"@/Shared/button/CustomButton\";\nimport CustomTable from \"@/Shared/Table/CustomTable\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport { getUser, getUserDetails } from \"@/api/Users\";\nimport { assignInstaller } from \"@/api/ordersManage\";\nexport default function AssignInstaller({ data }) {\n  const [open, setOpen] = useState(false);\n  const sharedMethod = useContext(SidebarContext);\n\n  const [dataSource, setDataSource] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  function getlist() {\n    setLoading(true);\n    getUser({\n      role: \"installer\",\n    }).then((res) => {\n      if (res) {\n        setDataSource(res?.data);\n        setLoading(false);\n      }\n    });\n  }\n  function handleSelectChange(value) {\n    setSelectedItems(value);\n  }\n  function handleClick() {\n    console.log(\"cliekd\");\n    setLoading(true);\n    assignInstaller(data?._id, {\n      installer_id: selectedItems,\n    })\n      .then((res) => {\n        if (res) {\n          console.log(res);\n          setOpen(false);\n          setLoading(false);\n          sharedMethod.getlist();\n        }\n      })\n      .finally(() => {\n        setOpen(false);\n      });\n  }\n  function handleAssignBtnClick() {\n    getlist();\n    // getInstallerData();\n  }\n\n  return (\n    <div>\n      <span\n        onClick={() => {\n          setOpen(true);\n          handleAssignBtnClick();\n        }}\n        className=\"flex items-center gap-2 text-blue-500 font-baloo font-semibold\"\n      >\n        <RiToolsLine size={18} /> Assign Installer\n      </span>\n      <CustomModal\n        modalOPen={open}\n        setModalOpen={setOpen}\n        onCancel={() => setOpen(false)}\n        title=\"Assign Installer\"\n        isBottomButtomShow={false}\n      >\n        <ConfigProvider\n          theme={{\n            token: {\n              fontFamily: \"Baloo2\",\n              colorPrimary: \"#8086AC\",\n              colorLinkActive: \"#8086AC\",\n              colorLinkHover: \"#8086AC\",\n              colorLink: \"#8086AC\",\n            },\n          }}\n        >\n          <div\n            id=\"addSalesAgent\"\n            className=\"flex gap-4 mb-5  justify-between items-center\"\n          >\n            <Select\n              mode=\"single\"\n              maxTagCount=\"responsive\"\n              optionFontSize={18}\n              optionHeight={50}\n              placeholder=\"Search Installer\"\n              value={selectedItems}\n              onChange={handleSelectChange}\n              onSearch={(value) => setQuery(value)} // Handles the search input\n              style={{ width: \"100%\", borderRadius: \"13px\" }}\n              filterOption={false} // Disable default filtering to use custom filtering\n              className=\"agentSelection h-[40px]\"\n            >\n              {dataSource?.map((item) => (\n                <Option key={item._id} value={item._id}>\n                  {item.name} {item.last_name}\n                </Option>\n              ))}\n            </Select>\n\n            <CustomButton onClick={() => handleClick()}>\n              Assign Installer\n            </CustomButton>\n          </div>\n\n          {/* Table */}\n          {/* {installerData && (\n            <Table\n              loading={loading}\n              dataSource={[installerData] || []}\n              columns={[\n                {\n                  title: \"Installer Name\",\n                  dataIndex: \"name\",\n                },\n                {\n                  title: \"Installer Email\",\n                  dataIndex: \"email\",\n                },\n                {\n                  title: \"Installer Phone\",\n                  dataIndex: \"contact_number\",\n                },\n              ]}\n              pagination={false}\n            />\n          )} */}\n\n          {/* <SidebarContext1.SidebarContext.Provider value={{ getlist: getlist }}>\n            <CustomTable\n              loading={loading}\n              tableData={dataSource || []}\n              columns={[\n                {\n                  title: \"Installer Name\",\n                  dataIndex: \"name\",\n                },\n                {\n                  title: \"Installer Email\",\n                  dataIndex: \"email\",\n                },\n                {\n                  title: \"Installer Phone\",\n                  dataIndex: \"phone\",\n                },\n              ]}\n              scroll={{ x: 500, y: 500 }}\n            />\n          </SidebarContext1.SidebarContext.Provider> */}\n        </ConfigProvider>\n      </CustomModal>\n    </div>\n  );\n}\n","import { Tag } from \"antd\";\nimport ReportActionModal from \"../Supportnuser/components/ReportActionModal\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ConfigProvider, Select } from \"antd\";\nimport { updateInstallationStatus } from \"@/api/ordersManage\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport ls from \"store2\";\nimport AssignInstaller from \"./components/AssignInstaller\";\n\nfunction StatusDropdown({ row }) {\n  const sharedMethod = useContext(SidebarContext);\n  const [status, setStatus] = useState(row?.installation_status);\n  const [handleLoading, sethandleLoading] = useState(false);\n\n  const handleChange = (value) => {\n    setStatus(value);\n    sethandleLoading(true);\n    updateInstallationStatus(row?._id, {\n      installation_status: value,\n    })\n      .then((res) => {\n        console.log(res);\n        sharedMethod.getInstallationList.getCompletedandToBeInstalled();\n        sharedMethod.getInstallationList.getDeviceSalesCounts();\n        if (res) {\n          setStatus(value);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setStatus(row?.installation_status);\n      })\n      .finally(() => {\n        sethandleLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    setStatus(row?.installation_status);\n  }, [row?.installation_status]);\n\n  return (\n    <div className=\"flex items-center space-x-2 mr-0 \">\n      <span\n        className={`w-3 h-3 rounded-full relative -right-2 ${\n          status === \"completed\"\n            ? \"bg-[#1EB564]\"\n            : status === \"pending\"\n            ? \"bg-yellow-500\"\n            : \"bg-red-500\"\n        }`}\n      ></span>\n      <ConfigProvider\n        theme={{\n          token: {\n            colorText: \"#707EAE\",\n            colorPrimary: \"#8086AC\",\n            colorLinkActive: \"#8086AC\",\n            colorLinkHover: \"#8086AC\",\n            colorLink: \"#8086AC\",\n          },\n        }}\n      >\n        <Select\n          value={status}\n          variant=\"borderless\"\n          onChange={handleChange}\n          loading={handleLoading}\n          optionSelectedColor=\"#8086AC\"\n          className=\"w-fit !text-red-100\"\n          options={[\n            { value: \"completed\", label: <span>Complete</span> },\n            { value: \"pending\", label: <span>Pending</span> },\n            { value: \"not_started\", label: <span>Not Started</span> },\n          ]}\n        />\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default function DealColumns(columnsName) {\n  const user = ls.get(\"user\");\n  const dealDetailCol = [\n    ...(user.role !== \"office\"\n      ? [\n          {\n            title: \"Office Identifier\",\n            render: (row) => (\n              <button>\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n                  {row.office_name}\n                </span>\n              </button>\n            ),\n          },\n        ]\n      : [\n          {\n            title: \"Action\",\n            render: (row) => (\n              <button>\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap \">\n                  {row.installation_date === null ? (\n                    <span className=\"\">N/A</span>\n                  ) : row.installer_id ? (\n                    <span className=\"italic\">Assigned</span>\n                  ) : (\n                    <AssignInstaller data={row} />\n                  )}\n                </span>\n              </button>\n            ),\n          },\n          {\n            title: \"Installer Status\",\n            render: (row) => (\n              <button>\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n                  {row.installation_date === null\n                    ? \"N/A\"\n                    : row.installer_id\n                    ? \"Assigned\"\n                    : \"Not Assigned\"}\n                </span>\n              </button>\n            ),\n          },\n          {\n            title: \"Report\",\n            render: (row) => (\n              <div className=\"flex justify-center\">\n                <ReportActionModal report={row} />\n              </div>\n            ),\n          },\n          {\n            title: \"Installation Status\",\n            render: (row) => {\n              let bgColor;\n              switch (row.installation_status) {\n                case \"not_started\":\n                  bgColor = \"bg-red-500\";\n                  break;\n                case \"pending\":\n                  bgColor = \"bg-yellow-500\";\n                  break;\n                case \"completed\":\n                  bgColor = \"bg-[#1EB564]\";\n                  break;\n                default:\n                  bgColor = \"bg-black\"; // Add a default case to handle unexpected statuses\n              }\n              const statusMapping = {\n                not_started: \"Not Started\",\n                pending: \"Pending\",\n                completed: \"Completed\",\n              };\n              return (\n                <button>\n                  <span\n                    className={`text-[14px] xl:text-base capitalize font-normal text-white p-2 px-3 py-1 ${\n                      row.installer_id ? bgColor : \"bg-transparent !text-black\"\n                    } rounded-lg`}\n                  >\n                    {row.installer_id\n                      ? statusMapping[row.installation_status] || \"Unknown\"\n                      : \"N/A\"}\n                  </span>\n                </button>\n              );\n            },\n          },\n        ]),\n    {\n      title: \"Agent Name (ID Number)\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {row.agent_name} ({row.agent_unique_id})\n          </span>\n        </button>\n      ),\n    },\n    {\n      title: \"Date of Sales\",\n      render: (row) => {\n        const formattedDate = new Date(row.created_at).toLocaleDateString(\n          \"en-CA\"\n        );\n        return (\n          <button>\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n              {formattedDate}\n            </span>\n          </button>\n        );\n      },\n    },\n    {\n      title: \"Preferred Installation Date\",\n      render: (row) => {\n        const formattedDate = row.installation_date\n          ? new Date(row.installation_date).toLocaleDateString(\"en-CA\")\n          : \"--\";\n        return (\n          <button>\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n              {formattedDate}\n            </span>\n          </button>\n        );\n      },\n    },\n    {\n      title: \"Customer Name\",\n      render: (row) => {\n        return (\n          <button>\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n              {row?.user_name}\n            </span>\n          </button>\n        );\n      },\n    },\n    {\n      title: \"Customer Phone Number\",\n      render: (row) => {\n        return (\n          <button>\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n              {row?.user_phone}\n            </span>\n          </button>\n        );\n      },\n    },\n    {\n      title: \"Customer Email\",\n      render: (row) => {\n        return (\n          <button>\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n              {row?.user_email}\n            </span>\n          </button>\n        );\n      },\n    },\n    {\n      title: \"Location\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {row.address?.line1},{\" \"}\n            {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\n            {row.address?.city}, {row.address?.state},{\" \"}\n            {row.address ? row.address.postal_code : \" \"},{\" \"}\n            {row.address?.country}\n          </span>\n        </button>\n      ),\n    },\n    {\n      title: \"Product Name\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\n            {/* {row.products.map(\n              (item, indx) =>\n                [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\n                indx < 2 && <span key={indx}>{item.type}</span>\n            )} */}\n            {row.products\n              .filter((item, indx, self) => {\n                const isUniqueSeenyorKit =\n                  item.type === \"Seenyor Kit\" &&\n                  self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\n                return (\n                  !/^AI Sensor/.test(item.type) &&\n                  (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\n                );\n              })\n              .map((item, indx) => {\n                const color =\n                  item.type === \"Seenyor Kit\"\n                    ? \"blue\"\n                    : item.type === \"Installation\"\n                    ? \"orange\"\n                    : \"default\";\n                return (\n                  <Tag key={indx} color={color}>\n                    {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\n                  </Tag>\n                );\n              })}\n          </span>\n        </button>\n      ),\n    },\n    {\n      title: \"Product Price\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\n            $\n            {row.products\n              .filter((item) =>\n                [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                  item.type\n                )\n              )\n              .reduce((total, item) => total + item.price, 0)\n              .toFixed(2)}\n          </span>\n        </button>\n      ),\n    },\n    {\n      title: \"Addon Name\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\n            {/* {row.products.map(\n              (item, indx) =>\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                  item.type\n                ) && <span key={indx}>{item.type}</span>\n            )} */}\n            {row.products\n              .filter(\n                (item) =>\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                    item.type\n                  )\n              )\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\n            0 ? (\n              <span>--</span>\n            ) : (\n              row.products\n                .filter(\n                  (item) =>\n                    ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                      item.type\n                    )\n                )\n                .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\n            )}\n          </span>\n        </button>\n      ),\n    },\n    {\n      title: \"Addon Price\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            {row.products\n              .map((item, indx) =>\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                  item.type\n                ) ? (\n                  <span key={indx}>${item.price.toFixed(2)}</span>\n                ) : null\n              )\n              .filter(Boolean).length === 0 ? (\n              <span>--</span>\n            ) : (\n              row.products.map((item, indx) =>\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\n                  item.type\n                ) ? (\n                  <span key={indx}>${item.price.toFixed(2)}</span>\n                ) : null\n              )\n            )}\n          </span>\n        </button>\n      ),\n    },\n    {\n      title: \"Total Price\",\n      render: (row) => (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\n            ${row.total.toFixed(2)}\n          </span>\n        </button>\n      ),\n    },\n\n    {\n      title: \"Payment Status\",\n      dataIndex: \"payment_status\",\n      key: \"payment_status\",\n      filters: [\n        { text: \"Completed\", value: \"completed\" },\n        { text: \"Pending\", value: \"pending\" },\n        { text: \"Cancelled\", value: \"cancelled\" },\n      ],\n      filterMultiple: true,\n      onFilter: (value, record) => record.payment_status.includes(value),\n      render: (status, record) => {\n        let color = \"\";\n\n        switch (status) {\n          case \"pending\":\n            color = \"orange\";\n            break;\n          case \"cancelled\":\n            color = \"red\";\n            break;\n          case \"completed\":\n            color = \"green\";\n            break;\n          default:\n            color = \"black\";\n        }\n\n        return (\n          <span\n            style={{\n              backgroundColor: color,\n              color: \"white\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n              fontWeight: 500,\n              textTransform: \"capitalize\",\n            }}\n          >\n            {status}\n          </span>\n        );\n      },\n    },\n  ];\n\n  if (columnsName === \"dealDetailCol\") {\n    return dealDetailCol;\n  }\n}\n","import React from \"react\";\nimport { ConfigProvider, Select, Table, DatePicker } from \"antd\";\nimport DealColumns from \"./utiles\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport ls from \"store2\";\nimport { getUser } from \"@/api/Users\";\nimport { getDealDetails } from \"@/api/Dashboard\";\nimport WeeklyMonthlyPicker from \"@/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport CustomTable from \"@/Shared/Table/CustomTable\";\nimport \"./style.css\";\nimport CustomButton from \"@/Shared/button/CustomButton\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nconst { RangePicker } = DatePicker;\nconst Deals = () => {\n  const [DDOrderStatus, setDDOrderStatus] = useState(null);\n  const [DDAgentId, setDDAgentId] = useState(\"all\");\n  const [user, SetUser] = useState(ls.get(\"user\"));\n  const [office, setOffice] = useState([]);\n  const [salesAgent, setSalesAgent] = useState([]);\n  const [officeId, setOfficeId] = useState(null);\n  const [dealDetails, setDealDetails] = useState([]);\n  const [dealDetailsForReports, setDealDetailsForReports] = useState([]);\n  const [officeQuery, setOfficeQuery] = useState({});\n  const [dealLoading, setDealLoading] = useState(false);\n  const [page, SetPage] = useState(1);\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const dealDetailCol = DealColumns(\"dealDetailCol\");\n\n  //Report Download\n  const downloadReport = async () => {\n    try {\n      const reportData = await DealsForReports(\n        DDAgentId === \"all\" ? null : DDAgentId,\n        DDOrderStatus === \"all\" ? null : DDOrderStatus\n      );\n\n      if (!reportData || reportData.length === 0) {\n        throw new Error(\"No data available to download\");\n      }\n\n      const formattedData = reportData.map((item, index) => {\n        const saleDate = new Date(item.created_at);\n        return {\n          \"No.\": index + 1,\n          \"Office Name\": item.office_name,\n          \"Agent ID\": item.agent_unique_id,\n          \"Agent Name\": item.agent_name,\n          // \"Order Number\": item.order_no,\n          \"Sale Date\": saleDate.toLocaleDateString(\"en-CA\"),\n          \"Sale Time\": saleDate.toLocaleTimeString(\"en-GB\", {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n          }),\n          Products: item.products\n            .map((product, idx) => `${idx + 1}. ${product.name}`)\n            .join(\"\"),\n          \"Extra Product\": item.products\n            .map((item, indx) => {\n              if (\n                item.type !== \"Seenyor Kit\" &&\n                item.type !== \"Installation\" &&\n                item.type !== \"AI Monitoring\"\n              ) {\n                return item.type;\n              }\n            })\n            .join(\"\"),\n          \"Current Sale Status\": item.saleStatus,\n          \"City Location\": item.address?.city || \"N/A\",\n        };\n      });\n\n      const worksheet = XLSX.utils.json_to_sheet(formattedData);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Sales Report\");\n\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      const blob = new Blob([excelBuffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      const fileName = `Sales_Report_${\n        new Date().toISOString().split(\"T\")[0]\n      }.xlsx`;\n      saveAs(blob, fileName);\n    } catch (error) {\n      console.error(\"Error downloading the sales report:\", error);\n      // Here you might want to show an error message to the user\n      // For example: message.error(\"Failed to download report. Please try again.\");\n    }\n  };\n\n  const DealsForReports = (agentId, orderStatus) => {\n    return getDealDetails({\n      ...officeQuery,\n      agent_id: agentId,\n      payment_status: orderStatus,\n      from_date: fromDate,\n      to_date: toDate,\n      limit: 100000,\n    })\n      .then((res) => {\n        setDealDetailsForReports(res);\n        return res.data; // Return the data for further processing\n      })\n      .catch((err) => {\n        console.log(err);\n        throw err; // Propagate the error\n      });\n  };\n  const DealDetails = useCallback(\n    (agentId, orderStatus) => {\n      setDealLoading(true);\n      getDealDetails({\n        ...page,\n        ...officeQuery,\n        agent_id: agentId,\n        payment_status: orderStatus,\n        from_date: fromDate,\n        to_date: toDate,\n      })\n        .then((res) => {\n          console.log(res);\n\n          setDealDetails(res);\n          setDealLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    [DDOrderStatus, DDAgentId, officeQuery.office_id, toDate, page]\n  );\n  function getAllOffice() {\n    getUser({ role: \"office\" })\n      .then((res) => {\n        setOffice(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function getAllAgent() {\n    getUser({ ...officeQuery, role: \"sales_agent\" })\n      .then((res) => {\n        setSalesAgent(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    getAllOffice();\n    getAllAgent();\n  }, []);\n  useEffect(() => {\n    getAllAgent();\n  }, [officeQuery]);\n  useEffect(() => {\n    DealDetails(\n      DDAgentId === \"all\" ? null : DDAgentId,\n      DDOrderStatus === \"all\" ? null : DDOrderStatus\n    );\n  }, [DealDetails]);\n  //Weekly, Monthly and  Date Picker Handler\n  function handleWeeklyMonthly(e) {\n    console.log(e);\n    setFromDate(e.start);\n    setToDate(e.end);\n  }\n  function handleDatePicker(e) {\n    setFromDate(e[0]);\n    setToDate(e[1]);\n  }\n  useEffect(() => {\n    if (!officeId) return;\n    if (officeId === \"all\") {\n      if (officeQuery.office_id) {\n        const newQuery = { ...officeQuery };\n        delete newQuery.office_id;\n        setOfficeQuery(newQuery);\n      }\n    } else {\n      setOfficeQuery((prevQuery) => ({\n        ...prevQuery,\n        office_id: officeId,\n      }));\n      // Reset other states if needed\n      setDDAgentId(\"all\");\n    }\n  }, [officeId]);\n  return (\n    <>\n      <div\n        id=\"Distributor_Dash_Top\"\n        className=\"flex justify-between w-full mb-5 flex-wrap gap-5 pt-[30px]\"\n      >\n        <ConfigProvider\n          theme={{\n            token: {\n              fontFamily: \"Baloo2\",\n              colorPrimary: \"#8086AC\",\n              colorLinkActive: \"#8086AC\",\n              colorLinkHover: \"#8086AC\",\n              colorLink: \"#8086AC\",\n            },\n          }}\n        >\n          {user.role == \"office\" ? (\n            <div className=\"p-2 px-4 rounded-lg text-[36px] font-bold  text-primary\">\n              {user.office}\n            </div>\n          ) : user.role == \"sales_agent\" ? null : (\n            <Select\n              showSearch\n              optionFilterProp=\"label\"\n              onChange={(e) => setOfficeId(e.value)}\n              defaultValue={\"all\"}\n              size=\"large\"\n              className=\"custom-select\"\n              labelInValue={true}\n              options={[\n                {\n                  value: \"all\",\n                  label: (\n                    <>\n                      All Offices{\" \"}\n                      <span className=\"highlighted-number\">\n                        {office.length}\n                      </span>\n                    </>\n                  ), // Number of options included here\n                },\n                ...office.map((office) => ({\n                  value: office._id,\n                  label: office.name,\n                })),\n              ]}\n            />\n          )}\n          <div id=\"DatePickers\" className=\"flex gap-4 items-center\">\n            <WeeklyMonthlyPicker\n              placeholder={\"Weekly/Monthly\"}\n              style={{ width: \"140px\", borderRadius: \"10px\" }}\n              handleChnage={handleWeeklyMonthly}\n            />\n            <RangePicker\n              showTime={false}\n              style={{ width: \"200px\", borderRadius: \"10px\" }}\n              size=\"large\"\n              placeholder={[\"Pick Data Range (Start)\", \"End\"]}\n              format=\"YYYY-MM-DD\"\n              onChange={(value, dateString) => {\n                handleDatePicker(dateString);\n              }}\n            />\n            <CustomButton\n              disabled={dealDetails?.data?.length <= 0}\n              onClick={downloadReport}\n              type=\"text\"\n            >\n              Download\n            </CustomButton>\n          </div>\n        </ConfigProvider>\n      </div>\n      <div\n        id=\"dealsDetails\"\n        className=\" p-[25px] rounded-2xl  bg-white w-full mb-[20px]\"\n      >\n        <div id=\"DealsHeader\" className=\"w-full flex justify-between mb-8\">\n          <h1 className=\"text-[24px] font-bold\">All Deal</h1>\n          {user.role == \"sales_agent\" ? null : (\n            <div id=\"chartController\" className=\"flex gap-4\">\n              <ConfigProvider\n                theme={{\n                  token: {\n                    fontFamily: \"Baloo2\",\n                    colorPrimary: \"#8086AC\",\n                    colorLinkActive: \"#8086AC\",\n                    colorLinkHover: \"#8086AC\",\n                    colorLink: \"#8086AC\",\n                  },\n                }}\n              >\n                <Select\n                  optionFilterProp=\"label\"\n                  onChange={(e) => setDDOrderStatus(e.value)}\n                  defaultValue={\"all\"}\n                  size=\"large\"\n                  labelInValue={true}\n                  options={[\n                    {\n                      value: \"all\",\n                      label: \"All Sales\",\n                    },\n                    {\n                      value: \"completed\",\n                      label: \"Completed\",\n                    },\n                    {\n                      value: \"pending\",\n                      label: \"Pending\",\n                    },\n                    {\n                      value: \"cancelled\",\n                      label: \"Cancelled\",\n                    },\n                  ]}\n                />\n                <Select\n                  showSearch\n                  optionFilterProp=\"label\"\n                  onChange={(e) => setDDAgentId(e.value)}\n                  defaultValue={\"all\"}\n                  size=\"large\"\n                  value={DDAgentId}\n                  style={{ maxWidth: 150, zIndex: \"400\" }}\n                  labelInValue={true}\n                  options={[\n                    {\n                      value: \"all\",\n                      label: \"All Agents\",\n                    },\n                    ...salesAgent.map((agent) => ({\n                      value: agent._id,\n                      label: agent.name + \" \" + agent.last_name,\n                    })),\n                  ]}\n                />\n              </ConfigProvider>\n            </div>\n          )}\n        </div>\n\n        <SidebarContext.Provider\n          value={{\n            getlist: DealDetails,\n            total: dealDetails.total || [],\n            page,\n            SetPage,\n          }}\n        >\n          <CustomTable\n            loading={dealLoading}\n            tableData={dealDetails.data}\n            columns={dealDetailCol}\n          />\n        </SidebarContext.Provider>\n        {/* <Table\n            loading={dealLoading}\n            pagination={{\n              total: dealDetails.total,\n              onChange: (page, pageSize) => {\n                setPage(page);\n              },\n            }}\n            scroll={{ x: 750 }}\n            className=\"custom-table-filter\"\n            columns={dealDetailCol}\n            dataSource={dealDetails.data}\n          /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Deals;\n"],"names":["AssignInstaller","data","open","setOpen","useState","sharedMethod","useContext","SidebarContext","dataSource","setDataSource","selectedItems","setSelectedItems","loading","setLoading","query","setQuery","getlist","getUser","res","handleSelectChange","value","handleClick","assignInstaller","handleAssignBtnClick","jsxs","jsx","RiToolsLine","CustomModal","ConfigProvider","Select","item","CustomButton","DealColumns","columnsName","ls","row","ReportActionModal","bgColor","statusMapping","formattedDate","_a","_b","_c","_d","_e","_f","indx","self","isUniqueSeenyorKit","i","color","Tag","total","record","status","RangePicker","DatePicker","Deals","DDOrderStatus","setDDOrderStatus","DDAgentId","setDDAgentId","user","SetUser","office","setOffice","salesAgent","setSalesAgent","officeId","setOfficeId","dealDetails","setDealDetails","dealDetailsForReports","setDealDetailsForReports","officeQuery","setOfficeQuery","dealLoading","setDealLoading","page","SetPage","fromDate","setFromDate","toDate","setToDate","dealDetailCol","downloadReport","reportData","DealsForReports","formattedData","index","saleDate","product","idx","worksheet","XLSX.utils","workbook","excelBuffer","XLSX.write","blob","fileName","saveAs","error","agentId","orderStatus","getDealDetails","err","DealDetails","useCallback","getAllOffice","getAllAgent","useEffect","handleWeeklyMonthly","e","handleDatePicker","newQuery","prevQuery","Fragment","WeeklyMonthlyPicker","dateString","agent","CustomTable"],"mappings":"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"}