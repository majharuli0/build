import{r as t,d as c,fv as g,j as p}from"./index-36N-M2mk.js";import"./mockData-DnyFJQLN.js";import h from"./barChart-BV6zHSDQ.js";import{T as A}from"./Template-BnaBVUYa.js";import{g as C}from"./utiles-qdiBvBmf.js";import{C as T}from"./UseCustomContext-CV3WDq6s.js";import"./index-CvBwm9AE.js";import"./helper-CgipsUzm.js";import"./WeeklyMonthlyPicker-DkxQwzTW.js";import"./index-Gd9MPIWl.js";import"./index-BCtXB39I.js";import"./index-dFF7PXce.js";import"./index-BbdsXKkH.js";import"./index-CvejL5lC.js";function z(){const{title:d,color:r,icon:f,dataAnalysis:u,summaryProps:x}=C("Apnea Index"),D=t.useContext(T),{chartToDate:o="",chartFromDate:n="",elderlyDetails:a}=D||{},[s,l]=t.useState(c().subtract(1,"day").format("YYYY-MM-DD")),[i,S]=t.useState(c().subtract(31,"day").format("YYYY-MM-DD")),[Y,I]=t.useState([]),m=t.useCallback(()=>{g({uids:a==null?void 0:a.deviceId,to_date:i,from_date:s}).then(e=>{I(e.data),console.log(e.data)}).catch(e=>{console.log(e)})},[s,a]);return t.useEffect(()=>{m()},[m]),t.useEffect(()=>{o&&n&&(l(o),S(n))},[o]),p.jsx(A,{title:d,color:r,icon:f,dataAnalysis:u,summaryProps:x,children:p.jsx(h,{data:Y,color:r,dataType:"number",fromDate:i,toDate:s})})}export{z as default};
