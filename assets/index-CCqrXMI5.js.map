{"version":3,"file":"index-CCqrXMI5.js","sources":["../../src/Components/OwnershipStructureModal/index.jsx","../../src/Components/ActionManu/OwnershipStructure.jsx","../../src/Components/ActionManu/SubscriptionDetails.jsx","../../src/Components/LoginsSessionsModal/index.jsx","../../src/Components/ActionManu/LoginsSessions.jsx","../../src/Pages/AdminUser/utiles.jsx","../../src/hook/useApi.js","../../src/Pages/AdminUser/index.jsx"],"sourcesContent":["import { Divider, Modal, Steps, Tag } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { MdOutlineMail } from \"react-icons/md\";\r\nimport { MdOutlineLocalPhone } from \"react-icons/md\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function OwnershipStructureModal({\r\n  isvisible,\r\n  setVisible,\r\n  row_data,\r\n}) {\r\n  const { rolesFormatter } = useContext(SidebarContext);\r\n  const navigate = useNavigate();\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n  function getItems(data = {}) {\r\n    function handleUserClick() {\r\n      navigate(`/super-admin/user/${data?._id}`, {\r\n        state: { role: data?.role },\r\n      });\r\n    }\r\n    return {\r\n      title: (\r\n        <div className=\"flex items-center gap-2\">\r\n          <h1\r\n            className=\"font-semibold font-base cursor-pointer select-none hover:text-primary/70\"\r\n            onClick={handleUserClick}\r\n          >\r\n            {data?.name} {data?.last_name}\r\n          </h1>\r\n          <Tag>{rolesFormatter[data?.role]}</Tag>\r\n        </div>\r\n      ),\r\n      description: (\r\n        <ul>\r\n          <li className=\"flex items-center gap-1\">\r\n            <MdOutlineMail />\r\n            <p>{data?.email}</p>\r\n          </li>\r\n          <li className=\"flex items-center gap-1\">\r\n            <MdOutlineLocalPhone />\r\n            <p>\r\n              {data?.contact_code} {data?.contact_number}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      ),\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isvisible}\r\n        onCancel={onClose}\r\n        footer={null}\r\n        centered\r\n        width=\"80vw\"\r\n        className=\"device-configuration-modal my-6 lg:max-w-[50vw]\"\r\n      >\r\n        <div className=\"p-3\">\r\n          <Steps\r\n            progressDot\r\n            current={10}\r\n            direction=\"vertical\"\r\n            items={Array.isArray(row_data) ? row_data?.map(getItems) : []}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { PiGitMergeBold } from \"react-icons/pi\";\r\nimport OwnershipStructureModal from \"../OwnershipStructureModal\";\r\nexport default function OwnershipStructure({ data }) {\r\n  const [isvisible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        shape=\"circle\"\r\n        icon={<PiGitMergeBold />}\r\n        onClick={() => setVisible(true)}\r\n      />\r\n      <OwnershipStructureModal\r\n        isvisible={isvisible}\r\n        setVisible={setVisible}\r\n        row_data={data?.parents}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Empty, Modal, Tooltip } from \"antd\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { PiGitMergeBold } from \"react-icons/pi\";\r\nimport { getSubscriptionDetails } from \"../../api/subscriptions\";\r\nimport { getPaymentMethods } from \"../../api/ordersManage\";\r\nimport { RiSecurePaymentLine } from \"react-icons/ri\";\r\nimport { Spin } from \"antd\";\r\nexport default function SubscriptionDetailsModal({ data }) {\r\n  const [isvisible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subscriptionDetails, setSubscriptionDetails] = useState(null);\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n  const getSubscriptionData = useCallback(() => {\r\n    setLoading(true);\r\n    // getSubscriptionDetails({ id: data?.subscription_id })\r\n    getSubscriptionDetails({ id: data?.subscription_id })\r\n      .then((response) => {\r\n        setSubscriptionDetails(response);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching subscription details:\", error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [data]);\r\n  const getPaymentMethodList = useCallback(() => {\r\n    getPaymentMethods({ customer_id: subscriptionDetails?.customer })\r\n      .then((response) => {\r\n        setPaymentMethods(response || []);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching payment methods:\", error);\r\n      });\r\n  }, [subscriptionDetails?.customer]);\r\n  useEffect(() => {\r\n    if (isvisible) {\r\n      getSubscriptionData();\r\n    }\r\n  }, [isvisible, getSubscriptionData]);\r\n  useEffect(() => {\r\n    if (subscriptionDetails) {\r\n      getPaymentMethodList();\r\n    }\r\n  }, [subscriptionDetails, getPaymentMethodList]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        shape=\"round\"\r\n        icon={<RiSecurePaymentLine />}\r\n        onClick={() => setVisible(true)}\r\n      >\r\n        Subscription\r\n      </Button>\r\n\r\n      <Modal\r\n        open={isvisible}\r\n        onCancel={onClose}\r\n        footer={null}\r\n        centered\r\n        width=\"80vw\"\r\n        className=\"device-configuration-modal my-6 lg:max-w-[50vw]\"\r\n      >\r\n        {!subscriptionDetails && loading && (\r\n          <Spin className=\"flex justify-center items-center h-64\" />\r\n        )}\r\n        {!subscriptionDetails && !loading && (\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        )}\r\n        {subscriptionDetails && (\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Subscription Details</h2>\r\n\r\n            <div className=\"grid grid-cols-2 gap-y-4 gap-x-6\">\r\n              {/* Subscription Name */}\r\n              {/* <div>\r\n              <div className=\"text-[16px] text-gray-500\">Subscription Name</div>\r\n              <div className=\"text-[20px] text-black font-medium\">\r\n                Seenyor Pro\r\n              </div>\r\n            </div> */}\r\n              {/* Subscription Status */}\r\n              <div>\r\n                <div className=\"text-[16px] text-gray-500\">\r\n                  Subscription Status\r\n                </div>\r\n                <div\r\n                  className=\"text-[20px] text-green-600 font-medium capitalize flex items-center gap-2\"\r\n                  style={{\r\n                    color:\r\n                      subscriptionDetails?.status === \"active\"\r\n                        ? \"green\"\r\n                        : subscriptionDetails?.status === \"trialing\"\r\n                        ? \"black\"\r\n                        : \"red\",\r\n                  }}\r\n                >\r\n                  {subscriptionDetails && (\r\n                    <span className=\"relative flex size-3\">\r\n                      <span\r\n                        className=\"absolute inline-flex h-full w-full animate-ping rounded-full  opacity-75\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            subscriptionDetails?.status === \"active\"\r\n                              ? \"green\"\r\n                              : subscriptionDetails?.status === \"trialing\"\r\n                              ? \"black\"\r\n                              : \"red\",\r\n                        }}\r\n                      ></span>\r\n                      <span\r\n                        className=\"relative inline-flex size-3 rounded-full \"\r\n                        style={{\r\n                          backgroundColor:\r\n                            subscriptionDetails?.status === \"active\"\r\n                              ? \"green\"\r\n                              : subscriptionDetails?.status === \"trialing\"\r\n                              ? \"black\"\r\n                              : \"red\",\r\n                        }}\r\n                      ></span>\r\n                    </span>\r\n                  )}\r\n\r\n                  {subscriptionDetails?.status || \"--\"}\r\n                </div>\r\n              </div>\r\n              {/* Amount */}\r\n              <div>\r\n                <div className=\"text-[16px] text-gray-500\">Amount</div>\r\n                <div className=\"text-[20px] text-black font-medium\">\r\n                  $ {subscriptionDetails?.plan?.amount / 100}{\" \"}\r\n                  {subscriptionDetails?.plan?.currency?.toUpperCase()}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Recurring Cycle */}\r\n              <div>\r\n                <div className=\"text-[16px] text-gray-500\">Recurring Cycle</div>\r\n                <div className=\"text-[20px] text-black font-medium capitalize\">\r\n                  {subscriptionDetails?.plan?.interval || \"--\"}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Next Payment Date */}\r\n              <div>\r\n                <div className=\"text-[16px] text-gray-500\">\r\n                  Next Payment Date\r\n                </div>\r\n                <div className=\"text-[20px] text-black font-medium\">\r\n                  {subscriptionDetails?.current_period_end\r\n                    ? new Date(\r\n                        subscriptionDetails?.current_period_end * 1000\r\n                      ).toLocaleDateString(\"en-US\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"numeric\",\r\n                      })\r\n                    : \"--\"}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Default Card */}\r\n              <div className=\"col-span-2\">\r\n                <div className=\"text-[16px] text-gray-500 mb-2\">\r\n                  Saved Cards\r\n                </div>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  {paymentMethods.map((pm) => {\r\n                    const card = pm.card;\r\n                    const isDefault = pm.isDefault;\r\n\r\n                    return (\r\n                      <div\r\n                        key={pm.id}\r\n                        className={`border rounded-xl p-4 flex justify-between items-center shadow-sm ${\r\n                          isDefault\r\n                            ? \"border-blue-600 bg-blue-50\"\r\n                            : \"border-gray-200\"\r\n                        }`}\r\n                      >\r\n                        <div>\r\n                          <div className=\"text-[14px] text-gray-500\">\r\n                            {card.brand.toUpperCase()}\r\n                          </div>\r\n                          <div className=\"text-[18px] font-medium\">\r\n                            **** **** **** {card.last4}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500\">\r\n                            Exp: {card.exp_month}/{card.exp_year}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {isDefault && (\r\n                          <div className=\"text-blue-600 text-sm font-medium bg-blue-100 px-3 py-1 rounded-full\">\r\n                            Default\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                  {paymentMethods.length === 0 && (\r\n                    <div className=\"text-gray-500 text-sm italic\">\r\n                      No saved cards available.\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Empty,\r\n  Modal,\r\n  Popconfirm,\r\n  Spin,\r\n  Steps,\r\n  Tag,\r\n} from \"antd\";\r\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { MdOutlineMail } from \"react-icons/md\";\r\nimport { MdOutlineLocalPhone } from \"react-icons/md\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getLogins } from \"@/api/Users\";\r\nimport { logout, logoutSessionUser } from \"@/api/login-v1\";\r\nimport toast from \"react-hot-toast\";\r\nimport { FaCodeCommit } from \"react-icons/fa6\";\r\nimport { IoLogOut } from \"react-icons/io5\";\r\n\r\nexport default function LoginsSessionsModal({\r\n  isvisible,\r\n  setVisible,\r\n  row_data,\r\n}) {\r\n  const { rolesFormatter } = useContext(SidebarContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const [logins, setLogins] = useState([]);\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n  const getLoginsSession = useCallback(() => {\r\n    if (!row_data?._id) return;\r\n    setLoading(true);\r\n    getLogins({ userId: row_data?._id })\r\n      .then((res) => {\r\n        setLogins(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [row_data?._id]);\r\n  useEffect(() => {\r\n    getLoginsSession();\r\n  }, [getLoginsSession]);\r\n  function getItems(data = {}) {\r\n    function handleLogout(id) {\r\n      setLoading(true);\r\n      logoutSessionUser({ id })\r\n        .then((res) => {\r\n          toast.success(\"Logout Seccessfully!\");\r\n          getLoginsSession();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(\"Failed to Logout!\");\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n    return {\r\n      title: (\r\n        <div className=\"flex items-center gap-2\">\r\n          <h1 className=\"font-semibold font-base cursor-pointer select-none hover:text-primary/70\">\r\n            {data?.deviceName}\r\n          </h1>\r\n          <Tag>{data?.deviceType}</Tag>\r\n        </div>\r\n      ),\r\n      description: (\r\n        <div>\r\n          <ul>\r\n            <li className=\"flex items-center gap-1\">\r\n              <IoLogOut />\r\n              <p>\r\n                {\" \"}\r\n                Logout Status:{\" \"}\r\n                {data?.loggedOut ? (\r\n                  <Tag color=\"red\">Logged Out</Tag>\r\n                ) : (\r\n                  <Tag color=\"green\">Active</Tag>\r\n                )}\r\n              </p>\r\n            </li>\r\n            <li className=\"flex items-center gap-1\">\r\n              <FaCodeCommit />\r\n              <p>IP Adress: {data?.ipAddress}</p>\r\n            </li>\r\n            {!data?.loggedOut && (\r\n              <li className=\"flex items-center gap-1 logout_pop\">\r\n                <Popconfirm\r\n                  title=\"Logout!\"\r\n                  description=\"Are you sure to logout?\"\r\n                  onConfirm={() => handleLogout(data?._id)}\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                  className=\"p-4 \"\r\n                >\r\n                  <Button className=\"mt-4\" icon={<IoLogOut />}>\r\n                    Logout\r\n                  </Button>\r\n                </Popconfirm>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      ),\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isvisible}\r\n        onCancel={onClose}\r\n        footer={null}\r\n        centered\r\n        width=\"80vw\"\r\n        className=\"device-configuration-modal my-6 lg:max-w-[50vw] !max-h-[90vh]\"\r\n      >\r\n        <div className=\"p-3\">\r\n          <h1 className=\"text-primary font-semibold text-2xl mb-4\">\r\n            {\" \"}\r\n            All Logins\r\n          </h1>\r\n\r\n          <Spin spinning={loading} className=\"w-full mx-auto py-16\">\r\n            <div className=\"min-h-[300px] flex items-start justify-center h-full !max-h-[80vh] overflow-y-auto\">\r\n              {logins.length == 0 && (\r\n                <div className=\"w-full flex items-center mt-12 justify-center\">\r\n                  <Empty className=\"mx-auto w-fit flex flex-col items-center justify-center\"></Empty>\r\n                </div>\r\n              )}\r\n              {logins?.length > 0 && (\r\n                <Steps\r\n                  current={10000}\r\n                  direction=\"vertical\"\r\n                  progressDot={(dot, { index }) => {\r\n                    const item = logins[index];\r\n                    const color = item?.loggedOut ? \"red\" : \"green\";\r\n                    return (\r\n                      <span\r\n                        style={{\r\n                          width: 10,\r\n                          height: 10,\r\n                          borderRadius: \"50%\",\r\n                          display: \"inline-block\",\r\n                          backgroundColor: color,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  items={\r\n                    Array.isArray(logins)\r\n                      ? logins.map((data) => ({\r\n                          ...getItems(data),\r\n                          className: data.loggedOut\r\n                            ? \"loggedout-step\"\r\n                            : \"active-step\",\r\n                        }))\r\n                      : []\r\n                  }\r\n                />\r\n              )}\r\n            </div>\r\n          </Spin>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport OwnershipStructureModal from \"../OwnershipStructureModal\";\r\nimport { MdDevices } from \"react-icons/md\";\r\nimport LoginsSessionsModal from \"../LoginsSessionsModal\";\r\nexport default function LoginsSessions({ data }) {\r\n  const [isvisible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        shape=\"circle\"\r\n        icon={<MdDevices />}\r\n        onClick={() => setVisible(true)}\r\n      />\r\n      {isvisible && (\r\n        <LoginsSessionsModal\r\n          isvisible={isvisible}\r\n          setVisible={setVisible}\r\n          row_data={data}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\r\nimport {\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  Switch,\r\n  Modal,\r\n  ConfigProvider,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport ls from \"store2\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { updateUserDetails } from \"@/api/Users\";\r\nimport OwnershipStructure from \"../../Components/ActionManu/OwnershipStructure\";\r\nimport { TbRefreshDot } from \"react-icons/tb\";\r\nimport { FireTwoTone, StopOutlined, SyncOutlined } from \"@ant-design/icons\";\r\nimport QuickDeviceInfo from \"../../Components/ActionManu/QuickDeviceInfo\";\r\nimport SubscriptionDetailsModal from \"../../Components/ActionManu/SubscriptionDetails\";\r\nimport LoginsSessions from \"@/Components/ActionManu/LoginsSessions\";\r\nfunction StatusSwitch({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorText: \"#707EAE\",\r\n          colorPrimary: \"#06A44F\",\r\n          colorLinkActive: \"#8086AC\",\r\n          colorLinkHover: \"#8086AC\",\r\n          colorLink: \"#8086AC\",\r\n        },\r\n      }}\r\n    >\r\n      <Switch\r\n        loading={handleLoading}\r\n        onChange={handleChange}\r\n        handleBg=\"#00000\"\r\n        className=\"bg-slate-200\"\r\n        value={status}\r\n        // defaultChecked\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n//Dropdown For Office Status Change\r\nfunction StatusDropdown({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      {/* Red or green circle based on status */}\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status == true ? \"bg-[#1EB564]\" : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      {/* Status select dropdown */}\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          dropdownMatchSelectWidth={false}\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: false, label: <span>Disable</span> },\r\n            { value: true, label: <span>Active</span> },\r\n          ]}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const useGetColumnsByRoleAndActiveTab = (activeTab) => {\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [result, setResult] = useState(undefined);\r\n  const { setUserDetil } = useCountStore();\r\n  const navigate = useNavigate();\r\n  const handelClick = (row, name) => {\r\n    setUserDetil(row);\r\n\r\n    navigate(\r\n      `/super-admin/user/${\r\n        activeTab == \"Users\" ? row.end_user_id + \"-\" + row._id : row._id\r\n      }`,\r\n      {\r\n        state: { role: row.role },\r\n      }\r\n    );\r\n  };\r\n  const roleBasedColumns = {\r\n    super_admin: {\r\n      distributor: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"office_count\",\r\n        \"seles_agent_count\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"action\",\r\n      ],\r\n      office: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"seles_agent_count\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"action\",\r\n      ],\r\n      sales_agent: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        // \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"agent_id\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"action\",\r\n      ],\r\n      nursing_home: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        // \"office_name\",\r\n        // \"sales_agent_name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"device_count\",\r\n        \"alert_count\",\r\n        \"assigned_nurse_count\",\r\n        \"action\",\r\n      ],\r\n      monitoring_station: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      control_center: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"device_count\",\r\n        \"action\",\r\n      ],\r\n      support_agent: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"action\",\r\n      ],\r\n      installer: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        // \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"action\",\r\n      ],\r\n      super_admin: [\"name\", \"contact_number\", \"action\"],\r\n      end_user: [\r\n        \"name\",\r\n        // \"distributor_name\",\r\n        // \"office_name\",\r\n        // \"sales_agent_name\",\r\n        // \"installer\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"alert_count\",\r\n        \"device_count\",\r\n        // \"subscription_status\",\r\n        // \"subscription_plan\",\r\n        // \"subscription_ex_date\",\r\n        // \"last_login\",\r\n        \"action\",\r\n      ],\r\n      elderly: [\r\n        \"name\",\r\n        \"age\",\r\n        \"email\",\r\n        \"contact_number\",\r\n        \"address\",\r\n        \"alert_count\",\r\n        \"device_count\",\r\n        // \"ownership_str\",\r\n        \"action\",\r\n      ],\r\n      nurse: [\"name\", \"contact_number\", \"action\"],\r\n    },\r\n  };\r\n  const roleMapping = {\r\n    distributor_id: \"distributor\",\r\n    office_id: \"office\",\r\n    sales_agent_id: \"sales_agent\",\r\n    nursing_home_id: \"nursing_home\",\r\n    monitoring_station_id: \"monitoring_station\",\r\n    support_agent_id: \"support_agent\",\r\n  };\r\n  function handleClick(id, n) {\r\n    navigate(`/super-admin/user/${n}`, {\r\n      state: { role: roleMapping[id] },\r\n    });\r\n  }\r\n  const allColumns = {\r\n    //common col ========================>\r\n    name: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"office\":\r\n            return \"Office\";\r\n          case \"nurse\":\r\n            return \"Nurse Name\";\r\n          case \"distributor\":\r\n            return \"Distributor Name\";\r\n          case \"sales_agent\":\r\n            return \"Sales Agent Name\";\r\n          case \"nursing_home\":\r\n            return \"Nursing Home\";\r\n          case \"end_user\":\r\n            return \"End User\";\r\n          case \"monitoring_station\":\r\n            return \"Monitoring Station\";\r\n          case \"control_center\":\r\n            return \"Control Center\";\r\n          case \"support_agent\":\r\n            return \"Support Agent\";\r\n          case \"installer\":\r\n            return \"Installer\";\r\n          case \"elderly\":\r\n            return \"User Name\";\r\n          default:\r\n            return \"Name\";\r\n        }\r\n      },\r\n      // key: \"id\",\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: (event) => {\r\n            handelClick(record);\r\n          },\r\n        };\r\n      },\r\n      render: (row) => {\r\n        const getRole = activeTab === \"Users\" ? \"elderly\" : null;\r\n        return (\r\n          // row?.role == (\"monitoring_company\", \"elderly\") ? (\r\n          //   <button>\r\n          //     <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n          //       {row.name}\r\n          //     </span>\r\n          //   </button>\r\n          // ) : (\r\n          <button>\r\n            <AdminFiled data={row} role={getRole} />\r\n          </button>\r\n        );\r\n      },\r\n      // ),\r\n    },\r\n    address: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"elderly\":\r\n            return \"Caregiver Address\";\r\n          default:\r\n            return \"Address\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button style={{ width: \"200px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab === \"Users\" ? row.end_user_address : row.address}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    email: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"elderly\":\r\n            return \"Caregiver Email\";\r\n          default:\r\n            return \"Email Address\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondar text-nowrapy\">\r\n          {activeTab === \"Users\" ? row.end_user_email : row.email}\r\n        </span>\r\n      ),\r\n    },\r\n    contact_number: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"elderly\":\r\n            return \"Caregiver Number\";\r\n          default:\r\n            return \"Contact Number\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab === \"Users\"\r\n              ? `${\r\n                  row.end_user_contact_code ? row.end_user_contact_code : \"\"\r\n                } ${row.end_user_contact_number}`\r\n              : `${row.contact_code ? row.contact_code : \"\"} ${\r\n                  row.contact_number\r\n                }`}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_person: {\r\n      title: \"Contact Person\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.contact_person}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    date: {\r\n      title: \"Date of Sales\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    age: {\r\n      title: \"Age\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.age}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    parents: {\r\n      title: \"Ownership Structure\",\r\n      render: (row) => <OwnershipStructure data={row} />,\r\n    },\r\n    ownership_str: {\r\n      title: \"Ownership Structure\",\r\n      render: (row) => {\r\n        if (!row.hierarchy) return;\r\n        // Mapping for titles of each hierarchy level\r\n        const hierarchyTitles = {\r\n          distributor_id: \"Distributor\",\r\n          office_id: \"Office\",\r\n          sales_agent_id: \"Sales Agent\",\r\n          nursing_home_id: \"Nursing Home\",\r\n          monitoring_station_id: \"Monitoring Station\",\r\n          support_agent_id: \"Support Agent\",\r\n          end_user_id: \"End User\",\r\n          caregiver_id: \"Caregiver\", // Additional ID not in hierarchy\r\n        };\r\n\r\n        // Manually define the hierarchy levels in the desired order\r\n        const filteredHierarchy = [\r\n          {\r\n            id: \"distributor_id\",\r\n            title: hierarchyTitles[\"distributor_id\"],\r\n            value: row.hierarchy[\"distributor_id\"] || \"N/A\",\r\n          },\r\n          {\r\n            id: \"office_id\",\r\n            title: hierarchyTitles[\"office_id\"],\r\n            value: row.hierarchy[\"office_id\"] || \"N/A\",\r\n          },\r\n          {\r\n            id: \"sales_agent_id\",\r\n            title: hierarchyTitles[\"sales_agent_id\"],\r\n            value: row.hierarchy[\"sales_agent_id\"] || \"N/A\",\r\n          },\r\n\r\n          {\r\n            id: \"monitoring_station_id\",\r\n            title: hierarchyTitles[\"monitoring_station_id\"],\r\n            value: row.hierarchy[\"monitoring_station_id\"] || \"N/A\",\r\n          },\r\n          {\r\n            id: \"nursing_home_id\",\r\n            title: hierarchyTitles[\"nursing_home_id\"],\r\n            value: row.hierarchy[\"nursing_home_id\"] || \"N/A\",\r\n          },\r\n        ].filter((level) => level.value !== \"N/A\"); // Optional: Remove levels with no value\r\n\r\n        return (\r\n          <div className=\"ownership-str\">\r\n            {filteredHierarchy.map((level, index) => (\r\n              <button\r\n                key={level.id}\r\n                onClick={() => handleClick(level.id, level.value)}\r\n                className=\"ownership-button\"\r\n              >\r\n                {/* Display Title */}\r\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary hover:text-text-primary\">\r\n                  {level.title}{\" \"}\r\n                </span>\r\n                {index < filteredHierarchy.length - 1 && \" / \"}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    external_id: {\r\n      title: \"External ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.external_id}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products: {\r\n      title: \"Products\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products_price: {\r\n      title: \"Products Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons: {\r\n      title: \"Addons\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addons}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons_price: {\r\n      title: \"Addons Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addon_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    total_price: {\r\n      title: \"Total Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.total}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //count related col ===========================>\r\n    avg_sales: {\r\n      title: \"Average Sales\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.aleravg_salest_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    alert_count: {\r\n      title: \"Active Alerts\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.unresolved_alarm_count || 0}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    subscription_plan: {\r\n      title: \"Subscription Plan\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n            <FireTwoTone /> AI Monitoring\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    last_login: {\r\n      title: \"Last Login\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n            12-05-2025; 10: 23 PM\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    subscription_ex_date: {\r\n      title: \"Subscription Expire Date\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n            1 July, 2026\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    subscription_status: {\r\n      title: \"Subscription Status\",\r\n      render: (row) => {\r\n        const isActive = Math.random() < 0.5; // 50% chance\r\n        return (\r\n          <button>\r\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n              {isActive ? (\r\n                <Tag\r\n                  icon={<SyncOutlined spin />}\r\n                  color=\"success\"\r\n                  className=\"font-semibold\"\r\n                >\r\n                  Active\r\n                </Tag>\r\n              ) : (\r\n                <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                  Canceled\r\n                </Tag>\r\n              )}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n\r\n    device_count: {\r\n      title: \"Devices\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary flex gap-3\">\r\n            {/* {row?.device_count} */}\r\n            <Tooltip title=\"Online Devices\">\r\n              <div className=\"flex items-center gap-1 border px-2 py-1 rounded-2xl hover:bg-slate-100\">\r\n                <div className=\"size-2 bg-success rounded-full \"></div>{\" \"}\r\n                <span className=\"leading-3 font-semibold\">\r\n                  {row?.online_device_count}\r\n                </span>\r\n              </div>\r\n            </Tooltip>\r\n            <Tooltip title=\"Offline Devices\">\r\n              <div className=\"flex items-center gap-1 border px-2 py-1 rounded-2xl hover:bg-slate-100\">\r\n                <div className=\"size-2 bg-Critical rounded-full \"></div>{\" \"}\r\n                <span className=\"leading-3 font-semibold\">\r\n                  {\" \"}\r\n                  {row?.offline_device_count}\r\n                </span>\r\n              </div>\r\n            </Tooltip>\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    sales_agent_count: {\r\n      title: \"Sales Agents\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.sales_agent_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    end_user_count: {\r\n      title: \"End Users\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.end_user_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    nursing_home_count: {\r\n      title: \"Nursing Homes\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nursing_home_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    monitoring_company_count: {\r\n      title: \"Monitoring Stations\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.monitoring_station_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    office_count: {\r\n      title: \"Offices\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.office_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    elderly_count: {\r\n      title: \"Elderly\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.elderly_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    assigned_nurse_count: {\r\n      title: \"Assigned Nurse\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nurse_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //All Type Of Naming Col ==========================>\r\n    office_name: {\r\n      title: \"Office Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.office_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    distributor_name: {\r\n      title: \"Distributor Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.distributor_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    sales_agent_name: {\r\n      title: \"Sales Agent Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.sales_agent_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    installer: {\r\n      title: \"Installer Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.installer_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //Others ==============================================>\r\n    agent_id: {\r\n      title: \"Agent ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.agent_id}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //action col =====================================>\r\n    status: {\r\n      title: \"Status\",\r\n      render: (row) =>\r\n        row?.role == \"sales_agent\" ? (\r\n          <StatusSwitch row={row} />\r\n        ) : (\r\n          <StatusDropdown row={row} />\r\n        ),\r\n    },\r\n    action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      fixed: \"right\",\r\n      width: 150,\r\n      render: (row) => (\r\n        <div className=\"flex items-center gap-2\">\r\n          {activeTab?.includes(\"End User\") && (\r\n            <button\r\n              disabled={!row?.subscription_id}\r\n              className=\"disabled:opacity-20\"\r\n            >\r\n              <SubscriptionDetailsModal data={row} />\r\n            </button>\r\n          )}\r\n          {!activeTab?.includes(\"Monitoring Station\") &&\r\n            !activeTab?.includes(\"Distributors\") && (\r\n              <button\r\n                disabled={row?.parents?.length === 0}\r\n                className=\"disabled:opacity-20\"\r\n              >\r\n                <OwnershipStructure data={row} />\r\n              </button>\r\n            )}\r\n\r\n          {mainRole == \"super_admin\" && <LoginsSessions data={row} />}\r\n\r\n          {/* {activeTab?.includes(\"Users\") && <QuickDeviceInfo data={row} />} */}\r\n          <AdminSupportAgentTableAction\r\n            // getlist={() => getList(query)}\r\n            data={activeTab == \"Users\" ? { ...row, role: \"user\" } : row}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    // Check role and set the columns accordingly\r\n    if (activeTab == \"Super Admins\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"super_admin\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"super_admin\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Support Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"support_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"support_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Distributors\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"distributor\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"distributor\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Offices\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"office\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"office\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nursing Homes\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nursing_home\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nursing_home\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Sales Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"sales_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"sales_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"End Users\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"end_user\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"end_user\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Installers\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"installer\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"installer\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Monitoring Stations\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow =\r\n        roleBasedColumns[mainRole]?.[\"monitoring_station\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"monitoring_station\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Control Centers\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow =\r\n        roleBasedColumns[mainRole]?.[\"control_center\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"control_center\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nurses\") {\r\n      console.log(activeTab);\r\n\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nurse\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nurse\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Users\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"elderly\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"elderly\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    }\r\n  }, [activeTab]); // Run this effect whenever `role` changes\r\n\r\n  return result;\r\n};\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useApi = (apiFunction) => {\r\n  const cancelTokenSource = useRef(null);\r\n  const [response, setresponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const makeRequest = useCallback(\r\n    async (params = {}) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Cancel the previous request if it exists\r\n      if (cancelTokenSource.current) {\r\n        cancelTokenSource.current.cancel(\"Previous request canceled!\");\r\n      }\r\n\r\n      // Create a new CancelToken\r\n      cancelTokenSource.current = axios.CancelToken.source();\r\n\r\n      try {\r\n        // Pass the cancelToken to the API function\r\n        const response = await apiFunction({\r\n          ...params,\r\n          cancelToken: cancelTokenSource.current.token,\r\n        });\r\n        setresponse(response); // Adjust according to your response structure\r\n      } catch (err) {\r\n        if (axios.isCancel(err)) {\r\n          console.log(\"Request canceled:\", err.message);\r\n        } else {\r\n          console.error(\"Fetch error:\", err);\r\n          setError(err);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [apiFunction]\r\n  );\r\n\r\n  // Cleanup function to cancel ongoing requests when the component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (cancelTokenSource.current) {\r\n        cancelTokenSource.current.cancel(\r\n          \"Component unmounted, request canceled!\"\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return { response, loading, error, makeRequest };\r\n};\r\n\r\nexport default useApi;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Space, Table, Tag, Modal } from \"antd\";\r\nimport { getUserPage, updateUser } from \"@/api/AdminUser\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ls from \"store2\";\r\nimport CustomButton from \"../../Shared/button/CustomButton\";\r\nimport throttle from \"@/utils/throttle\";\r\nimport SearchInput from \"../../Shared/Search/SearchInput\";\r\nimport Sort from \"../../Shared/sort/Sort\";\r\nimport AdminSupportAgentTable from \"@/Components/PubTable/AdminSupportAgentTable\";\r\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\r\nimport { Switch } from \"antd\";\r\nimport CreateAdminSupportAgent from \"@/Components/PubTable/CreateAndEditUsers\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport TabMenus from \"@/Components/TabMenus\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { allElderProfilePage } from \"@/api/RecentAlerts\";\r\nimport { useGetColumnsByRoleAndActiveTab } from \"./utiles\";\r\nimport { getUser } from \"@/api/Users\";\r\nimport { getElderlies } from \"@/api/elderly\";\r\nimport service from \"@/utils/axiosRequest\";\r\nimport axios from \"axios\";\r\nimport useApi from \"@/hook/useApi\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../../redux/features/users/usersSlice\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { response, loading, error, makeRequest } = useApi(getUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [changeParams, setChangeParams] = useState({});\r\n  const [role, setRole] = useState(\"\");\r\n  const [createText, setCreateText] = useState(\"Monitoring Stations\");\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [elderlyRes, setElderlyRes] = useState([]);\r\n  const [loadingEl, setLoadingEl] = useState(false);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n  const [menus] = useState([\r\n    { bo: true, warring: false, text: \"Monitoring Stations\" },\r\n    { bo: true, warring: false, text: \"Distributors\" },\r\n    { bo: true, warring: false, text: \"Offices\" },\r\n    { bo: true, warring: false, text: \"Sales Agents\" },\r\n    { bo: true, warring: false, text: \"Nursing Homes\" },\r\n    { bo: true, warring: false, text: \"Nurses\" },\r\n    { bo: true, warring: false, text: \"Control Centers\" },\r\n    { bo: true, warring: false, text: \"Support Agents\" },\r\n    { bo: true, warring: false, text: \"Installers\" },\r\n    { bo: true, warring: false, text: \"End Users\" },\r\n    { bo: true, warring: false, text: \"Users\" },\r\n  ]);\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n  const [search, setSearch] = useState(\"\");\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"Time\");\r\n  const [page, SetPage] = useState({});\r\n  const [query, setQuey] = useState({});\r\n  const [list, SetList] = useState([]);\r\n  const [total, SetTotle] = useState(0);\r\n  const [columns, SetColumns] = useState([]);\r\n  const roleMappings = {\r\n    Distributors: \"Distributor\",\r\n    \"Nursing Homes\": \"Nursing Home\",\r\n    \"Sales Agents\": \"Sales Agent\",\r\n    \"Support Agents\": \"Support Agent\",\r\n    \"Super Admins\": \"Super Admin\",\r\n    Users: \"User\",\r\n    Installers: \"Installer\",\r\n    \"Monitoring Stations\": \"Monitoring Station\",\r\n    \"Control Centers\": \"Control Center\",\r\n    Offices: \"Office\",\r\n    \"End Users\": \"End User\",\r\n    Nurses: \"Nurse\",\r\n  };\r\n  const roleMappings2 = {\r\n    Distributors: \"distributor\",\r\n    \"Nursing Homes\": \"nursing_home\",\r\n    \"Sales Agents\": \"sales_agent\",\r\n    \"Support Agents\": \"supports_agent\",\r\n    \"Monitoring Stations\": \"monitoring_agency\",\r\n    \"Control Centers\": \"monitoring_station\",\r\n    Installers: \"installer\",\r\n    \"End Users\": \"end_user\",\r\n    Offices: \"office\",\r\n    \"Super Admins\": \"super_admin\",\r\n    Users: \"elderly\",\r\n    Nurses: \"nurse\",\r\n  };\r\n  const data = [\"Time\", \"Name\"];\r\n  const getCulumns = useGetColumnsByRoleAndActiveTab(activeTab);\r\n\r\n  useEffect(() => {\r\n    if (getCulumns) {\r\n      SetColumns(getCulumns);\r\n    }\r\n  }, [getCulumns, activeTab]);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const tab = params.get(\"tab\");\r\n    const menuItems = menus.map((menu) => menu.text);\r\n    if (menuItems.includes(tab)) {\r\n      setActiveTab(tab);\r\n    } else {\r\n      setActiveTab(\"Monitoring Stations\");\r\n    }\r\n    navigate(`/super-admin/users?tab=${tab}`);\r\n  }, []);\r\n  const handelOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const HandleTabText = (e) => {\r\n    SetPage({ page: 1 });\r\n    setActiveTab(e.name);\r\n\r\n    // navigate(`/super-admin/users?tab=${e.name}`);\r\n  };\r\n  const getlist = useCallback(async () => {\r\n    SetList([]);\r\n    let queries = { ...page, ...query };\r\n    const formattedRoleName = roleMappings[activeTab];\r\n    setCreateText(formattedRoleName);\r\n    queries.role = roleMappings2[activeTab];\r\n    setRole(queries.role);\r\n    navigate(`/super-admin/users?tab=${activeTab}`);\r\n\r\n    if (queries.role === \"elderly\") {\r\n      setLoadingEl(true);\r\n\r\n      delete queries.role;\r\n      getElderlies({\r\n        // skipFields:\r\n        //   \"rooms,hierarchy_user_ids,medications,diseases,comments,emergency_contacts,alarms_data\",\r\n        ...queries,\r\n      })\r\n        .then((res) => {\r\n          setElderlyRes(res.data);\r\n          SetTotle(res?.total);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setLoadingEl(false);\r\n        });\r\n    } else {\r\n      // dispatch(fetchUsers({ ...queries }));\r\n      setLoadingUser(true);\r\n\r\n      try {\r\n        await makeRequest({ ...queries });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [query, activeTab, page]);\r\n  useEffect(() => {\r\n    if (response && !loading) {\r\n      setLoadingUser(false);\r\n    }\r\n  }, [response]);\r\n  useEffect(() => {\r\n    getlist();\r\n  }, [getlist]);\r\n\r\n  const isMounted = useRef(false);\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      if (selected && query.orderType !== selected) {\r\n        delete query.sort_by_created_at;\r\n        delete query.sort_by_name;\r\n        setQuey({\r\n          ...query,\r\n          ...(selected === \"Name\"\r\n            ? { sort_by_name: -1 }\r\n            : { sort_by_created_at: -1 }),\r\n        });\r\n\r\n        SetPage({ ...page, page: 1 });\r\n      }\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [selected]);\r\n\r\n  const handleSearchChange = useCallback(\r\n    debounce((value) => {\r\n      setQuey((prev) => ({ ...prev, search: value.trim() }));\r\n      SetPage((prev) => ({ ...prev, page: 1 }));\r\n    }, 1000),\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    return () => {\r\n      handleSearchChange.cancel();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      {/* <div className='h-[100px] flex items-center justify-between'>\r\n                <div className='flex items-center'>\r\n\r\n                    <div className='  text-[28px] font-semibold font-cblock ' >Super Admin</div>\r\n\r\n                </div>\r\n\r\n            </div> */}\r\n      <div className=\"pt-[20px] pb-[10px] flex\">\r\n        <TabMenus\r\n          menus={menus}\r\n          activeTab={activeTab}\r\n          setActiveTab={false}\r\n          handleChange={HandleTabText}\r\n        />\r\n        {/* {\r\n                    menus.map((e, key) => {\r\n                        return (\r\n                            <div\r\n                                key={key}\r\n                                onClick={() => HandleTabText(e.text)}\r\n                                className={` relative re cursor-pointer h-[40px] mr-[10px] pl-[20px] pr-[20px]  rounded-[20px]   flex items-center ${activeTab == e.text ? \"text-white bg-cblock \" : \"text-OnButtonNormal bg-white  \"} `}>\r\n                                {e.lable}\r\n                                {e.warring && <div className={`w-[8px] h-[8px] rounded-[100px] bg-onBackWarring  absolute  right-[5px]`} > </div>}\r\n                            </div>\r\n                        )\r\n                    })\r\n                } */}\r\n      </div>\r\n\r\n      <div className=\" bg-white rounded-2xl overflow-hidden\">\r\n        <div className=\" px-[22px] py-6 flex items-start flex-col lg:flex-row justify-between gap-2\">\r\n          <div className=\" flex items-center justify-between w-full\">\r\n            <h2 className=\" text-2xl font-bold text-text-primary\">\r\n              {activeTab}\r\n            </h2>\r\n          </div>\r\n          <div className=\" flex items-center justify-end gap-5 w-full\">\r\n            {/* =====Search sort and add admin button===== */}\r\n\r\n            <SearchInput\r\n              search={search}\r\n              setSearch={(value) => {\r\n                setSearch(value);\r\n                handleSearchChange(value);\r\n              }}\r\n              placeholder={`Search ${createText}`}\r\n            />\r\n            {![\"User\"]?.includes(createText) && (\r\n              <Sort\r\n                query={query}\r\n                setQuery={setQuey}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n                data={data}\r\n              />\r\n            )}\r\n            <CustomButton\r\n              onClick={() => handelOpenModal()}\r\n              className={\" hidden lg:flex \"}\r\n              style={{\r\n                display: [\"User\"]?.includes(createText) ? \"none\" : \"flex\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"mr-1\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 19 19\" fill=\"none\">\r\n                <path d=\"M10.0941 5.54102C10.0941 5.2131 9.82824 4.94727 9.50033 4.94727C9.17241 4.94727 8.90658 5.2131 8.90658 5.54102V8.9056H5.54199C5.21407 8.9056 4.94824 9.17143 4.94824 9.49935C4.94824 9.82727 5.21407 10.0931 5.54199 10.0931H8.90658V13.4577C8.90658 13.7856 9.17241 14.0514 9.50033 14.0514C9.82824 14.0514 10.0941 13.7856 10.0941 13.4577V10.0931H13.4587C13.7866 10.0931 14.0524 9.82727 14.0524 9.49935C14.0524 9.17143 13.7866 8.9056 13.4587 8.9056H10.0941V5.54102Z\" fill=\"white\"/>\r\n                </svg>`,\r\n                }}\r\n              ></div>\r\n              Add New {createText}\r\n            </CustomButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" grid grid-cols-1\">\r\n          <SidebarContext.Provider\r\n            value={{\r\n              getlist,\r\n              query,\r\n              total: activeTab == \"Users\" ? total : response?.total || [],\r\n              page,\r\n              SetPage,\r\n              role,\r\n            }}\r\n          >\r\n            <AdminSupportAgentTable\r\n              loading={activeTab == \"Users\" ? loadingEl : loadingUser}\r\n              tableData={activeTab == \"Users\" ? elderlyRes : response?.data}\r\n              getlist={getlist}\r\n              columns={columns}\r\n            />\r\n          </SidebarContext.Provider>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-[38px] \">\r\n        <div className=\"font-semibold\"></div>\r\n      </div>\r\n\r\n      <CreateAdminSupportAgent\r\n        changeParams={changeParams}\r\n        item={{}}\r\n        getlist={getlist}\r\n        role={role}\r\n        modalOPen={modalOPen}\r\n        setModalOpen={setModalOpen}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"names":["OwnershipStructureModal","isvisible","setVisible","row_data","rolesFormatter","useContext","SidebarContext","navigate","useNavigate","onClose","getItems","data","handleUserClick","jsxs","jsx","Tag","MdOutlineMail","MdOutlineLocalPhone","Modal","Steps","OwnershipStructure","useState","Button","PiGitMergeBold","SubscriptionDetailsModal","loading","setLoading","subscriptionDetails","setSubscriptionDetails","paymentMethods","setPaymentMethods","getSubscriptionData","useCallback","getSubscriptionDetails","response","error","getPaymentMethodList","getPaymentMethods","useEffect","RiSecurePaymentLine","Spin","Empty","_a","_c","_b","_d","pm","card","isDefault","LoginsSessionsModal","logins","setLogins","getLoginsSession","getLogins","res","err","handleLogout","id","logoutSessionUser","toast","IoLogOut","FaCodeCommit","Popconfirm","dot","index","item","color","LoginsSessions","MdDevices","StatusSwitch","row","status","setStatus","handleLoading","sethandleLoading","handleChange","value","updateUserDetails","ConfigProvider","Switch","StatusDropdown","Select","useGetColumnsByRoleAndActiveTab","activeTab","mainRole","setMainRole","ls","result","setResult","setUserDetil","useCountStore","handelClick","name","roleBasedColumns","roleMapping","handleClick","n","allColumns","role","record","rowIndex","event","getRole","AdminFiled","hierarchyTitles","filteredHierarchy","level","FireTwoTone","isActive","SyncOutlined","StopOutlined","Tooltip","AdminSupportAgentTableAction","tableColumns","colKey","columnConfig","_e","_f","_g","_h","_i","_j","_k","_l","useApi","apiFunction","cancelTokenSource","useRef","setresponse","setError","makeRequest","params","axios","AdminDashboard","getUser","useDispatch","location","useLocation","setActiveTab","isModalOpen","setIsModalOpen","changeParams","setChangeParams","setRole","createText","setCreateText","elderlyRes","setElderlyRes","loadingEl","setLoadingEl","loadingUser","setLoadingUser","menus","user","SetUser","search","setSearch","modalOPen","setModalOpen","selected","setSelected","page","SetPage","query","setQuey","list","SetList","total","SetTotle","columns","SetColumns","roleMappings","roleMappings2","getCulumns","tab","menu","handelOpenModal","HandleTabText","e","getlist","queries","formattedRoleName","getElderlies","isMounted","handleSearchChange","debounce","prev","TabMenus","SearchInput","Sort","CustomButton","AdminSupportAgentTable","CreateAdminSupportAgent"],"mappings":"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"}