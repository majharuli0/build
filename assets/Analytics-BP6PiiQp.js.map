{"version":3,"file":"Analytics-BP6PiiQp.js","sources":["../../src/MonitoringService/Components/ui/area.tsx","../../src/MonitoringService/Components/ui/bar.tsx","../../src/MonitoringService/Components/ui/pie3.tsx","../../src/MonitoringService/Components/ui/scatter.tsx","../../src/MonitoringService/Utiles/agentMetrics.js","../../src/MonitoringService/Pages/Analytics/Analytics.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function AreaLineChartComponent({ width = \"100%\", height = 400 }) {\r\n  // Generate 10 days of fake data for Fall Alert and Device Offline\r\n  const generateFakeData = () => {\r\n    const dates = [];\r\n    const fallAlertData = [];\r\n    const deviceOfflineData = [];\r\n\r\n    const today = new Date();\r\n\r\n    for (let i = 9; i >= 0; i--) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n      dates.push(\r\n        date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" })\r\n      );\r\n\r\n      // Generate realistic data for Fall Alert and Device Offline\r\n      fallAlertData.push(Math.floor(Math.random() * 20) + 5); // 5-25 range\r\n      deviceOfflineData.push(Math.floor(Math.random() * 15) + 3); // 3-18 range\r\n    }\r\n\r\n    return { dates, fallAlertData, deviceOfflineData };\r\n  };\r\n\r\n  const { dates, fallAlertData, deviceOfflineData } = generateFakeData();\r\n\r\n  // Calculate totals for legend\r\n  const fallAlertTotal = fallAlertData.reduce((sum, value) => sum + value, 0);\r\n  const deviceOfflineTotal = deviceOfflineData.reduce(\r\n    (sum, value) => sum + value,\r\n    0\r\n  );\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      axisPointer: {\r\n        type: \"line\",\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n          width: 1,\r\n        },\r\n      },\r\n      formatter: (params) => {\r\n        const date = params[0].axisValue;\r\n        const fallAlert = params.find((p) => p.seriesName === \"Fall Alert\");\r\n        const deviceOffline = params.find(\r\n          (p) => p.seriesName === \"Device Offline\"\r\n        );\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[160px] z-999\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${date}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${\r\n                    fallAlert?.color || \"#ef4444\"\r\n                  }\"></div>\r\n                  <span class=\"text-text/80 text-sm\">${\r\n                    fallAlert?.seriesName || \"Fall Alert\"\r\n                  }</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  fallAlert?.value || 0\r\n                }</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center gap-2\">\r\n                  <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${\r\n                    deviceOffline?.color || \"#f59e0b\"\r\n                  }\"></div>\r\n                  <span class=\"text-text/80 text-sm\">${\r\n                    deviceOffline?.seriesName || \"Device Offline\"\r\n                  }</span>\r\n                </div>\r\n                <span class=\"font-mono font-medium text-text\">${\r\n                  deviceOffline?.value || 0\r\n                }</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 10,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n        fontWeight: \"normal\",\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Fall Alert\") {\r\n          return `Fall Alert: ${fallAlertTotal.toLocaleString()}`;\r\n        } else if (name === \"Device Offline\") {\r\n          return `Device Offline: ${deviceOfflineTotal.toLocaleString()}`;\r\n        }\r\n        return name;\r\n      },\r\n      rich: {\r\n        bold: {\r\n          fontWeight: \"bold\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontFamily: \"poppins\",\r\n          fontSize: 12,\r\n        },\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"50px\", // More space for legend\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: dates,\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.2)\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Fall Alert\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false, // Remove dots from line\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#ef4444\", // Red color for Fall Alert\r\n        },\r\n        itemStyle: {\r\n          color: \"#ef4444\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(239, 68, 68, 0.3)\", // Red with opacity\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(239, 68, 68, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: fallAlertData,\r\n      },\r\n      {\r\n        name: \"Device Offline\",\r\n        type: \"line\",\r\n        smooth: true,\r\n        showSymbol: false, // Remove dots from line\r\n        lineStyle: {\r\n          width: 3,\r\n          color: \"#f59e0b\", // Amber color for Device Offline\r\n        },\r\n        itemStyle: {\r\n          color: \"#f59e0b\",\r\n        },\r\n        areaStyle: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: \"rgba(245, 158, 11, 0.3)\", // Amber with opacity\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: \"rgba(245, 158, 11, 0.05)\",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        data: deviceOfflineData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function CleanBarGraph({ data = [], width = \"100%\", height = 350 }) {\r\n  const generateAgentData = () => {\r\n    const scores = data.map((agent) => agent.score);\r\n    const maxScore = Math.max(...scores);\r\n    const minScore = Math.min(...scores);\r\n\r\n    return data.map((agent) => ({\r\n      ...agent,\r\n      isHighest: agent.score === maxScore,\r\n      isLowest: agent.score === minScore,\r\n      itemStyle: {\r\n        color:\r\n          agent.score === maxScore\r\n            ? \"#10b981\"\r\n            : agent.score === minScore\r\n            ? \"#ef4444\"\r\n            : \"rgb(var(--ms-primary-color))\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const agentData = generateAgentData();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const { name, value, color } = params;\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${color}\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${name}</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm pr-1\">Performance Score: </span>\r\n                <span class=\"font-mono font-bold text-text text-sm\">${value}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      show: false,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n      min: 0,\r\n      max: 100,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"dashed\",\r\n        },\r\n      },\r\n      axisLabel: {\r\n        color: \"rgb(var(--ms-text-color)/0.7)\",\r\n        fontSize: 12,\r\n        formatter: \"{value}%\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Performance Score\",\r\n        type: \"bar\",\r\n        barWidth: \"60%\",\r\n        itemStyle: {\r\n          borderRadius: [7, 7, 0, 0],\r\n          borderWidth: 0,\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          formatter: \"{c}%\",\r\n        },\r\n        emphasis: {\r\n          disabled: true,\r\n        },\r\n        data: agentData.map((agent) => ({\r\n          value: agent.score,\r\n          name: agent.name,\r\n          itemStyle: {\r\n            ...agent.itemStyle,\r\n            borderWidth: 0,\r\n          },\r\n          emphasis:\r\n            agent.isHighest || agent.isLowest\r\n              ? undefined\r\n              : {\r\n                  itemStyle: {\r\n                    opacity: 0.8,\r\n                  },\r\n                },\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function PieChartComponent({\r\n  data,\r\n  centerLabel,\r\n  width = \"100%\",\r\n  height = 400,\r\n}) {\r\n  const total = data.reduce((sum, item) => sum + item.value, 0);\r\n\r\n  // Find the maximum value to emphasize the largest segment\r\n  const maxValue = Math.max(...data.map((item) => item.value));\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const percent = ((params.value / total) * 100).toFixed(1);\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[140px] z-999\">\r\n            <div class=\"flex items-center gap-2 mb-2\">\r\n              <div class=\"w-3 h-3 rounded-full\" style=\"background-color: ${\r\n                params.color\r\n              }\"></div>\r\n              <span class=\"font-semibold text-text text-sm\">${\r\n                params.name\r\n              }</span>\r\n            </div>\r\n            <div class=\"space-y-1\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Count</span>\r\n                <span class=\"font-mono font-medium text-text\">${params.value.toLocaleString()}</span>\r\n              </div>\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-text/80 text-sm\">Percent</span>\r\n                <span class=\"font-mono font-medium text-text\">${percent}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"pie\",\r\n        radius: [\"37%\", \"77%\"],\r\n        roseType: \"area\",\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 10,\r\n          focus: \"self\",\r\n        },\r\n        itemStyle: {\r\n          borderWidth: 0,\r\n          borderColor: \"#fff\",\r\n        },\r\n        label: {\r\n          show: true,\r\n          fontSize: 14,\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          formatter: ({ name, value }) => {\r\n            return `${name}\\n{value|${value.toLocaleString()}}`;\r\n          },\r\n          rich: {\r\n            value: {\r\n              fontSize: 24,\r\n              fontWeight: 600,\r\n              color: \"rgb(var(--ms-text-color)/0.7)\",\r\n              padding: [2, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: true,\r\n          length: 20,\r\n          length2: 10,\r\n          smooth: true,\r\n          lineStyle: {\r\n            width: 1,\r\n            type: \"solid\",\r\n          },\r\n        },\r\n        data: data.map((item) => ({\r\n          ...item,\r\n          // Make the largest segment bigger with emphasis\r\n          ...(item.value === maxValue && {\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 15,\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n              },\r\n            },\r\n            itemStyle: {\r\n              ...item.itemStyle,\r\n              shadowBlur: 8,\r\n              shadowOffsetX: 0,\r\n              shadowOffsetY: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.3)\",\r\n            },\r\n          }),\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\" style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n\r\n      {/* Center Label */}\r\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\r\n        <div className=\"text-[22px] font-bold text-text\">\r\n          {total.toLocaleString()}\r\n        </div>\r\n        <div className=\"text-xs text-muted-foreground mt-0\">\r\n          {centerLabel || \"Total\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\n\r\nexport function Scatter({ data = [], width = \"100%\", height = 400 }) {\r\n  // Generate sample data if no data provided\r\n  const generateSampleData = () => {\r\n    const days = [\r\n      \"2024-01-01\",\r\n      \"2024-01-02\",\r\n      \"2024-01-03\",\r\n      \"2024-01-04\",\r\n      \"2024-01-05\",\r\n    ];\r\n    const alertTypes = [\"Device Offline Alert\", \"Fall Alert\"];\r\n    const sampleData = [];\r\n\r\n    days.forEach((day) => {\r\n      // Generate 8-20 random alerts per day\r\n      const alertCount = Math.floor(Math.random() * 12) + 8;\r\n\r\n      for (let i = 0; i < alertCount; i++) {\r\n        const hour = Math.floor(Math.random() * 24); // 0-23 hours\r\n        const minute = Math.floor(Math.random() * 60); // 0-59 minutes\r\n        const responseTime = Math.floor(Math.random() * 25) + 5; // 5-30 minutes\r\n        const slaTime = 15; // Fixed SLA time of 15 minutes\r\n        const compliance = responseTime <= slaTime;\r\n        const alertType =\r\n          alertTypes[Math.floor(Math.random() * alertTypes.length)];\r\n\r\n        sampleData.push({\r\n          day: day,\r\n          time: `${hour.toString().padStart(2, \"0\")}:${minute\r\n            .toString()\r\n            .padStart(2, \"0\")}`,\r\n          hour: hour + minute / 60, // Decimal hour for positioning\r\n          responseTime: responseTime,\r\n          slaTime: slaTime,\r\n          alertId: `A${day.replace(/-/g, \"\")}${i + 1}`,\r\n          compliance: compliance,\r\n          alertType: alertType,\r\n        });\r\n      }\r\n    });\r\n\r\n    return sampleData;\r\n  };\r\n\r\n  const chartData = data.length > 0 ? data : generateSampleData();\r\n\r\n  // Calculate totals for legend\r\n  const totalAlerts = chartData.length;\r\n  const compliantAlerts = chartData.filter((item) => item.compliance).length;\r\n  const nonCompliantAlerts = chartData.filter(\r\n    (item) => !item.compliance\r\n  ).length;\r\n\r\n  // Process data for the chart - only two series: compliant and non-compliant\r\n  const compliantData = chartData.filter((item) => item.compliance);\r\n  const nonCompliantData = chartData.filter((item) => !item.compliance);\r\n\r\n  // Get unique days for yAxis (sorted)\r\n  const days = [...new Set(chartData.map((alert) => alert.day))].sort();\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      backgroundColor: \"transparent\",\r\n      borderWidth: 0,\r\n      renderMode: \"html\",\r\n      appendToBody: true,\r\n      className: \"!shadow-none\",\r\n      formatter: (params) => {\r\n        const {\r\n          name,\r\n          compliance,\r\n          responseTime,\r\n          slaTime,\r\n          time,\r\n          day,\r\n          alertType,\r\n        } = params.data;\r\n        const status = compliance ? \"Compliance\" : \"Not Compliance\";\r\n        const statusColor = compliance ? \"#10b981\" : \"#ef4444\";\r\n\r\n        return `\r\n          <div class=\"bg-background border border-border rounded-lg shadow-xl p-3 min-w-[200px] z-999\">\r\n            <div class=\"text-sm font-semibold text-text mb-3 border-b border-border pb-2\">\r\n              ${alertType}\r\n            </div>\r\n            <div class=\"space-y-2\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Date</span>\r\n                <span class=\"font-mono font-medium text-text\">${day}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${time}</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Response Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${responseTime}m</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">SLA Time</span>\r\n                <span class=\"font-mono font-medium text-text\">${slaTime}m</span>\r\n              </div>\r\n              <div class=\"flex items-center justify-between\">\r\n                <span class=\"text-text/80 text-sm\">Status</span>\r\n                <span class=\"font-mono font-medium\" style=\"color: ${statusColor}\">${status}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      bottom: 0,\r\n      left: \"center\",\r\n      itemWidth: 12,\r\n      itemHeight: 12,\r\n      itemGap: 20,\r\n      textStyle: {\r\n        color: \"rgb(var(--ms-text-color))\",\r\n        fontSize: 12,\r\n      },\r\n      formatter: function (name) {\r\n        if (name === \"Total Alerts\") {\r\n          return `Total Alerts: ${totalAlerts}`;\r\n        } else if (name === \"Compliance\") {\r\n          return `Compliance: ${compliantAlerts}`;\r\n        } else if (name === \"Not Compliance\") {\r\n          return `Not Compliance: ${nonCompliantAlerts}`;\r\n        }\r\n        return name;\r\n      },\r\n      rich: {\r\n        bold: {\r\n          fontWeight: \"bold\",\r\n          color: \"rgb(var(--ms-text-color))\",\r\n          fontFamily: \"monospace\",\r\n          fontSize: 12,\r\n        },\r\n      },\r\n      data: [\r\n        {\r\n          name: \"Total Alerts\",\r\n          itemStyle: { color: \"rgb(var(--ms-primary-color))\" },\r\n        },\r\n        {\r\n          name: \"Compliance\",\r\n          itemStyle: { color: \"#10b981\" },\r\n        },\r\n        {\r\n          name: \"Not Compliance\",\r\n          itemStyle: { color: \"#ef4444\" },\r\n        },\r\n      ],\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"15%\",\r\n      top: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    xAxis: {\r\n      type: \"value\",\r\n      name: \"\",\r\n      nameLocation: \"middle\",\r\n      nameGap: 30,\r\n      min: 0,\r\n      max: 24,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        lineStyle: {\r\n          color: \"rgb(var(--ms-text-color)/0.1)\",\r\n          type: \"solid\",\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      name: \"\",\r\n      nameLocation: \"middle\",\r\n      nameGap: 40,\r\n      data: days,\r\n      axisLine: {\r\n        show: false,\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLabel: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        show: false,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Compliance\",\r\n        type: \"scatter\",\r\n        symbolSize: 8,\r\n        data: compliantData.map((alert) => ({\r\n          name: alert.alertId,\r\n          value: [alert.hour, alert.day],\r\n          responseTime: alert.responseTime,\r\n          slaTime: alert.slaTime,\r\n          compliance: alert.compliance,\r\n          day: alert.day,\r\n          time: alert.time,\r\n          alertType: alert.alertType,\r\n          itemStyle: {\r\n            color: \"#10b981\",\r\n          },\r\n        })),\r\n        itemStyle: {\r\n          color: \"#10b981\",\r\n        },\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 2,\r\n        },\r\n      },\r\n      {\r\n        name: \"Not Compliance\",\r\n        type: \"scatter\",\r\n        symbolSize: 8,\r\n        data: nonCompliantData.map((alert) => ({\r\n          name: alert.alertId,\r\n          value: [alert.hour, alert.day],\r\n          responseTime: alert.responseTime,\r\n          slaTime: alert.slaTime,\r\n          compliance: alert.compliance,\r\n          day: alert.day,\r\n          time: alert.time,\r\n          alertType: alert.alertType,\r\n          itemStyle: {\r\n            color: \"#ef4444\",\r\n          },\r\n        })),\r\n        itemStyle: {\r\n          color: \"#ef4444\",\r\n        },\r\n        emphasis: {\r\n          scale: true,\r\n          scaleSize: 2,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <ReactECharts\r\n        option={option}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        opts={{ renderer: \"svg\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const calculateAgentMetrics = (agents) => {\r\n  if (!agents || !Array.isArray(agents) || agents.length === 0) {\r\n    return {\r\n      totalAgents: 0,\r\n      averagePerformance: 0,\r\n      highestPerformance: 0,\r\n      lowestPerformance: 0,\r\n      highestAgent: null,\r\n      lowestAgent: null,\r\n    };\r\n  }\r\n\r\n  const totalAgents = agents.length;\r\n  const totalScore = agents.reduce((sum, agent) => sum + agent.score, 0);\r\n  const averagePerformance = Math.round(totalScore / totalAgents);\r\n\r\n  const highestAgent = agents.reduce((highest, agent) =>\r\n    agent.score > highest.score ? agent : highest\r\n  );\r\n\r\n  const lowestAgent = agents.reduce((lowest, agent) =>\r\n    agent.score < lowest.score ? agent : lowest\r\n  );\r\n\r\n  return {\r\n    totalAgents,\r\n    averagePerformance,\r\n    highestPerformance: highestAgent.score,\r\n    lowestPerformance: lowestAgent.score,\r\n    highestAgent,\r\n    lowestAgent,\r\n  };\r\n};\r\n","import BreadcrumbUI from \"@/MonitoringService/Components/common/breadcrumb\";\r\nimport CardUI from \"@/MonitoringService/Components/common/card\";\r\nimport { AreaLineChartComponent } from \"@/MonitoringService/Components/ui/area\";\r\nimport { CleanBarGraph } from \"@/MonitoringService/Components/ui/bar\";\r\nimport { Button } from \"@/MonitoringService/Components/ui/button\";\r\nimport { ButtonGroup } from \"@/MonitoringService/Components/ui/button-group\";\r\nimport { Calendar } from \"@/MonitoringService/Components/ui/calendar\";\r\nimport { PieChartComponent } from \"@/MonitoringService/Components/ui/pie3\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/MonitoringService/Components/ui/popover\";\r\nimport { Scatter } from \"@/MonitoringService/Components/ui/scatter\";\r\nimport useMediaQuery from \"@/MonitoringService/hooks/useMediaQuery\";\r\nimport { calculateAgentMetrics } from \"@/MonitoringService/Utiles/agentMetrics\";\r\nimport { Cable, CalendarIcon } from \"lucide-react\";\r\nimport React from \"react\";\r\nimport { FaRegClock } from \"react-icons/fa\";\r\nimport { FaRegChessQueen } from \"react-icons/fa6\";\r\nimport { LuCircleFadingArrowUp } from \"react-icons/lu\";\r\nimport { PiWarningCircleBold } from \"react-icons/pi\";\r\n\r\nexport default function Analytics() {\r\n  const [range, setRange] = React.useState({\r\n    from: null,\r\n    to: null,\r\n  });\r\n  const chartData = [\r\n    { value: 84, name: \"Fall Alerts\", itemStyle: { color: \"#ef4444\" } },\r\n    { value: 42, name: \"Device Offline\", itemStyle: { color: \"#f59e0b\" } },\r\n  ];\r\n  const agents = [\r\n    { name: \"Agent 1\", score: 92 },\r\n    { name: \"Agent 2\", score: 78 },\r\n    { name: \"Agent 3\", score: 85 },\r\n    { name: \"Agent 4\", score: 96 },\r\n    { name: \"Agent 5\", score: 72 },\r\n    { name: \"Agent 6\", score: 88 },\r\n    { name: \"Agent 7\", score: 25 },\r\n    { name: \"Agent 7\", score: 81 },\r\n    { name: \"Agent 7\", score: 55 },\r\n    { name: \"Agent 7\", score: 47 },\r\n    { name: \"Agent 7\", score: 98 },\r\n    { name: \"Agent 8\", score: 90 },\r\n  ];\r\n\r\n  const isSmallScreen = useMediaQuery(\"(max-width: 1366px)\");\r\n  const metrics = calculateAgentMetrics(agents);\r\n  return (\r\n    <div className=\"mb-6\">\r\n      {\" \"}\r\n      <div\r\n        id=\"customer_heading\"\r\n        className=\"flex justify-between sm:flex-row flex-col gap-4 items-center mb-6\"\r\n      >\r\n        <Navigation />\r\n        <div className=\"flex gap-2  items-center\">\r\n          <Popover>\r\n            <PopoverTrigger asChild>\r\n              <Button variant=\"tertiary\">\r\n                <CalendarIcon />\r\n                {range?.from && range?.to\r\n                  ? `${range.from.toLocaleDateString()} - ${range.to.toLocaleDateString()}`\r\n                  : \"All Time\"}\r\n              </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"overflow-hidden p-0\" align=\"end\">\r\n              <Calendar\r\n                className=\"w-full border-border\"\r\n                mode=\"range\"\r\n                selected={range}\r\n                onSelect={setRange}\r\n                captionLayout=\"dropdown\"\r\n                fixedWeeks\r\n                showOutsideDays\r\n              />\r\n            </PopoverContent>\r\n          </Popover>\r\n          <Button>Export</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-4\">\r\n        <div className=\" items-center justify-between grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4 lg:auto-rows-fr\">\r\n          <TailsCard\r\n            label=\"Total Alerts\"\r\n            value=\"136\"\r\n            icon={<PiWarningCircleBold size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Avg. Response Time\"\r\n            value=\"2min 15sec\"\r\n            icon={<FaRegClock size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"SLA Compliance\"\r\n            value=\"98.5%\"\r\n            icon={<FaRegChessQueen size={20} color=\"white\" />}\r\n          />\r\n          <TailsCard\r\n            label=\"Device Uptime\"\r\n            value=\"99.2%\"\r\n            icon={<LuCircleFadingArrowUp size={20} color=\"white\" />}\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2 lg:auto-rows-fr\">\r\n          <div id=\"Total Alert Overview Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Total Alert Overview</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4 !h-full flex items-center justify-center\">\r\n                <PieChartComponent\r\n                  data={chartData}\r\n                  centerLabel=\" \"\r\n                  width=\"100%\"\r\n                  height={isSmallScreen ? 340 : 400}\r\n                />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Alert Trends Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Total Alert Overview</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <AreaLineChartComponent />\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"Agent Performance Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">Agent Performance</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <div className=\"p-4\">\r\n                <CleanBarGraph data={agents} height={340} />\r\n                <div className=\"flex items-center gap-4 justify-center mt-4\">\r\n                  <SummaryView\r\n                    title=\"Total Agent\"\r\n                    value={metrics.totalAgents}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Avg. Performance\"\r\n                    value={metrics.averagePerformance}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Highest Performance\"\r\n                    value={metrics.highestPerformance}\r\n                  />\r\n                  <SummaryView\r\n                    title=\"Lowest Performance\"\r\n                    value={metrics.lowestPerformance}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardUI>\r\n          </div>\r\n          <div id=\"SLA Compliance Report Graph\">\r\n            <CardUI\r\n              title={<h1 className=\"text-lg\">SLA Compliance Report</h1>}\r\n              headerPadding=\"p-4 !text-lg border-none\"\r\n            >\r\n              <Scatter width=\"100%\" height={400} />\r\n            </CardUI>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-start gap-2 w-full\">\r\n        <h1 className=\"text-text sm:text-xl text-lg\">Reporting & Analytics</h1>\r\n        <div className=\"opacity-95\">\r\n          <BreadcrumbUI />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TailsCard = ({ label = \"\", value = \"\", icon }) => {\r\n  return (\r\n    <div className=\"bg-card p-4 flex items-center justify-between gap-3 rounded-md w-full\">\r\n      <div>\r\n        <span className=\"text-sm\">{label}</span>\r\n        <h1 className=\"text-lg font-semibold\">{value}</h1>\r\n      </div>\r\n      <div className=\"p-2 bg-primary w-fit rounded-md text-lg\">{icon}</div>\r\n    </div>\r\n  );\r\n};\r\nconst SummaryView = ({ title, value }) => {\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center gap-2 \">\r\n        <div className=\"p-2 px-3 bg-primary rounded-lg text-white font-medium text-sm\">\r\n          {\" \"}\r\n          {value}\r\n        </div>\r\n        <div className=\"rounded-lg text-sm text-wrap\"> {title}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["AreaLineChartComponent","width","height","generateFakeData","dates","fallAlertData","deviceOfflineData","today","i","date","fallAlertTotal","sum","value","deviceOfflineTotal","option","params","fallAlert","deviceOffline","name","jsx","ReactECharts","CleanBarGraph","data","agentData","scores","agent","maxScore","minScore","color","PieChartComponent","centerLabel","total","item","maxValue","percent","jsxs","Scatter","generateSampleData","days","alertTypes","sampleData","day","alertCount","hour","minute","responseTime","slaTime","compliance","alertType","chartData","totalAlerts","compliantAlerts","nonCompliantAlerts","compliantData","nonCompliantData","alert","time","calculateAgentMetrics","agents","totalAgents","totalScore","averagePerformance","highestAgent","highest","lowestAgent","lowest","Analytics","range","setRange","React","isSmallScreen","useMediaQuery","metrics","Navigation","Popover","PopoverTrigger","Button","CalendarIcon","PopoverContent","Calendar","TailsCard","PiWarningCircleBold","FaRegClock","FaRegChessQueen","LuCircleFadingArrowUp","CardUI","SummaryView","Fragment","BreadcrumbUI","label","icon","title"],"mappings":"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"}