{"version":3,"file":"WeeklyMonthlyPicker-CE1zOsQm.js","sources":["../../src/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DatePicker } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\r\n\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(weekOfYear);\r\n\r\nconst WeeklyMonthlyPicker = ({ placeholder, style, handleChnage, value }) => {\r\n  const [format, setFormat] = useState(\"\"); // \"week\" or \"month\"\r\n  const [activePicker, setActivePicker] = useState(\"weekly\"); // for UI highlighting\r\n  const [internalValue, setInternalValue] = useState(null); // DatePicker controlled value\r\n\r\n  useEffect(() => {\r\n    if (!value) {\r\n      // reset internal state if parent clears the value\r\n      setInternalValue(null);\r\n      setFormat(\"\");\r\n      setActivePicker(\"weekly\");\r\n    } else if (value.start && value.end) {\r\n      setInternalValue(dayjs(value.start));\r\n      // optionally determine format from value\r\n      if (value.month) {\r\n        setFormat(\"month\");\r\n        setActivePicker(\"monthly\");\r\n      } else {\r\n        setFormat(\"week\");\r\n        setActivePicker(\"weekly\");\r\n      }\r\n    }\r\n  }, [value]);\r\n\r\n  const formatMonth = (val) => {\r\n    const start = dayjs(val).startOf(\"month\").format(\"YYYY-MM-DD\");\r\n    const end = dayjs(val).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n    return { month: dayjs(val).format(\"MMMM-YY\"), start, end };\r\n  };\r\n\r\n  const formatWeek = (val) => {\r\n    const start = dayjs(val).startOf(\"week\").format(\"YYYY-MM-DD\");\r\n    const end = dayjs(val).endOf(\"week\").format(\"YYYY-MM-DD\");\r\n    return { week: dayjs(val).week(), start, end };\r\n  };\r\n\r\n  const displayFormat = (val) => {\r\n    if (!val) return \"\";\r\n    return format === \"month\"\r\n      ? formatMonth(val).month\r\n      : `Week ${formatWeek(val).week}`;\r\n  };\r\n\r\n  return (\r\n    <DatePicker\r\n      style={style}\r\n      placeholder={placeholder}\r\n      size=\"large\"\r\n      value={internalValue}\r\n      format={displayFormat}\r\n      picker={format === \"month\" ? \"month\" : \"week\"}\r\n      onChange={(val) => {\r\n        if (val) {\r\n          const formatted =\r\n            format === \"month\" ? formatMonth(val) : formatWeek(val);\r\n          handleChnage(formatted);\r\n        } else {\r\n          handleChnage(null); // clear parent value\r\n        }\r\n        setInternalValue(val);\r\n      }}\r\n      renderExtraFooter={() => (\r\n        <div className=\"flex items-center gap-2 w-full justify-center\">\r\n          <div\r\n            onClick={() => {\r\n              setFormat(\"week\");\r\n              setActivePicker(\"weekly\");\r\n              setInternalValue(null);\r\n              handleChnage(null); // clear parent\r\n            }}\r\n            className={`cursor-pointer font-medium text-text-primary ${\r\n              activePicker === \"weekly\"\r\n                ? \"bg-text-primary text-white\"\r\n                : \"bg-white\"\r\n            } h-8 px-3 flex items-center justify-center rounded`}\r\n          >\r\n            Weekly\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              setFormat(\"month\");\r\n              setActivePicker(\"monthly\");\r\n              setInternalValue(null);\r\n              handleChnage(null); // clear parent\r\n            }}\r\n            className={`cursor-pointer font-medium text-text-primary ${\r\n              activePicker === \"monthly\"\r\n                ? \"bg-text-primary text-white\"\r\n                : \"bg-white\"\r\n            } h-8 px-3 flex items-center justify-center rounded`}\r\n          >\r\n            Monthly\r\n          </div>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeeklyMonthlyPicker;\r\n"],"names":["dayjs","customParseFormat","weekOfYear","WeeklyMonthlyPicker","placeholder","style","handleChnage","value","format","setFormat","useState","activePicker","setActivePicker","internalValue","setInternalValue","useEffect","formatMonth","val","start","end","formatWeek","displayFormat","jsx","DatePicker","formatted","jsxs"],"mappings":"sZAMAA,EAAM,OAAOC,CAAiB,EAC9BD,EAAM,OAAOE,CAAU,EAEvB,MAAMC,EAAsB,CAAC,CAAE,YAAAC,EAAa,MAAAC,EAAO,aAAAC,EAAc,MAAAC,KAAY,CAC3E,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAE,EACjC,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAS,QAAQ,EACnD,CAACG,EAAeC,CAAgB,EAAIJ,EAAAA,SAAS,IAAI,EAEvDK,EAAAA,UAAU,IAAM,CACTR,EAKMA,EAAM,OAASA,EAAM,MAC9BO,EAAiBd,EAAMO,EAAM,KAAK,CAAC,EAE/BA,EAAM,OACRE,EAAU,OAAO,EACjBG,EAAgB,SAAS,IAEzBH,EAAU,MAAM,EAChBG,EAAgB,QAAQ,KAX1BE,EAAiB,IAAI,EACrBL,EAAU,EAAE,EACZG,EAAgB,QAAQ,EAY5B,EAAG,CAACL,CAAK,CAAC,EAEV,MAAMS,EAAeC,GAAQ,CAC3B,MAAMC,EAAQlB,EAAMiB,CAAG,EAAE,QAAQ,OAAO,EAAE,OAAO,YAAY,EACvDE,EAAMnB,EAAMiB,CAAG,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EACzD,MAAO,CAAE,MAAOjB,EAAMiB,CAAG,EAAE,OAAO,SAAS,EAAG,MAAAC,EAAO,IAAAC,CAAA,CACvD,EAEMC,EAAcH,GAAQ,CAC1B,MAAMC,EAAQlB,EAAMiB,CAAG,EAAE,QAAQ,MAAM,EAAE,OAAO,YAAY,EACtDE,EAAMnB,EAAMiB,CAAG,EAAE,MAAM,MAAM,EAAE,OAAO,YAAY,EACxD,MAAO,CAAE,KAAMjB,EAAMiB,CAAG,EAAE,KAAA,EAAQ,MAAAC,EAAO,IAAAC,CAAA,CAC3C,EAEME,EAAiBJ,GAChBA,EACET,IAAW,QACdQ,EAAYC,CAAG,EAAE,MACjB,QAAQG,EAAWH,CAAG,EAAE,IAAI,GAHf,GAMnB,OACEK,EAAAA,IAACC,EAAA,CACC,MAAAlB,EACA,YAAAD,EACA,KAAK,QACL,MAAOS,EACP,OAAQQ,EACR,OAAQb,IAAW,QAAU,QAAU,OACvC,SAAWS,GAAQ,CACjB,GAAIA,EAAK,CACP,MAAMO,EACJhB,IAAW,QAAUQ,EAAYC,CAAG,EAAIG,EAAWH,CAAG,EACxDX,EAAakB,CAAS,CACxB,MACElB,EAAa,IAAI,EAEnBQ,EAAiBG,CAAG,CACtB,EACA,kBAAmB,IACjBQ,EAAAA,KAAC,MAAA,CAAI,UAAU,gDACb,SAAA,CAAAH,EAAAA,IAAC,MAAA,CACC,QAAS,IAAM,CACbb,EAAU,MAAM,EAChBG,EAAgB,QAAQ,EACxBE,EAAiB,IAAI,EACrBR,EAAa,IAAI,CACnB,EACA,UAAW,gDACTK,IAAiB,SACb,6BACA,UACN,qDACD,SAAA,QAAA,CAAA,EAGDW,EAAAA,IAAC,MAAA,CACC,QAAS,IAAM,CACbb,EAAU,OAAO,EACjBG,EAAgB,SAAS,EACzBE,EAAiB,IAAI,EACrBR,EAAa,IAAI,CACnB,EACA,UAAW,gDACTK,IAAiB,UACb,6BACA,UACN,qDACD,SAAA,SAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CAIR"}