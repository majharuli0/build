{"version":3,"file":"index-BZXkjU_0.js","sources":["../../src/Pages/AdminUser/utiles.jsx","../../src/hook/useApi.js","../../src/Pages/AdminUser/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\r\nimport { Select, Space, Table, Tag, Switch, Modal, ConfigProvider } from \"antd\";\r\nimport ls from \"store2\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { updateUserDetails } from \"@/api/Users\";\r\n\r\nfunction StatusSwitch({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorText: \"#707EAE\",\r\n          colorPrimary: \"#06A44F\",\r\n          colorLinkActive: \"#8086AC\",\r\n          colorLinkHover: \"#8086AC\",\r\n          colorLink: \"#8086AC\",\r\n        },\r\n      }}\r\n    >\r\n      <Switch\r\n        loading={handleLoading}\r\n        onChange={handleChange}\r\n        handleBg=\"#00000\"\r\n        className=\"bg-slate-200\"\r\n        value={status}\r\n        // defaultChecked\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n//Dropdown For Office Status Change\r\nfunction StatusDropdown({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      {/* Red or green circle based on status */}\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status == true ? \"bg-[#1EB564]\" : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      {/* Status select dropdown */}\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: false, label: <span>Disable</span> },\r\n            { value: true, label: <span>Active</span> },\r\n          ]}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const useGetColumnsByRoleAndActiveTab = (activeTab) => {\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [result, setResult] = useState(undefined);\r\n  const { setUserDetil } = useCountStore();\r\n  const navigate = useNavigate();\r\n  const handelClick = (row, name) => {\r\n    setUserDetil(row);\r\n\r\n    navigate(\r\n      `/super-admin/user/${\r\n        activeTab == \"Elderly\" ? row.end_user_id + \"-\" + row._id : row._id\r\n      }`,\r\n      {\r\n        state: { role: row.role },\r\n      }\r\n    );\r\n  };\r\n  const roleBasedColumns = {\r\n    super_admin: {\r\n      distributor: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"office_count\",\r\n        \"seles_agent_count\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        \"avg_sales\",\r\n        \"action\",\r\n      ],\r\n      office: [\r\n        \"name\",\r\n        \"distributor_name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"seles_agent_count\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        \"action\",\r\n      ],\r\n      sales_agent: [\r\n        \"name\",\r\n        \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"agent_id\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        \"avg_sales\",\r\n        \"action\",\r\n      ],\r\n      nursing_home: [\r\n        \"name\",\r\n        \"distributor_name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"device_count\",\r\n        \"alert_count\",\r\n        \"assigned_nurse_count\",\r\n        \"action\",\r\n      ],\r\n      monitoring_station: [\r\n        \"name\",\r\n        \"distributor_name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"device_count\",\r\n        \"action\",\r\n      ],\r\n      support_agent: [\r\n        \"name\",\r\n        \"distributor_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"monitoring_company_count\",\r\n        \"alert_count\",\r\n        \"action\",\r\n      ],\r\n      installer: [\r\n        \"name\",\r\n        \"distributor_name\",\r\n        \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"elderly_count\",\r\n        \"device_count\",\r\n        \"action\",\r\n      ],\r\n      super_admin: [\"name\", \"contact_number\", \"action\"],\r\n      end_user: [\r\n        \"name\",\r\n        \"distributor_name\",\r\n        \"office_name\",\r\n        \"sales_agent_name\",\r\n        // \"installer\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"subscription_status\",\r\n        \"elderly_count\",\r\n        \"device_count\",\r\n        \"alert_count\",\r\n        \"action\",\r\n      ],\r\n      elderly: [\r\n        \"name\",\r\n        \"age\",\r\n        \"email\",\r\n        \"contact_number\",\r\n        \"address\",\r\n        \"alert_count\",\r\n        \"device_count\",\r\n        \"ownership_str\",\r\n      ],\r\n      nurse: [\"name\", \"contact_number\", \"action\"],\r\n    },\r\n  };\r\n  const roleMapping = {\r\n    distributor_id: \"distributor\",\r\n    office_id: \"office\",\r\n    sales_agent_id: \"sales_agent\",\r\n    nursing_home_id: \"nursing_home\",\r\n    monitoring_station_id: \"monitoring_station\",\r\n    support_agent_id: \"support_agent\",\r\n  };\r\n  function handleClick(id, n) {\r\n    navigate(`/super-admin/user/${n}`, {\r\n      state: { role: roleMapping[id] },\r\n    });\r\n  }\r\n  const allColumns = {\r\n    //common col ========================>\r\n    name: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"office\":\r\n            return \"Office\";\r\n          case \"nurse\":\r\n            return \"Nurse Name\";\r\n          case \"distributor\":\r\n            return \"Distributor Name\";\r\n          case \"sales_agent\":\r\n            return \"Sales Agent Name\";\r\n          case \"nursing_home\":\r\n            return \"Nursing Home\";\r\n          case \"end_user\":\r\n            return \"End User\";\r\n          case \"monitoring_station\":\r\n            return \"Monitoring Station\";\r\n          case \"support_agent\":\r\n            return \"Support Agent\";\r\n          case \"installer\":\r\n            return \"Installer\";\r\n          case \"elderly\":\r\n            return \"Elderly Name\";\r\n          default:\r\n            return \"Name\";\r\n        }\r\n      },\r\n      // key: \"id\",\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: (event) => {\r\n            handelClick(record);\r\n          },\r\n        };\r\n      },\r\n      render: (row) => {\r\n        const getRole = activeTab === \"Elderly\" ? \"elderly\" : null;\r\n        return (\r\n          // row?.role == (\"monitoring_company\", \"elderly\") ? (\r\n          //   <button>\r\n          //     <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n          //       {row.name}\r\n          //     </span>\r\n          //   </button>\r\n          // ) : (\r\n          <button>\r\n            <AdminFiled data={row} role={getRole} />\r\n          </button>\r\n        );\r\n      },\r\n      // ),\r\n    },\r\n    address: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"elderly\":\r\n            return \"Caregiver Address\";\r\n          default:\r\n            return \"Address\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button style={{ width: \"200px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab === \"Elderly\" ? row.end_user_address : row.address}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    email: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"elderly\":\r\n            return \"Caregiver Email\";\r\n          default:\r\n            return \"Email Address\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab === \"Elderly\" ? row.end_user_email : row.email}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_number: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"elderly\":\r\n            return \"Caregiver Number\";\r\n          default:\r\n            return \"Contact Number\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab === \"Elderly\"\r\n              ? row.end_user_contact_number\r\n              : row.contact_number}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_person: {\r\n      title: \"Contact Person\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.contact_person}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    date: {\r\n      title: \"Date of Sales\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    age: {\r\n      title: \"Age\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.age}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    ownership_str: {\r\n      title: \"Ownership Structure\",\r\n      render: (row) => {\r\n        if (!row.hierarchy) return;\r\n        // Mapping for titles of each hierarchy level\r\n        const hierarchyTitles = {\r\n          distributor_id: \"Distributor\",\r\n          office_id: \"Office\",\r\n          sales_agent_id: \"Sales Agent\",\r\n          nursing_home_id: \"Nursing Home\",\r\n          monitoring_station_id: \"Monitoring Station\",\r\n          support_agent_id: \"Support Agent\",\r\n          end_user_id: \"End User\",\r\n          caregiver_id: \"Caregiver\", // Additional ID not in hierarchy\r\n        };\r\n\r\n        // Manually define the hierarchy levels in the desired order\r\n        const filteredHierarchy = [\r\n          {\r\n            id: \"distributor_id\",\r\n            title: hierarchyTitles[\"distributor_id\"],\r\n            value: row.hierarchy[\"distributor_id\"] || \"N/A\",\r\n          },\r\n          {\r\n            id: \"office_id\",\r\n            title: hierarchyTitles[\"office_id\"],\r\n            value: row.hierarchy[\"office_id\"] || \"N/A\",\r\n          },\r\n          {\r\n            id: \"sales_agent_id\",\r\n            title: hierarchyTitles[\"sales_agent_id\"],\r\n            value: row.hierarchy[\"sales_agent_id\"] || \"N/A\",\r\n          },\r\n\r\n          {\r\n            id: \"monitoring_station_id\",\r\n            title: hierarchyTitles[\"monitoring_station_id\"],\r\n            value: row.hierarchy[\"monitoring_station_id\"] || \"N/A\",\r\n          },\r\n          {\r\n            id: \"nursing_home_id\",\r\n            title: hierarchyTitles[\"nursing_home_id\"],\r\n            value: row.hierarchy[\"nursing_home_id\"] || \"N/A\",\r\n          },\r\n        ].filter((level) => level.value !== \"N/A\"); // Optional: Remove levels with no value\r\n\r\n        return (\r\n          <div className=\"ownership-str\">\r\n            {filteredHierarchy.map((level, index) => (\r\n              <button\r\n                key={level.id}\r\n                onClick={() => handleClick(level.id, level.value)}\r\n                className=\"ownership-button\"\r\n              >\r\n                {/* Display Title */}\r\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary hover:text-text-primary\">\r\n                  {level.title}{\" \"}\r\n                </span>\r\n                {index < filteredHierarchy.length - 1 && \" / \"}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    external_id: {\r\n      title: \"External ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.external_id}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products: {\r\n      title: \"Products\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products_price: {\r\n      title: \"Products Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons: {\r\n      title: \"Addons\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addons}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons_price: {\r\n      title: \"Addons Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addon_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    total_price: {\r\n      title: \"Total Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.total}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //count related col ===========================>\r\n    avg_sales: {\r\n      title: \"Average Sales\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.aleravg_salest_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    alert_count: {\r\n      title: \"Alert Count\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab == \"Elderly\" ? row.unresolved_alarm_count : null}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    device_count: {\r\n      title: \"Device Count\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {activeTab == \"Elderly\"\r\n              ? row?.rooms?.filter((room) => room.device_no).length\r\n              : null}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    sales_agent_count: {\r\n      title: \"Sales Agents\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.sales_agent}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    end_user_count: {\r\n      title: \"End Users\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.end_user}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    nursing_home_count: {\r\n      title: \"Nursing Homes\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nursing_home}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    monitoring_company_count: {\r\n      title: \"Monitoring Stations\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.monitoring_station}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    office_count: {\r\n      title: \"Offices\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.office}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    elderly_count: {\r\n      title: \"Elderly\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.elderly}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    assigned_nurse_count: {\r\n      title: \"Assigned Nurse\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nurse}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //All Type Of Naming Col ==========================>\r\n    office_name: {\r\n      title: \"Office Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.office_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    distributor_name: {\r\n      title: \"Distributor Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.distributor_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    sales_agent_name: {\r\n      title: \"Sales Agent Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.sales_agent_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    installer: {\r\n      title: \"Installer Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.installer_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //Others ==============================================>\r\n    agent_id: {\r\n      title: \"Agent ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.agent_id}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //action col =====================================>\r\n    status: {\r\n      title: \"Status\",\r\n      render: (row) =>\r\n        row?.role == \"sales_agent\" ? (\r\n          <StatusSwitch row={row} />\r\n        ) : (\r\n          <StatusDropdown row={row} />\r\n        ),\r\n    },\r\n    action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      width: 100,\r\n      render: (row) => (\r\n        <AdminSupportAgentTableAction\r\n          // getlist={() => getList(query)}\r\n          data={row}\r\n        />\r\n      ),\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    console.log(activeTab);\r\n\r\n    // Check role and set the columns accordingly\r\n    if (activeTab == \"Super Admins\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"super_admin\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"super_admin\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Support Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"support_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"support_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Distributors\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"distributor\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"distributor\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Offices\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"office\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"office\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nursing Homes\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nursing_home\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nursing_home\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Sales Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"sales_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"sales_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"End Users\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"end_user\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"end_user\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Installers\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"installer\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"installer\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Monitoring Stations\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow =\r\n        roleBasedColumns[mainRole]?.[\"monitoring_station\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"monitoring_station\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nurses\") {\r\n      console.log(activeTab);\r\n\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nurse\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nurse\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Elderly\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"elderly\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"elderly\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    }\r\n  }, [activeTab]); // Run this effect whenever `role` changes\r\n\r\n  return result;\r\n};\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useApi = (apiFunction) => {\r\n  const cancelTokenSource = useRef(null);\r\n  const [response, setresponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const makeRequest = useCallback(\r\n    async (params = {}) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Cancel the previous request if it exists\r\n      if (cancelTokenSource.current) {\r\n        cancelTokenSource.current.cancel(\"Previous request canceled!\");\r\n      }\r\n\r\n      // Create a new CancelToken\r\n      cancelTokenSource.current = axios.CancelToken.source();\r\n\r\n      try {\r\n        // Pass the cancelToken to the API function\r\n        const response = await apiFunction({\r\n          ...params,\r\n          cancelToken: cancelTokenSource.current.token,\r\n        });\r\n        setresponse(response); // Adjust according to your response structure\r\n      } catch (err) {\r\n        if (axios.isCancel(err)) {\r\n          console.log(\"Request canceled:\", err.message);\r\n        } else {\r\n          console.error(\"Fetch error:\", err);\r\n          setError(err);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [apiFunction]\r\n  );\r\n\r\n  // Cleanup function to cancel ongoing requests when the component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (cancelTokenSource.current) {\r\n        cancelTokenSource.current.cancel(\r\n          \"Component unmounted, request canceled!\"\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return { response, loading, error, makeRequest };\r\n};\r\n\r\nexport default useApi;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Space, Table, Tag, Modal } from \"antd\";\r\nimport { getUserPage, updateUser } from \"@/api/AdminUser\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ls from \"store2\";\r\nimport CustomButton from \"../../Shared/button/CustomButton\";\r\nimport throttle from \"@/utils/throttle\";\r\nimport SearchInput from \"../../Shared/Search/SearchInput\";\r\nimport Sort from \"../../Shared/sort/Sort\";\r\nimport AdminSupportAgentTable from \"@/Components/PubTable/AdminSupportAgentTable\";\r\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\r\nimport { Switch } from \"antd\";\r\nimport CreateAdminSupportAgent from \"@/Components/PubTable/CreateAndEditUsers\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport TabMenus from \"@/Components/TabMenus\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { allElderProfilePage } from \"@/api/RecentAlerts\";\r\nimport { useGetColumnsByRoleAndActiveTab } from \"./utiles\";\r\nimport { getUser } from \"@/api/Users\";\r\nimport { getElderlies } from \"@/api/elderly\";\r\nimport service from \"@/utils/axiosRequest\";\r\nimport axios from \"axios\";\r\nimport useApi from \"@/hook/useApi\";\r\nconst AdminDashboard = () => {\r\n  const { response, loading, error, makeRequest } = useApi(getUser);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [changeParams, setChangeParams] = useState({});\r\n  const [role, setRole] = useState(\"\");\r\n  const [createText, setCreateText] = useState(\"Distributors\");\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [elderlyRes, setElderlyRes] = useState([]);\r\n  const [loadingEl, setLoadingEl] = useState(false);\r\n  const [menus] = useState([\r\n    { bo: true, warring: false, text: \"Distributors\" },\r\n    { bo: true, warring: false, text: \"Offices\" },\r\n    { bo: true, warring: false, text: \"Sales Agents\" },\r\n    { bo: true, warring: false, text: \"Nursing Homes\" },\r\n    { bo: true, warring: false, text: \"Nurses\" },\r\n    { bo: true, warring: false, text: \"Monitoring Stations\" },\r\n    { bo: true, warring: false, text: \"Support Agents\" },\r\n    { bo: true, warring: false, text: \"Installers\" },\r\n    { bo: true, warring: false, text: \"End Users\" },\r\n    { bo: true, warring: false, text: \"Elderly\" },\r\n  ]);\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n  const [search, setSearch] = useState(\"\");\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"Time\");\r\n  const [page, SetPage] = useState({});\r\n  const [query, setQuey] = useState({});\r\n  const [list, SetList] = useState([]);\r\n  const [total, SetTotle] = useState(0);\r\n  const [columns, SetColumns] = useState([]);\r\n  const roleMappings = {\r\n    Distributors: \"Distributor\",\r\n    \"Nursing Homes\": \"Nursing Home\",\r\n    \"Sales Agents\": \"Sales Agent\",\r\n    \"Support Agents\": \"Support Agent\",\r\n    \"Super Admins\": \"Super Admin\",\r\n    Elderly: \"Elderly\",\r\n    Installers: \"Installer\",\r\n    \"Monitoring Stations\": \"Monitoring Station\",\r\n    Offices: \"Office\",\r\n    \"End Users\": \"End User\",\r\n    Nurses: \"Nurse\",\r\n  };\r\n  const roleMappings2 = {\r\n    Distributors: \"distributor\",\r\n    \"Nursing Homes\": \"nursing_home\",\r\n    \"Sales Agents\": \"sales_agent\",\r\n    \"Support Agents\": \"supports_agent\",\r\n    \"Monitoring Stations\": \"monitoring_station\",\r\n    Installers: \"installer\",\r\n    \"End Users\": \"end_user\",\r\n    Offices: \"office\",\r\n    \"Super Admins\": \"super_admin\",\r\n    Elderly: \"elderly\",\r\n    Nurses: \"nurse\",\r\n  };\r\n  const data = [\"Time\", \"Name\"];\r\n  const getCulumns = useGetColumnsByRoleAndActiveTab(activeTab);\r\n  useEffect(() => {\r\n    if (getCulumns) {\r\n      SetColumns(getCulumns);\r\n    }\r\n  }, [getCulumns, activeTab]);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const tab = params.get(\"tab\");\r\n    const menuItems = menus.map((menu) => menu.text);\r\n    if (menuItems.includes(tab)) {\r\n      setActiveTab(tab);\r\n    } else {\r\n      setActiveTab(\"Distributors\");\r\n    }\r\n  }, []);\r\n  const handelOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const HandleTabText = (e) => {\r\n    SetPage({ page: 1 });\r\n    setActiveTab(e.name);\r\n    // navigate(`/super-admin/users?tab=${e.name}`);\r\n  };\r\n  const getlist = useCallback(async () => {\r\n    SetList([]);\r\n    let queries = { ...page, ...query };\r\n    const formattedRoleName = roleMappings[activeTab];\r\n    setCreateText(formattedRoleName);\r\n    queries.role = roleMappings2[activeTab];\r\n    setRole(queries.role);\r\n    if (queries.role === \"elderly\") {\r\n      setLoadingEl(true);\r\n\r\n      delete queries.role;\r\n      getElderlies(queries)\r\n        .then((res) => {\r\n          setElderlyRes(res.data);\r\n          SetTotle(res?.total);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setLoadingEl(false);\r\n        });\r\n    } else {\r\n      try {\r\n        await makeRequest({ ...queries });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    navigate(`/super-admin/users?tab=${activeTab}`);\r\n  }, [query, activeTab, page]);\r\n\r\n  useEffect(() => {\r\n    getlist();\r\n  }, [getlist]);\r\n  const isMounted = useRef(false);\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      if (selected && query.orderType !== selected) {\r\n        delete query.sort_by_created_at;\r\n        delete query.sort_by_name;\r\n        setQuey({\r\n          ...query,\r\n          ...(selected === \"Name\"\r\n            ? { sort_by_name: -1 }\r\n            : { sort_by_created_at: -1 }),\r\n        });\r\n\r\n        SetPage({ ...page, page: 1 });\r\n      }\r\n    } else {\r\n      isMounted.current = true; // Set to true after the first render\r\n    }\r\n  }, [selected]);\r\n\r\n  const handBlurchange = () => {\r\n    setQuey({ ...query, search: search.trim() });\r\n    SetPage({ ...page, page: 1 });\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* <div className='h-[100px] flex items-center justify-between'>\r\n                <div className='flex items-center'>\r\n\r\n                    <div className='  text-[28px] font-semibold font-cblock ' >Super Admin</div>\r\n\r\n                </div>\r\n\r\n            </div> */}\r\n      <div className=\"pt-[20px] pb-[10px] flex\">\r\n        <TabMenus\r\n          menus={menus}\r\n          activeTab={activeTab}\r\n          setActiveTab={false}\r\n          handleChange={HandleTabText}\r\n        />\r\n        {/* {\r\n                    menus.map((e, key) => {\r\n                        return (\r\n                            <div\r\n                                key={key}\r\n                                onClick={() => HandleTabText(e.text)}\r\n                                className={` relative re cursor-pointer h-[40px] mr-[10px] pl-[20px] pr-[20px]  rounded-[20px]   flex items-center ${activeTab == e.text ? \"text-white bg-cblock \" : \"text-OnButtonNormal bg-white  \"} `}>\r\n                                {e.lable}\r\n                                {e.warring && <div className={`w-[8px] h-[8px] rounded-[100px] bg-onBackWarring  absolute  right-[5px]`} > </div>}\r\n                            </div>\r\n                        )\r\n                    })\r\n                } */}\r\n      </div>\r\n\r\n      <div className=\" bg-white rounded-2xl overflow-hidden\">\r\n        <div className=\" px-[22px] py-6 flex items-start flex-col lg:flex-row justify-between gap-2\">\r\n          <div className=\" flex items-center justify-between w-full\">\r\n            <h2 className=\" text-2xl font-bold text-text-primary\">\r\n              {activeTab}\r\n            </h2>\r\n          </div>\r\n          <div className=\" flex items-center justify-end gap-5 w-full\">\r\n            {/* =====Search sort and add admin button===== */}\r\n            <SearchInput\r\n              search={search}\r\n              setSearch={setSearch}\r\n              handBlurchange={handBlurchange}\r\n              placeholder={`Search ${createText}`}\r\n            />\r\n            <Sort\r\n              query={query}\r\n              setQuery={setQuey}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              data={data}\r\n            />\r\n            <CustomButton\r\n              onClick={() => handelOpenModal()}\r\n              className={\" hidden lg:flex min-w-[80px]\"}\r\n              style={{ display: createText == \"Elderly\" ? \"none\" : \"flex\" }}\r\n            >\r\n              <div\r\n                className=\"mr-1\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 19 19\" fill=\"none\">\r\n                <path d=\"M10.0941 5.54102C10.0941 5.2131 9.82824 4.94727 9.50033 4.94727C9.17241 4.94727 8.90658 5.2131 8.90658 5.54102V8.9056H5.54199C5.21407 8.9056 4.94824 9.17143 4.94824 9.49935C4.94824 9.82727 5.21407 10.0931 5.54199 10.0931H8.90658V13.4577C8.90658 13.7856 9.17241 14.0514 9.50033 14.0514C9.82824 14.0514 10.0941 13.7856 10.0941 13.4577V10.0931H13.4587C13.7866 10.0931 14.0524 9.82727 14.0524 9.49935C14.0524 9.17143 13.7866 8.9056 13.4587 8.9056H10.0941V5.54102Z\" fill=\"white\"/>\r\n                </svg>`,\r\n                }}\r\n              ></div>\r\n              Add New {createText}\r\n            </CustomButton>\r\n          </div>\r\n        </div>\r\n\r\n        {/* =============Admin Support Agent data table============== */}\r\n        <div className=\" grid grid-cols-1\">\r\n          <SidebarContext.Provider\r\n            value={{\r\n              getlist,\r\n              query,\r\n              total: activeTab == \"Elderly\" ? total : response?.total || [],\r\n              page,\r\n              SetPage,\r\n              role,\r\n            }}\r\n          >\r\n            <AdminSupportAgentTable\r\n              loading={activeTab == \"Elderly\" ? loadingEl : loading}\r\n              tableData={activeTab == \"Elderly\" ? elderlyRes : response?.data}\r\n              getlist={getlist}\r\n              columns={columns}\r\n            />\r\n          </SidebarContext.Provider>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-[38px] \">\r\n        <div className=\"font-semibold\"></div>\r\n      </div>\r\n\r\n      <CreateAdminSupportAgent\r\n        changeParams={changeParams}\r\n        item={{}}\r\n        getlist={getlist}\r\n        role={role}\r\n        modalOPen={modalOPen}\r\n        setModalOpen={setModalOpen}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"names":["StatusSwitch","row","status","setStatus","useState","handleLoading","sethandleLoading","handleChange","value","updateUserDetails","res","_a","useEffect","jsx","ConfigProvider","Switch","StatusDropdown","jsxs","Select","useGetColumnsByRoleAndActiveTab","activeTab","mainRole","setMainRole","ls","result","setResult","setUserDetil","useCountStore","navigate","useNavigate","handelClick","name","roleBasedColumns","roleMapping","handleClick","id","n","allColumns","role","record","rowIndex","event","getRole","AdminFiled","hierarchyTitles","filteredHierarchy","level","index","room","AdminSupportAgentTableAction","tableColumns","colKey","columnConfig","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","useApi","apiFunction","cancelTokenSource","useRef","response","setresponse","loading","setLoading","error","setError","makeRequest","useCallback","params","axios","err","AdminDashboard","getUser","location","useLocation","setActiveTab","changeParams","setChangeParams","setRole","createText","setCreateText","elderlyRes","setElderlyRes","loadingEl","setLoadingEl","menus","search","setSearch","modalOPen","setModalOpen","selected","setSelected","page","SetPage","query","setQuey","list","SetList","total","SetTotle","columns","SetColumns","roleMappings","roleMappings2","data","getCulumns","tab","menu","handelOpenModal","HandleTabText","e","getlist","queries","formattedRoleName","getElderlies","isMounted","handBlurchange","TabMenus","SearchInput","Sort","CustomButton","SidebarContext","AdminSupportAgentTable","CreateAdminSupportAgent"],"mappings":"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"}