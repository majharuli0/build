import{r as t,d as c,fw as g,j as p}from"./index-C6ihtOFT.js";import"./mockData-DnyFJQLN.js";import h from"./barChart-DZpA1f6t.js";import{T as A}from"./Template-dZf058sO.js";import{g as C}from"./utiles-CFHCfbGp.js";import{C as T}from"./UseCustomContext-BLysDqWx.js";import"./index-BKCtKaZg.js";import"./helper-J0vdlJTC.js";import"./WeeklyMonthlyPicker-ZyHPDSw0.js";import"./index-A026hj3X.js";import"./index-CTQKRNam.js";import"./index-CcoexbQY.js";import"./index-O_A47OHM.js";import"./index-3UJZw3PW.js";function z(){const{title:d,color:r,icon:f,dataAnalysis:u,summaryProps:x}=C("Apnea Index"),D=t.useContext(T),{chartToDate:o="",chartFromDate:n="",elderlyDetails:a}=D||{},[s,l]=t.useState(c().subtract(1,"day").format("YYYY-MM-DD")),[i,S]=t.useState(c().subtract(31,"day").format("YYYY-MM-DD")),[Y,I]=t.useState([]),m=t.useCallback(()=>{g({uids:a==null?void 0:a.deviceId,to_date:i,from_date:s}).then(e=>{I(e.data),console.log(e.data)}).catch(e=>{console.log(e)})},[s,a]);return t.useEffect(()=>{m()},[m]),t.useEffect(()=>{o&&n&&(l(o),S(n))},[o]),p.jsx(A,{title:d,color:r,icon:f,dataAnalysis:u,summaryProps:x,children:p.jsx(h,{data:Y,color:r,dataType:"number",fromDate:i,toDate:s})})}export{z as default};
