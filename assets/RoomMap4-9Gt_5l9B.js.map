{"version":3,"file":"RoomMap4-9Gt_5l9B.js","sources":["../../src/hook/useWebSoket.js","../../src/Components/RoomMap/RoomMap4.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nfunction useWebSocket({\r\n  url = \"wss://live.elderlycareplatform.com/ws/\",\r\n  onOpen,\r\n  onMessage,\r\n  onError,\r\n  onClose,\r\n  dependencies = [],\r\n}) {\r\n  const wsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(url);\r\n    wsRef.current = ws;\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"Connected to WebSocket server\");\r\n      onOpen?.(ws);\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        onMessage?.(data, ws);\r\n      } catch (error) {\r\n        console.error(\"Error parsing WebSocket message:\", error);\r\n      }\r\n    };\r\n\r\n    ws.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n      onError?.(error, ws);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"Disconnected from WebSocket server\");\r\n      onClose?.(ws);\r\n    };\r\n\r\n    return () => ws.close();\r\n  }, dependencies);\r\n\r\n  return wsRef.current;\r\n}\r\n\r\nexport default useWebSocket;\r\n","import { decodePosition } from \"@/utils/helper\";\r\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { Stage, Layer, Line, Circle, Image } from \"react-konva\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport ObjectRenderer from \"./ObjectTemplate\";\r\nimport full from \"../../assets/icon/room/full.png\";\r\nimport walking from \"../../assets/icon/room/events/walking.svg\";\r\nimport suspected_fall from \"../../assets/icon/room/events/suspected_fall.svg\";\r\nimport squatting from \"../../assets/icon/room/events/squatting.svg\";\r\nimport standing from \"../../assets/icon/room/events/standing.svg\";\r\nimport fall_confirm from \"../../assets/icon/room/events/fall_confirm.svg\";\r\nimport laying_down from \"../../assets/icon/room/events/laying_down.svg\";\r\nconst DetectionBoundaryCanvas = ({ roomInfo = [], position = [] }) => {\r\n  const context = useContext(CustomContext);\r\n\r\n  // Safely destructure elderlyDetails\r\n  const { elderlyDetails } = context || {};\r\n  const deviceCode = roomInfo?.room_no || elderlyDetails?.deviceId;\r\n  const [deviceIcon, setDeviceIcon] = useState(null);\r\n  const parentRef = useRef();\r\n  const [stageScale, setScale] = useState(1);\r\n  const roomWidthPx = 600;\r\n  const roomHeightPx = 500;\r\n  const [stageWidth, setStageWidth] = useState(600);\r\n  const [stageHeight, setStageHeight] = useState(500);\r\n  const [stageOffsetX, setStageOffsetX] = useState(0);\r\n  const [stageOffsetY, setStageOffsetY] = useState(0);\r\n  // Default dimensions for the top-mounted device\r\n  const [boundary, setBoundary] = useState({\r\n    up_left: [0, 0], // Top-left corner\r\n    low_left: [0, 0], // Bottom-left corner\r\n    up_right: [0, 0], // Top-right corner\r\n    low_right: [0, 0], // Bottom-right corner\r\n    mount_type: \"wall\",\r\n  });\r\n  const postureIconMap = {\r\n    0: null,\r\n    1: walking,\r\n    2: suspected_fall,\r\n    3: squatting,\r\n    4: standing,\r\n    5: fall_confirm,\r\n    6: laying_down,\r\n  };\r\n  const [objects, setObjects] = useState([]);\r\n\r\n  const scale = 10; // Scaling factor for conversion (1 decimeter = 10 pixels)\r\n  const canvasCenter = { x: 30 * scale, y: 0 }; // Device starts from top (y = 0)\r\n\r\n  // Convert boundary coordinates to pixel values\r\n  const convertCoords = (coords = [0, 0]) => {\r\n    if (!Array.isArray(coords) || coords.length < 2) {\r\n      throw new Error(\r\n        \"Invalid input: coords must be an array with at least two elements.\"\r\n      );\r\n    }\r\n\r\n    const [x = 0, y = 0] = coords;\r\n\r\n    return [canvasCenter.x - x * scale, canvasCenter.y + y * scale];\r\n  };\r\n\r\n  // Define boundary points for the polygon (top-mounted device)\r\n  const boundaryPoints = [\r\n    ...convertCoords(boundary.up_left),\r\n    ...convertCoords(boundary.low_left),\r\n    ...convertCoords(boundary.low_right),\r\n    ...convertCoords(boundary.up_right),\r\n  ];\r\n\r\n  // Decode position from WebSocket message and update the position state\r\n  // function handleDecode(code) {\r\n  //   const data = decodePosition(code);\r\n  //   let cords = data?.map((item) => item?.coordinates);\r\n  //   setPosition(cords);\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   // WebSocket connection for receiving real-time position data\r\n  //   const ws = new WebSocket(\"wss://live.elderlycareplatform.com/ws/\");\r\n\r\n  //   ws.onopen = () => {\r\n  //     console.log(\"Connected to WebSocket server\");\r\n  //   };\r\n\r\n  //   ws.onmessage = (event) => {\r\n  //     const data = JSON.parse(event?.data);\r\n  //     const payload = JSON.parse(data?.message)?.payload;\r\n  //     if (payload?.deviceCode === deviceCode && payload?.position) {\r\n  //       handleDecode(payload.position);\r\n  //     }\r\n  //   };\r\n\r\n  //   ws.onerror = (error) => {\r\n  //     console.error(\"WebSocket error:\", error);\r\n  //   };\r\n\r\n  //   ws.onclose = () => {\r\n  //     console.log(\"Disconnected from WebSocket server\");\r\n  //   };\r\n\r\n  //   return () => ws.close(); // Cleanup on unmount\r\n  // }, [deviceCode]);\r\n\r\n  const [images, setImages] = useState({});\r\n\r\n  useEffect(() => {\r\n    const loadImages = () => {\r\n      const newImages = {};\r\n      position?.forEach((pos) => {\r\n        // Get the postureIcon from the map using targetId or other relevant property\r\n        const postureIcon = postureIconMap[pos.postureIndex];\r\n\r\n        if (postureIcon) {\r\n          const img = new window.Image();\r\n          img.src = postureIcon;\r\n          img.onload = () => {\r\n            newImages[postureIcon] = img;\r\n            setImages((prev) => ({ ...prev, ...newImages }));\r\n          };\r\n        }\r\n      });\r\n    };\r\n    loadImages();\r\n  }, [position]);\r\n  useEffect(() => {\r\n    if (\r\n      roomInfo?.device_boundaries &&\r\n      typeof roomInfo.device_boundaries === \"object\"\r\n    ) {\r\n      const area = Object.fromEntries(\r\n        Object.entries(roomInfo.device_boundaries).reduce(\r\n          (acc, [key, value]) => {\r\n            if (key === \"_id\") return acc; // Skip the _id field\r\n            acc.push([key, value.split(\",\").map(Number)]);\r\n            return acc;\r\n          },\r\n          []\r\n        )\r\n      );\r\n      setBoundary(area);\r\n    } else {\r\n      console.error(\"device_boundaries is undefined or not an object\");\r\n      setBoundary({}); // Set a default value or handle the error as needed\r\n    }\r\n\r\n    const transformedData = roomInfo?.device_areas?.map(\r\n      ({ _id, coordKey, ...rest }) => ({\r\n        ...rest,\r\n        up_left: rest.up_left.split(\",\").map(Number),\r\n        low_left: rest.low_left.split(\",\").map(Number),\r\n        up_right: rest.up_right.split(\",\").map(Number),\r\n        low_right: rest.low_right.split(\",\").map(Number),\r\n      })\r\n    );\r\n    setObjects(transformedData);\r\n\r\n    const img = new window.Image();\r\n    img.src = full;\r\n\r\n    img.onload = () => {\r\n      setDeviceIcon(img);\r\n    };\r\n  }, [roomInfo]);\r\n\r\n  const generateGridLines = (points) => {\r\n    const lines = [];\r\n    const [minX, maxX, minY, maxY] = [\r\n      Math.min(...points.filter((_, i) => i % 2 === 0)), // X-coordinates\r\n      Math.max(...points.filter((_, i) => i % 2 === 0)),\r\n      Math.min(...points.filter((_, i) => i % 2 !== 0)), // Y-coordinates\r\n      Math.max(...points.filter((_, i) => i % 2 !== 0)),\r\n    ];\r\n\r\n    // Horizontal grid lines\r\n    for (let y = minY + 10; y < maxY; y += 10) {\r\n      lines.push([minX, y, maxX, y]);\r\n    }\r\n\r\n    // Vertical grid lines\r\n    for (let x = minX + 10; x < maxX; x += 10) {\r\n      lines.push([x, minY, x, maxY]);\r\n    }\r\n\r\n    return lines;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Ensure parentRef is valid and resize the stage on mount\r\n    const updateScale = () => {\r\n      if (parentRef.current) {\r\n        const widthScale = parentRef.current.clientWidth / roomWidthPx;\r\n        const heightScale = parentRef.current.clientHeight / roomHeightPx;\r\n        const newScale = Math.min(widthScale, heightScale); // Scale down to fit\r\n        setScale(newScale);\r\n\r\n        // Update stage size based on scale\r\n        const newStageWidth = parentRef.current.clientWidth;\r\n        const newStageHeight = parentRef.current.clientHeight;\r\n        setStageWidth(newStageWidth);\r\n        setStageHeight(newStageHeight);\r\n\r\n        // Calculate offset for centering the room inside the parent div\r\n        const offsetX = (newStageWidth - roomWidthPx * newScale) / 2;\r\n        const offsetY = (newStageHeight - roomHeightPx * newScale) / 2;\r\n        setStageOffsetX(offsetX);\r\n        setStageOffsetY(offsetY);\r\n      }\r\n    };\r\n\r\n    // Set initial scale on mount\r\n    updateScale();\r\n\r\n    // Use ResizeObserver to handle changes in container size\r\n    const resizeObserver = new ResizeObserver(updateScale);\r\n    if (parentRef.current) {\r\n      resizeObserver.observe(parentRef.current);\r\n    }\r\n\r\n    // Clean up observer when the component is unmounted\r\n    return () => {\r\n      if (resizeObserver) {\r\n        resizeObserver.disconnect();\r\n      }\r\n    };\r\n  }, [roomWidthPx, roomHeightPx]);\r\n  return (\r\n    <div\r\n      ref={parentRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"0 auto\",\r\n        maxHeight: \"500px\",\r\n        maxWidth: \"600px\",\r\n      }}\r\n    >\r\n      <Stage\r\n        width={stageWidth || 600}\r\n        height={stageHeight || 500}\r\n        scaleX={stageScale}\r\n        scaleY={stageScale}\r\n      >\r\n        <Layer>\r\n          {/* Detection Boundary for the top-mounted device */}\r\n          <Line\r\n            points={boundaryPoints}\r\n            closed\r\n            stroke=\"rgba(250, 181, 21, 1\" // Border color\r\n            strokeWidth={2} // Border thickness\r\n            dash={[10, 5]} // Dashed border (10px dash, 5px gap)\r\n            fill=\"rgba(250, 181, 21, 0.2)\" // Light blue background with transparency\r\n            opacity={0.4}\r\n          />\r\n\r\n          {/* Grid lines inside the polygon */}\r\n          {generateGridLines(boundaryPoints).map((gridLine, index) => (\r\n            <Line\r\n              key={index}\r\n              points={gridLine}\r\n              stroke=\"rgba(250, 181, 21, 1\"\r\n              strokeWidth={0.5}\r\n              dash={[2, 3]} // Dashed grid lines\r\n            />\r\n          ))}\r\n          {objects &&\r\n            objects.map((obj, index) => (\r\n              <ObjectRenderer\r\n                roomType={roomInfo?.name}\r\n                key={index}\r\n                object={obj}\r\n                convertCoords={convertCoords}\r\n              />\r\n            ))}\r\n          {deviceIcon && (\r\n            <Image\r\n              image={deviceIcon} // Pass the loaded image to the Image component\r\n              x={canvasCenter.x - 50 / 2} // Center the icon horizontally\r\n              y={canvasCenter.y - 50 / 2} // Center the icon vertically\r\n              width={50}\r\n              height={50}\r\n            />\r\n          )}\r\n          {position?.map((pos, index) => {\r\n            return (\r\n              <>\r\n                <Circle\r\n                  key={`circle-${index}`}\r\n                  x={canvasCenter.x - pos.coordinates.x * 10}\r\n                  y={canvasCenter.y + pos.coordinates.y * 10}\r\n                  radius={18}\r\n                  fill={pos.color}\r\n                />\r\n                {pos.postureIndex && (\r\n                  <Image\r\n                    image={images[postureIconMap[pos.postureIndex]]}\r\n                    x={canvasCenter.x - pos.coordinates.x * 10 - 15} // Center the icon horizontally\r\n                    y={canvasCenter.y + pos.coordinates.y * 10 - 15} // Center the icon vertically\r\n                    width={30}\r\n                    height={30}\r\n                  />\r\n                )}\r\n              </>\r\n            );\r\n          })}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetectionBoundaryCanvas;\r\n"],"names":["useWebSocket","url","onOpen","onMessage","onError","onClose","dependencies","wsRef","useRef","useEffect","ws","event","data","error","DetectionBoundaryCanvas","roomInfo","position","context","useContext","CustomContext","elderlyDetails","deviceIcon","setDeviceIcon","useState","parentRef","stageScale","setScale","roomWidthPx","roomHeightPx","stageWidth","setStageWidth","stageHeight","setStageHeight","stageOffsetX","setStageOffsetX","stageOffsetY","setStageOffsetY","boundary","setBoundary","postureIconMap","walking","suspected_fall","squatting","standing","fall_confirm","laying_down","objects","setObjects","scale","canvasCenter","convertCoords","coords","x","y","boundaryPoints","images","setImages","newImages","pos","postureIcon","img","prev","area","acc","key","value","transformedData","_a","_id","coordKey","rest","full","generateGridLines","points","lines","minX","maxX","minY","maxY","_","i","updateScale","widthScale","heightScale","newScale","newStageWidth","newStageHeight","offsetX","offsetY","resizeObserver","jsx","Stage","Layer","Line","gridLine","index","obj","ObjectRenderer","Image","jsxs","Fragment","Circle"],"mappings":"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"}