import{r as j,j as A,bq as q}from"./index-DKKIrJkr.js";import{E as N}from"./index-p85IepaV.js";import"./helper-C_2_l4sE.js";function W({data:u,dataType:m,color:k,chartType:D="Day",toDate:S,fromDate:_,xUnit:f="date",hourLimit:v=12,numberLimit:B=100,dataUnit:z="",chartFor:p=""}){const $=j.useMemo(()=>{if(!(u!=null&&u.length))return null;function I(t){const o=Array.from({length:67},(i,r)=>{const h=60+r*10,g=Math.floor(h/60),d=h%60;return d===0?`${g} hr`:`${g} hr ${d} min`}),a=new Array(o.length).fill(0);t==null||t.forEach(i=>{const r=Math.floor((i.sleep_total_time-60)/10);r>=0&&r<a.length&&a[r]++});const l=a.reduce((i,r)=>i+r,0),c=a.map(i=>l>0?(i/l*100).toFixed(0):"0");return{xaxis:o,data:c}}function E(t){const o=Array.from({length:10},(i,r)=>`${0+r*10}-${0+(r+1)*10}`),a=new Array(o.length).fill(0);t==null||t.forEach(i=>{const r=Math.floor(p!=="deepSleepPercentageDistribution"?(i==null?void 0:i.sleep_efficiency)/10:(i==null?void 0:i.sleep_quality)/10);r>=0&&r<a.length&&a[r]++});const l=t.length,c=a.map(i=>l>0?(i/l*100).toFixed(0):"0");return{xaxis:o,data:c}}function M(t){const e=Array.from({length:6},(c,i)=>`${i*5}-${(i+1)*5}`),o=new Array(e.length).fill(0);t==null||t.forEach(c=>{const i=parseFloat(c.ahi),r=Math.floor(i/5);r>=0&&r<o.length&&o[r]++});const a=t.length,l=o.map(c=>a>0?(c/a*100).toFixed(0):"0");return{xaxis:e,data:l}}function R(t){const e=Array.from({length:12},(c,i)=>`${i*10}-${(i+1)*10}`),o=new Array(e.length).fill(0);t==null||t.forEach(c=>{const i=c.totalFallAsleepDuration,r=Math.floor(i/10);r>=0&&r<o.length&&o[r]++});const a=t.length,l=o.map(c=>a>0?(c/a*100).toFixed(0):"0");return{xaxis:e,data:l}}function C(t){const n={xaxis:Array.from({length:31},(i,r)=>r+6).map(i=>i.toString()),data:Array(31).fill(0)};let e=Array(31).fill(0);t.forEach(i=>{const r=i.data_list.filter(g=>g!=="-1"&&g!=="0").map(Number);let h=Array(31).fill(0);r.forEach(g=>{if(g>=6&&g<=36){const d=g-6;h[d]++}}),h.forEach((g,d)=>{e[d]+=g})});const o=e.map((i,r)=>i>0?r:null).filter(i=>i!==null);if(o.length===0)return n;const a=Math.max(o[0]-1,0),l=Math.min(o[o.length-1]+1,30),c=e.slice(a,l+1).reduce((i,r)=>i+r,0);return n.data=e.map((i,r)=>r>=a&&r<=l&&c>0?(i/c*100).toFixed(2):"0.00"),console.log("Total Counts:",e),console.log("Result:",n),n}const x=["45-50","50-55","55-60","60-65","65-70","70-75","75-80","80-85","85-90","90-95","95-100","100-105","105-110","110-115","115-120"],O=t=>{const s=new Array(x.length).fill(0);t==null||t.forEach(o=>{o.data_list.forEach(a=>{if(a>0)for(let l=0;l<x.length;l++){const[c,i]=x[l].split("-").map(Number);if(a>=c&&a<i){s[l]+=1;break}}})});const n=t==null?void 0:t.reduce((o,a)=>o+a.data_list.filter(l=>l>0).length,0),e=s.map(o=>(o/n*100).toFixed(0));return{xaxis:x,data:e}},b=(()=>{if(f==="number"){if(p==="apneaIndexDistribution"){const{xaxis:t,data:s}=M(u);return t.map((n,e)=>({number:n,value:s[e]}))}else if(p==="heartRateDistribution"){const{xaxis:t,data:s}=O(u);return t.map((n,e)=>({number:n,value:s[e]}))}else if(p==="breathRateDistribution"){const{xaxis:t,data:s}=C(u);return t.map((n,e)=>({number:n,value:s[e]}))}}if(f==="hour")if(u&&u.length>0&&p==="durationDistribution"){const{xaxis:t,data:s}=I(u);return t.map((n,e)=>({hour:n,percentage:parseInt(n,10),value:s[e]}))}else if(u&&u.length>0&&p==="fallAsleepDurationDistribution"){const{xaxis:t,data:s}=R(u);return t.map((n,e)=>({hour:n,percentage:parseInt(n,10),value:s[e]}))}else return Array.from({length:v},(t,s)=>({hour:s,value:0,percentage:0}));else if(f==="percentage")if(p==="efficiencyDistribution"||p==="deepSleepPercentageDistribution"){const{xaxis:t,data:s}=E(u);return console.log("data===================>",u),t.map((n,e)=>({percentage:n,value:s[e]}))}else{const t=Array.from({length:11},(n,e)=>e*10),s=new Map(u.map(n=>[Math.floor(n.sleep_efficiency/10)*10,{value:n.sleep_efficiency,date:n.date}]));return t.map(n=>{var e,o;return{percentage:n,value:((e=s.get(n))==null?void 0:e.value)||0,date:((o=s.get(n))==null?void 0:o.date)||null}})}else{const s=((e,o)=>{const a=[],l=new Date(e),c=new Date(o);for(;l<=c;)a.push(new Date(l).toISOString().split("T")[0]),l.setDate(l.getDate()+1);return a})(_,S),n=new Map(u.map(e=>[e.date.split("T")[0],e.ratio||e.walk_speed||e.bed_exit_duration||e.value||e.sleep_time||e.ahi||p==="walkingStepsStatistix"&&e.walking_stpes||e.anomalyHeartRate||e.sleep_efficiency||(e.leave_bed_count&&p==="numberOfBedExitTime"?e.leave_bed_count:null)||(e.sleep_quality&&p!=="numberOfBedExitTime"&&p!=="roomInOut"&&p==="deepSleepPercentageStatistic"?e.sleep_quality:null)||(e.entry_exit_count&&p==="roomInOut"?e.entry_exit_count:null)||p==="sleedDurationStatistic"&&e.sleep_total_time||e.totalFallAsleepDuration||"--"]));return s.map(e=>({date:e,value:n.get(e)||0}))}})(),w=(t,s="axis")=>{if(f==="percentage"||m==="percentage")return`${t}%`;if(m==="duration"){const n=Math.floor(t/60),e=t%60;return n>0?`${n}h ${e}m`:`${e}m`}return t},y=t=>{if(f==="number")return t==null?void 0:t.toString();if(f==="hour")return`${t}`;if(f==="percentage")return`${t}%`;if(D==="Week"){const n=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],e=new Date(t);return n[e.getDay()]}return new Date(t).toLocaleDateString("en-US",{month:"2-digit",day:"2-digit"}).replace("/","-")};return{xAxis:{type:"category",data:b.map(t=>y(f==="hour"?t.hour:f==="percentage"?t.percentage:f==="number"?t.number:t.date))},grid:{top:"5%",left:"8%",bottom:"5%",right:"2%"},yAxis:{type:"value",axisLabel:{formatter:w},max:f==="percentage"||m==="percentage"?100:void 0},series:[{data:b.map(t=>t.value),type:"bar",barWidth:10,itemStyle:{color:k||"#000",borderRadius:[50,50,0,0]}}],tooltip:{trigger:"axis",formatter:t=>{if(f==="number")if(p!=="apneaIndexDistribution"){const e=b[t[0].dataIndex];return`<div style="margin-top: 4px">
              <span >${e.value}%</span>
              <br>
              <span style="font-weight: bold">${e.number} BPM</span>
              </div>`}else{const e=b[t[0].dataIndex];return`<div style="margin-top: 4px">
              <span style="font-weight: bold">${e.value}%</span>
              <br>
              <span style="font-weight: normal">${e.number}</span>
              </div>`}else if(f==="hour"){const e=b[t[0].dataIndex];return`<div style="margin-top: 4px">
                    ${e.value?`<span>${e.value}%</span>`:"--"}
                    <br>
                    <span style="font-weight: bold">${e.hour}</span>
                    </div>`}else if(f==="percentage"){const e=b[t[0].dataIndex];if(e.date){const o=new Date(e.date).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-");return`<div style="font-weight: bold">${e.value}%</div>
                     <div style="margin-top: 4px">${o}</div>`}return`<div style="font-weight: bold"> ${e.value}% <br/> <span style="font-weight: normal">${e.percentage}%</span></div>`}const s=b[t[0].dataIndex].date;return`<div style="font-weight: bold">${new Date(s).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}).replace(/\//g,"-")}</div>
                  <div style="margin-top: 4px">${w(t[0].value)}${z}</div>`}}}},[u,m,k,D,_,S,f,v,B]);return!(u!=null&&u.length)||!$?A.jsx(q,{description:"No data available to show"}):A.jsx(N,{option:$,style:{height:"350px"}})}export{W as default};
