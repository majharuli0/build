{"version":3,"file":"AlertsList-BABHHwTl.js","sources":["../../src/Pages/Alerts/Utiles/utiles.jsx","../../src/Pages/Alerts/mock.js","../../src/Pages/Alerts/Utiles/utiles2.jsx","../../src/Pages/Alerts/AlertsList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Elderly from \"@/Components/NameCol/Elderly\";\nimport LargeTextViewerModal from \"@/Components/LargeTextViewerModal/LargeTextViewerModal\";\nimport { LuNavigation } from \"react-icons/lu\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function useElderlyTableColumns(role) {\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const randomId = Math.floor(Math.random() * 1000000);\n  const handleViewClick = (row) => {\n    window.scrollTo(0, 0);\n    navigate(`/supporter/elderlies/elderly-profile/${randomId}?tab=overview`); // Navigate to the profile page with the ID\n  };\n  const elderlyTableColsMapping = {\n    support_agent: [\n      \"elderlyName\",\n      \"activeAlert\",\n      \"allergies\",\n      \"diseases\",\n      \"medications\",\n      \"viewOnMap\",\n    ],\n    nurse: [\n      \"elderlyName\",\n      \"activeAlert\",\n      \"allergies\",\n      \"diseases\",\n      \"medications\",\n      \"viewOnMap\",\n    ],\n    end_user: [\n      \"elderlyName\",\n      \"activeAlert\",\n      \"allergies\",\n      \"diseases\",\n      \"medications\",\n      \"viewOnMap\",\n    ],\n  };\n  const elderlyTableColumns = {\n    elderlyName: {\n      title: \"Elderly Name\",\n      render: (row) => (\n        <Elderly onClick={() => handleViewClick(row)} data={row} />\n      ),\n    },\n    roomName: {\n      title: \"Room Name\",\n      dataIndex: \"roomName\",\n      render: (text) => <span>{text}</span>,\n    },\n    activeAlert: {\n      title: \"Active Alert\",\n      dataIndex: \"activeAlert\",\n      render: (text) => <span>{text}</span>,\n    },\n    address: {\n      title: \"Address\",\n      width: \"230px\",\n      render: (row) => (\n        <span className=\"!w-[230px] text-nowrap\">{row.address}</span>\n      ),\n    },\n    allergies: {\n      title: \"Allergies\",\n      dataIndex: \"allergies\",\n      render: (text) => <span>{text}</span>,\n    },\n    diseases: {\n      title: \"Diseases\",\n      dataIndex: \"diseases\",\n      render: (text) => <span>{text}</span>,\n    },\n    medications: {\n      title: \"Medications\",\n      dataIndex: \"medications\",\n      render: (text) => <span>{text}</span>,\n    },\n    viewOnMap: {\n      title: \"View On Map\",\n      render: (row) => (\n        <span className=\"flex items-center transition-all duration-300 justify-start gap-2 text-sm font-medium text-text-primary hover:text-primary cursor-pointer p-2 rounded-md w-fit text-center hover:bg-slate-100\">\n          <div className=\"flex items-center gap-2\">\n            <a\n              href={`https://www.google.com/maps?q=${row.lat},${row.lng}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-base font-medium !text-blue-500\"\n            >\n              View on Map\n            </a>\n            <LuNavigation size={18} className=\"text-blue-500\" />\n          </div>\n        </span>\n      ),\n    },\n  };\n\n  const [elderlyTableColumn, setElderlyTableColumns] = useState([]);\n  useEffect(() => {\n    console.log(\"Current role:\");\n    console.log(\"Available roles:\", Object.keys(elderlyTableColsMapping));\n    if (role === \"support_agent\") {\n      const cols = elderlyTableColsMapping.support_agent.map((col) => {\n        return elderlyTableColumns[col];\n      });\n      setElderlyTableColumns(cols);\n    } else if (role === \"nurse\") {\n      const cols = elderlyTableColsMapping.nurse.map((col) => {\n        return elderlyTableColumns[col];\n      });\n      setElderlyTableColumns(cols);\n    } else if (role === \"end_user\") {\n      const cols = elderlyTableColsMapping.end_user.map((col) => {\n        return elderlyTableColumns[col];\n      });\n      setElderlyTableColumns(cols);\n    } else {\n      setElderlyTableColumns([]);\n    }\n  }, []);\n  return elderlyTableColumn;\n}\n\nexport { useElderlyTableColumns };\n","export const generateRandomAlerts = (count) => {\n  const alertTypes = [\"Critical\", \"Info\", \"Warning\"];\n  const rooms = [\"Living Room\", \"Kitchen\", \"Bedroom\", \"Bathroom\"];\n  const names = [\n    \"John Doe\",\n    \"Jane Doe\",\n    \"Alice Smith\",\n    \"Bob Johnson\",\n    \"Emma Brown\",\n    \"Michael Wilson\",\n    \"Sarah Davis\",\n    \"David Miller\",\n    \"Lisa Garcia\",\n    \"James Rodriguez\",\n  ];\n  const alertNames = [\n    \"Fall Detected\",\n    \"Fire Detected\",\n    \"Inactivity Alert\",\n    \"Medication Reminder\",\n    \"Unusual Behavior\",\n    \"High Temperature\",\n    \"Low Temperature\",\n    \"Water Leak\",\n    \"Door Left Open\",\n    \"Window Broken\",\n  ];\n  const eventNames = [\n    \"Medication Taken\",\n    \"Medication Not Taken\",\n    \"Medication Reminder\",\n  ];\n  const disabilityTypes = [\"Wheelchair\", \"Crutches\", \"Cane\", \"None\"];\n  const allergies = [\"Yes\", \"No\"];\n  const diseases = [\"Yes\", \"No\"];\n  const medications = [\"Yes\", \"No\"];\n  const activeAlert = [\"1\", \"4\", \"2\", \"No\"];\n  const isAlert = [\"True\", \"False\"];\n  return Array.from({ length: count }, (_, index) => ({\n    _id: index + 1,\n    alertType: alertTypes[Math.floor(Math.random() * alertTypes.length)],\n    elderlyName: names[Math.floor(Math.random() * names.length)],\n    alertName: alertNames[Math.floor(Math.random() * alertNames.length)],\n    roomId: String(index + 1),\n    roomName: rooms[Math.floor(Math.random() * rooms.length)],\n    alertLifetime: `${Math.floor(Math.random() * 10)}m ${Math.floor(\n      Math.random() * 60\n    )}s`,\n    time: new Date().toLocaleString(),\n    alertDescription: `${\n      alertNames[Math.floor(Math.random() * alertNames.length)]\n    } in the ${rooms[Math.floor(Math.random() * rooms.length)]}`,\n    status: \"Active\",\n    isAlert: isAlert[Math.floor(Math.random() * isAlert.length)],\n    address: \"123 Main St, Anytown, USA\",\n    coordinates: {\n      latitude: 37.7749 + (Math.random() - 0.5) * 0.01,\n      longitude: -122.4194 + (Math.random() - 0.5) * 0.01,\n    },\n    //for close alert\n    closedAt: new Date().toLocaleString(),\n    closedBy: names[Math.floor(Math.random() * names.length)],\n    //for event\n    eventName: eventNames[Math.floor(Math.random() * eventNames.length)],\n    disabilityType:\n      disabilityTypes[Math.floor(Math.random() * disabilityTypes.length)],\n    additionalInfo: \"This is additional info for event\",\n    hospital: {\n      name: \"Hospital For Special Surgery\",\n      phone: \"1234567890\",\n      latitude: -33.8743612,\n      longitude: 151.2261153,\n    },\n    allergies: allergies[Math.floor(Math.random() * allergies.length)],\n    diseases: diseases[Math.floor(Math.random() * diseases.length)],\n    medications: medications[Math.floor(Math.random() * medications.length)],\n    activeAlert: activeAlert[Math.floor(Math.random() * activeAlert.length)],\n    alertComments: \"This is alert comments\",\n    alertLifespan: [\n      {\n        dateTime: \"24-01-2024 10:00 AM\",\n        description: \"At 10:00 AM, the alert was created\",\n      },\n      {\n        dateTime: \"24-01-2024 10:30 AM\",\n        description:\n          \"Agent (petar) clicked on the incident in 10:30 (30mins later)\",\n      },\n      {\n        dateTime: \"24-01-2024 10:32 AM\",\n        description:\n          \"Agent (petar) clicked on “Call Elderly” in 10:32 (2mins later)\",\n      },\n      {\n        dateTime: \"24-01-2024 10:34 AM\",\n        description:\n          \"Agent (petar) clicked on “Call 911” in 10:34 (2mins later)\",\n      },\n      {\n        dateTime: \"24-01-2024 10:36 AM\",\n        description:\n          \"Agent (petar) clicked on “Close Alert” in 10:36 (2mins later)\",\n      },\n    ],\n  }));\n};\nexport const alerts = generateRandomAlerts(14);\nexport const activeAlertsTableData = generateRandomAlerts(20);\nexport const recentlyClosedAlertsTableData = generateRandomAlerts(20);\nexport const eventsTableData = generateRandomAlerts(20);\nexport const elderlyListTableData = generateRandomAlerts(20);\n","import { useEffect, useState, useContext } from \"react\";\nimport LargeTextViewerModal from \"@/Components/LargeTextViewerModal/LargeTextViewerModal\";\nimport AlertName from \"@/Components/NameCol/AlertName\";\nimport LifespanTimeline from \"@/Components/LifespanTimeline/LifespanTimeline\";\nimport {\n  transformDateAndTime,\n  transformDateAndTimeToDuration,\n  getAlertType,\n  getAlertInfoViaEventDetails,\n} from \"@/utils/helper\";\nimport { SidebarContext } from \"@/Context/CustomContext\";\nimport { LuEye } from \"react-icons/lu\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function useAlertHistoryColumns(type) {\n  const { rolesFormatter } = useContext(SidebarContext);\n  const [alertTableColumns, setAlertTableColumns] = useState(undefined);\n  const navigate = useNavigate(); // Initialize the navigate function\n  const handleViewClick = (row) => {\n    window.scrollTo(0, 0);\n    navigate(\n      `/supporter/elderlies/elderly-profile/${row.elderly_id}?tab=overview`\n    );\n  };\n  const alertColsMapping = {\n    alertHistory: [\n      \"alertName\",\n      \"alertType\",\n      \"elderlyName\",\n      \"roomName\",\n      \"incidentTime\",\n      // \"alertLifetime\",\n      \"alertStatus\",\n      \"comment\",\n      \"closedAt\",\n      \"closedBy\",\n      \"address\",\n      \"viewElderly\",\n    ],\n  };\n  const AlertsTableColumns = {\n    alertName: {\n      title: \"Title\",\n      render: (row) => <AlertName data={row} />,\n    },\n    alertType: {\n      title: \"Type\",\n      render: (event) => (\n        <span>{getAlertInfoViaEventDetails(event)?.label}</span>\n      ),\n    },\n    elderlyName: {\n      title: \"User Name\",\n      dataIndex: \"elderly_name\",\n      render: (text) => <span>{text}</span>,\n    },\n    roomName: {\n      title: \"Room Name\",\n      dataIndex: \"room_name\",\n      render: (text) => <span>{text}</span>,\n    },\n\n    incidentTime: {\n      title: \"Observation Time\",\n      dataIndex: \"created_at\",\n      render: (text) => (\n        <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\n      ),\n    },\n    alertLifetime: {\n      title: \"Duration\",\n      dataIndex: \"closed_at\",\n      render: (text) => (\n        <span className=\"text-nowrap\">\n          {transformDateAndTimeToDuration(text)}\n        </span>\n      ),\n    },\n    alertStatus: {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: (text) => (\n        <span className=\"text-nowrap\">\n          {text == 0 ? \"True Alert \" : \"False Alert \"}\n        </span>\n      ),\n    },\n    comment: {\n      title: \"Comments\",\n      render: (row) => (\n        <LargeTextViewerModal data={row.comment} title=\"Alert Comments\" />\n      ),\n    },\n    // alertLifeSpan: {\n    //   title: \"Alert Lifespan\",\n    //   dataIndex: \"alertLifespan\",\n    //   render: (data) => <LifespanTimeline data={data} />,\n    // },\n    address: {\n      title: \"Address\",\n      width: \"230px\",\n      render: (row) => (\n        <span className=\"!w-[230px] text-nowrap\">{row.address}</span>\n      ),\n    },\n    //for recently closed alerts table\n    closedAt: {\n      title: \"Closed At\",\n      dataIndex: \"closed_at\",\n      render: (text) => (\n        <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\n      ),\n    },\n    closedBy: {\n      title: \"Closed By\",\n      render: (row) => (\n        <span className=\"text-nowrap\">\n          {row.closed_by} ({rolesFormatter[row.closed_by_role]} )\n        </span>\n      ),\n    },\n    //for events table\n    eventName: {\n      title: \"Event Name\",\n      dataIndex: \"eventName\",\n      render: (text) => <span>{text}</span>,\n    },\n    eventTime: {\n      title: \"Event Time\",\n      dataIndex: \"time\",\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\n    },\n    eventTimeline: {\n      title: \"Event Timeline\",\n      dataIndex: \"alertLifetime\",\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\n    },\n    disabilityType: {\n      title: \"Disability Type\",\n      dataIndex: \"disabilityType\",\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\n    },\n    hospital: {\n      title: \"Hospital\",\n      dataIndex: \"hospital\",\n      render: (row) => (\n        <span className=\"text-nowrap\">\n          {row.name.length > 20 ? `${row.name.substring(0, 20)}...` : row.name}\n        </span>\n      ),\n    },\n    largeText: {\n      title: () => {\n        switch (type) {\n          case \"events\":\n            return \"Additional Info\";\n          default:\n            return \"\";\n        }\n      },\n      render: (row) => (\n        <LargeTextViewerModal\n          data={row.additionalInfo}\n          title=\"Additional Info\"\n        />\n      ),\n    },\n    viewElderly: {\n      title: \"View Elderly\",\n      render: (row) => (\n        <span\n          onClick={() => handleViewClick(row)}\n          className=\"flex items-center transition-all duration-300 justify-center gap-2 text-sm font-medium text-text-primary hover:text-primary cursor-pointer p-2 rounded-md  text-center hover:bg-slate-100\"\n        >\n          View <LuEye />\n        </span>\n      ),\n    },\n  };\n  useEffect(() => {\n    if (type === \"alertHistory\") {\n      const cols = alertColsMapping.alertHistory.map((col) => {\n        return AlertsTableColumns[col];\n      });\n      setAlertTableColumns(cols);\n    } else {\n      setAlertTableColumns([]);\n    }\n  }, []);\n  return alertTableColumns;\n}\nexport { useAlertHistoryColumns };\n\n// export const alertHistoryColumns = [\n//   {\n//     title: \"Alert Name\",\n//     render: (row) => <AlertName data={row} />,\n//   },\n//   {\n//     title: \"Alert Type\",\n//     dataIndex: \"event\",\n//     render: (event) => <span>{getAlertType(event)}</span>,\n//   },\n//   {\n//     title: \"Elderly Name\",\n//     dataIndex: \"elderly_name\",\n//     render: (text) => <span className=\"text-nowrap\">{text}</span>,\n//   },\n//   {\n//     title: \"Incident Time\",\n//     dataIndex: \"created_at\",\n//     render: (text) => (\n//       <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\n//     ),\n//   },\n//   {\n//     title: \"Closed At\",\n//     dataIndex: \"closed_at\",\n//     render: (text) => (\n//       <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\n//     ),\n//   },\n//   {\n//     title: \"Alert Life\",\n//     dataIndex: \"closed_at\",\n//     render: (text) => (\n//       <span className=\"text-nowrap\">\n//         {transformDateAndTimeToDuration(text)}\n//       </span>\n//     ),\n//   },\n//   {\n//     title: \"Alert Status\",\n//     dataIndex: \"status\",\n//     render: (text) => (\n//       <span className=\"text-nowrap\">\n//         {text == 0 ? \"True Alert\" : \"False Alert\"}\n//       </span>\n//     ),\n//   },\n//   {\n//     title: \"Closed By\",\n//     render: (row) => {\n//       switch (row.closed_by_role) {\n//         case \"super_admin\":\n//           return (\n//             <span className=\"text-nowrap\">{row.closed_by} (Super Admin)</span>\n//           );\n//         case \"end_user\":\n//           return (\n//             <span className=\"text-nowrap\">{row.closed_by} (End User)</span>\n//           );\n//         case \"supports_agent\":\n//           return (\n//             <span className=\"text-nowrap\">\n//               {row.closed_by} (Supports Agent)\n//             </span>\n//           );\n//         case \"nurse\":\n//           return <span className=\"text-nowrap\">{row.closed_by} (Nurse)</span>;\n//         case \"nursing_home\":\n//           return (\n//             <span className=\"text-nowrap\">{row.closed_by} (Nursing Home)</span>\n//           );\n//         default:\n//           return (\n//             <span className=\"text-nowrap\">\n//               {row.closed_by} ({row.closed_by_role} )\n//             </span>\n//           );\n//       }\n//     },\n//   },\n//   {\n//     title: \"Alert Comments\",\n//     render: (row) => (\n//       <LargeTextViewerModal data={row.comment} title=\"Alert Comments\" />\n//     ),\n//   },\n//   {\n//     title: \"Address\",\n//     width: \"230px\",\n//     render: (row) => (\n//       <span className=\"!w-[230px] text-nowrap\">{row.address}</span>\n//     ),\n//   },\n//   // {\n//   //   title: \"Alert Lifespan\",\n//   //   dataIndex: \"alertLifespan\",\n//   //   render: (data) => <LifespanTimeline data={data} />,\n//   // },\n// ];\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport CustomTable from \"@/Shared/Table/CustomTable\";\nimport { useElderlyTableColumns } from \"./Utiles/utiles\";\nimport { elderlyListTableData } from \"./mock\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport { getAlertsGroup } from \"@/utils/helper\";\n\nimport { Segmented, ConfigProvider, Select } from \"antd\";\nimport SearchInput from \"@/Shared/Search/SearchInput\";\n// import { alertHistoryColumns } from \"./Utiles/utiles2\";\nimport { getAlertList } from \"@/api/elderlySupport\";\nimport dayjs from \"dayjs\";\nimport { useAlertHistoryColumns } from \"./Utiles/utiles2\";\nexport default function AlertsList() {\n  const [search, setSearch] = useState(\"\");\n  const columns = useElderlyTableColumns(\"support_agent\");\n  const alertHistoryColumns = useAlertHistoryColumns(\"alertHistory\");\n  const [loading, setLoading] = useState(true);\n  const [page, SetPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [alertQuery, setAlertQuery] = useState({});\n  const [alertHistory, setAlertHistory] = useState([]);\n  const [alertHistiryQuery, setAlertHistiryQuery] = useState(null);\n\n  const getAlartsHistory = useCallback(() => {\n    setLoading(true);\n    getAlertList({\n      to_date: \"2024-11-30\",\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\n      is_resolved: true,\n      page: page,\n      ...alertQuery,\n      ...alertHistiryQuery,\n    })\n      .then((res) => {\n        setTotal(res.total);\n        setAlertHistory(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  }, [page, alertQuery, alertHistiryQuery]);\n  useEffect(() => {\n    getAlartsHistory();\n  }, [getAlartsHistory]);\n  function handBlurchange() {\n    setAlertQuery({ elderly_name: search.trim() });\n  }\n  function onAlertHistorySegmantChnage(value) {\n    SetPage(1);\n    setAlertHistiryQuery(getAlertsGroup(value));\n  }\n  return (\n    <>\n      <div\n        id=\"Elderlies\"\n        className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6 mt-8\"\n      >\n        <div id=\"Elderlies_Header\" className=\"w-full flex justify-between\">\n          <h1 className=\"text-[24px] font-bold\">Alerts</h1>\n          <div className=\"flex gap-4 items-center\">\n            {/* <ConfigProvider\n              theme={{\n                token: {\n                  fontFamily: \"Baloo2\",\n                  colorPrimary: \"#8086AC\",\n                  colorLinkActive: \"#8086AC\",\n                  colorLinkHover: \"#8086AC\",\n                  colorLink: \"#8086AC\",\n                },\n              }}\n            >\n              <Select\n                size=\"large\"\n                options={elderlyListSelectOptions}\n                defaultValue={elderlyListSelectOptions[0].value}\n                onChange={(value) => console.log(value)}\n              />\n            </ConfigProvider> */}\n            <div>\n              <ConfigProvider\n              // theme={{\n              //   components: {\n              //     Segmented: {\n              //       itemSelectedBg: \"#252F67\",\n              //       itemSelectedColor: \"#fff\",\n              //       fontFamily: \"Baloo2\",\n              //     },\n              //   },\n              // }}\n              >\n                <Segmented\n                  options={alertHistorySegmentOptions}\n                  onChange={(value) => onAlertHistorySegmantChnage(value)}\n                  size=\"large\"\n                />\n              </ConfigProvider>\n            </div>\n            <SearchInput\n              search={search}\n              setSearch={setSearch}\n              handBlurchange={handBlurchange}\n              placeholder=\"Search Elderlies\"\n            />\n          </div>\n        </div>\n        <SidebarContext.Provider\n          value={{\n            total: total,\n            page: 1,\n            SetPage,\n          }}\n        >\n          <CustomTable\n            columns={alertHistoryColumns}\n            tableData={alertHistory}\n            loading={loading}\n          />\n        </SidebarContext.Provider>\n      </div>\n    </>\n  );\n}\nexport const elderlyListSegmentOptions = [\n  \"All Elderlies\",\n  \"With Alerts\",\n  \"With Diseases\",\n  \"With Allergies\",\n  \"Taking Medications\",\n];\nexport const elderlyListSelectOptions = [\n  { label: \"All Elderlies\", value: \"All Elderlies\" },\n  { label: \"With Alerts\", value: \"With Alerts\" },\n  { label: \"With Diseases\", value: \"With Diseases\" },\n  { label: \"With Allergies\", value: \"With Allergies\" },\n  { label: \"Taking Medications\", value: \"Taking Medications\" },\n];\nexport const alertHistorySegmentOptions = [\n  {\n    label: \"All Alerts\",\n    value: \"All Alerts\",\n  },\n  {\n    label: \"Critical\",\n    value: \"Critical\",\n  },\n  {\n    label: \"Warning\",\n    value: \"Warning\",\n  },\n  // {\n  //   label: \"Informational\",\n  //   value: \"Info\",\n  // },\n];\n"],"names":["useElderlyTableColumns","role","navigate","useNavigate","randomId","handleViewClick","row","elderlyTableColsMapping","elderlyTableColumns","jsx","Elderly","text","jsxs","LuNavigation","elderlyTableColumn","setElderlyTableColumns","useState","useEffect","cols","col","generateRandomAlerts","count","alertTypes","rooms","names","alertNames","eventNames","disabilityTypes","allergies","diseases","medications","activeAlert","isAlert","_","index","useAlertHistoryColumns","type","rolesFormatter","useContext","SidebarContext","alertTableColumns","setAlertTableColumns","alertColsMapping","AlertsTableColumns","AlertName","event","_a","getAlertInfoViaEventDetails","transformDateAndTime","transformDateAndTimeToDuration","LargeTextViewerModal","LuEye","AlertsList","search","setSearch","alertHistoryColumns","loading","setLoading","page","SetPage","total","setTotal","alertQuery","setAlertQuery","alertHistory","setAlertHistory","alertHistiryQuery","setAlertHistiryQuery","getAlartsHistory","useCallback","getAlertList","dayjs","res","err","handBlurchange","onAlertHistorySegmantChnage","value","getAlertsGroup","Fragment","ConfigProvider","Segmented","alertHistorySegmentOptions","SearchInput","CustomTable","elderlyListSegmentOptions","elderlyListSelectOptions"],"mappings":"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"}