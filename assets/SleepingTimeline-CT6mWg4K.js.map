{"version":3,"file":"SleepingTimeline-CT6mWg4K.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Sleep/Components/SleepingTimeline.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport TimelineGraph from \"@/Components/GraphAndChart/TimelineGraph\";\r\nimport { Button } from \"antd\";\r\nimport { FileOutlined } from \"@ant-design/icons\";\r\nimport SummaryModal from \"@/Components/SummaryModal/SummaryModal\";\r\nimport { FaTimeline } from \"react-icons/fa6\";\r\nimport { getSleepSummary } from \"@/api/deviceReports\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\r\nimport { transformTime } from \"@/utils/helper\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport SkeletonSleepingTimeline from \"@/components/Skeleton/SkeletonSleepingTimeline\";\r\nimport { formatTimeWithSuffix } from \"@/utils/helper\";\r\n\r\nconst TimelineItem = ({ time, ItemName, color }) => {\r\n  return (\r\n    <div\r\n      className={`flex p-[4px] pr-4 items-center gap-2 rounded-xl`}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <span className=\"text-[17px] p-2 py-1 font-bold bg-white rounded-[9px] text-primary\">\r\n        {time}\r\n      </span>\r\n      <span className=\"text-[15px] font-medium text-white leading-[1.2]\">\r\n        {ItemName}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SleepingTimeline() {\r\n  const { sleepData, elderlyDetails, sleepDataLoading } =\r\n    useContext(CustomContext);\r\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const summaryProps = {\r\n    title: \"Sleep Timeline Summary\",\r\n    pickerTypes: [\"day\", \"range\"],\r\n    chartType: \"multibar\",\r\n    dataType: \"duration\",\r\n    color: \"#FF725E\",\r\n    icon: <FaTimeline />,\r\n    apisProps: {\r\n      endpoint: getSleepSummary,\r\n      query: {\r\n        uids: elderlyDetails?.deviceId,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sleepData) return;\r\n    const aggregatedEvents = sleepData?.statistical_data?.reduce(\r\n      (acc, data) => {\r\n        const startTime = new Date(data.start_time);\r\n        const endTime = new Date(data.end_time);\r\n        const durationInMinutes = (endTime - startTime) / (1000 * 60);\r\n        const statusName = sleepEventsType[data.status];\r\n        if (!acc[statusName]) {\r\n          acc[statusName] = {\r\n            duration: 0,\r\n            color: sleepEventsColor[statusName],\r\n          };\r\n        }\r\n        acc[statusName].duration += durationInMinutes;\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n\r\n    const events = Object.entries(aggregatedEvents || {}).map(\r\n      ([name, { duration, color }]) => {\r\n        const hours = Math.floor(duration / 60);\r\n        const minutes = Math.floor(duration % 60);\r\n        return {\r\n          name,\r\n          duration: `${hours}hr ${minutes}m`,\r\n          color,\r\n        };\r\n      }\r\n    );\r\n\r\n    setEvents([...events]);\r\n  }, [sleepData, sleepEventsType, sleepEventsColor]);\r\n\r\n  return (\r\n    <Template\r\n      title=\"Sleep Timeline\"\r\n      color=\"#FF725E\"\r\n      icon={<FaTimeline />}\r\n      isDataAnalysis={false}\r\n      headerClassName=\"!text-2xl\"\r\n      summaryProps={summaryProps}\r\n    >\r\n      {sleepDataLoading ? (\r\n        <SkeletonSleepingTimeline />\r\n      ) : (\r\n        <>\r\n          <TimelineGraph\r\n            statisticalData={sleepData?.statistical_data}\r\n            enterBedTime={formatTimeWithSuffix(sleepData?.get_bed_idx)}\r\n            getupAfterTime={formatTimeWithSuffix(sleepData?.leave_bed_idx)}\r\n            noDataText=\"No Data Detected for Today\"\r\n          />\r\n          <div className=\"flex flex-wrap gap-4 items-center justify-center\">\r\n            {sleepData && sleepData?.leave_bed_idx && (\r\n              <TimelineItem\r\n                time={formatTimeWithSuffix(sleepData?.sleep_st_idx)}\r\n                ItemName={\"Fall Asleep\"}\r\n                color={\"#AAA492\"}\r\n              />\r\n            )}\r\n            {events.map((item, i) => (\r\n              <TimelineItem\r\n                key={i}\r\n                time={item.duration}\r\n                ItemName={item.name}\r\n                color={item.color}\r\n              />\r\n            ))}\r\n            {sleepData && sleepData?.sleep_ed_idx && (\r\n              <TimelineItem\r\n                time={formatTimeWithSuffix(sleepData?.sleep_ed_idx)}\r\n                ItemName={\"Wake Up\"}\r\n                color={\"#AAA492\"}\r\n              />\r\n            )}\r\n            {/* {sleepData && sleepData?.leave_bed_count && (\r\n              <TimelineItem\r\n                time={sleepData?.leave_bed_count + \"x\"}\r\n                ItemName={\"Leave bed after sleep\"}\r\n                color={\"#FF725E\"}\r\n              />\r\n            )} */}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Template>\r\n  );\r\n}\r\n"],"names":["TimelineItem","time","ItemName","color","jsxs","jsx","SleepingTimeline","sleepData","elderlyDetails","sleepDataLoading","useContext","CustomContext","sleepEventsType","sleepEventsColor","SidebarContext","events","setEvents","useState","summaryProps","FaTimeline","getSleepSummary","useEffect","aggregatedEvents","_a","acc","data","startTime","durationInMinutes","statusName","name","duration","hours","minutes","Template","SkeletonSleepingTimeline","Fragment","TimelineGraph","formatTimeWithSuffix","item","i"],"mappings":"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"}